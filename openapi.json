{
  "openapi": "3.1.0",
  "info": {
    "title": "SynapScale Backend API",
    "description": "\n    üöÄ **SynapScale Backend API** - Plataforma de Automa√ß√£o com IA\n    \n    API robusta e escal√°vel para gerenciamento de workflows, agentes AI e automa√ß√µes.\n    **VERS√ÉO OTIMIZADA COM CONFIGURA√á√ÉO CENTRALIZADA E LLM UNIFICADO**\n    \n    ## Funcionalidades Principais\n    \n    * **üîê Autentica√ß√£o**: Sistema completo de autentica√ß√£o e autoriza√ß√£o\n    * **‚ö° Workflows**: Cria√ß√£o e execu√ß√£o de workflows de automa√ß√£o\n    * **ü§ñ LLM Unificado**: Integra√ß√£o centralizada com OpenAI, Anthropic, Google e outros provedores\n    * **ü§ñ Agentes AI**: Automa√ß√£o inteligente com m√∫ltiplos provedores\n    * **üîó Nodes**: Componentes reutiliz√°veis para workflows\n    * **üí¨ Conversas**: Hist√≥rico e gerenciamento de conversas\n    * **üìÅ Arquivos**: Upload e gerenciamento de arquivos\n    \n    ## Sistema LLM Unificado\n    \n    * **Endpoints Centralizados**: Todos em `/llm/*` para facilitar integra√ß√£o\n    * **Multi-Provider**: OpenAI, Anthropic, Google, Meta e mais\n    * **Cache Inteligente**: Redis para otimiza√ß√£o de performance\n    * **Gest√£o de Tokens**: Controle preciso de uso e custos\n    * **Valida√ß√£o de DB**: Valida√ß√£o em tempo real dos modelos dispon√≠veis\n    \n    ## Seguran√ßa\n    \n    * Autentica√ß√£o JWT robusta\n    * Valida√ß√£o de dados com Pydantic\n    * Rate limiting implementado\n    * CORS configurado adequadamente\n    \n    ## Sistema Centralizado\n    \n    Esta vers√£o implementa sistema de configura√ß√£o centralizada que elimina\n    todas as duplica√ß√µes e melhora a manutenibilidade.\n    ",
    "version": "2.0.0"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Health Check Endpoint",
        "description": "Verifica√ß√£o de sa√∫de da aplica√ß√£o com detalhes completos",
        "operationId": "health_check_endpoint_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health/detailed": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Detailed Health Check",
        "description": "Health check detalhado com estat√≠sticas de banco e provedores",
        "operationId": "detailed_health_check_health_detailed_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Root",
        "description": "Endpoint raiz da API com informa√ß√µes gerais",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Api Info",
        "description": "Informa√ß√µes detalhadas sobre a API e configura√ß√µes p√∫blicas",
        "operationId": "api_info_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/current-url": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Get Current Url",
        "description": "Retorna a URL atual da requisi√ß√£o",
        "operationId": "get_current_url_current_url_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/.identity": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Get Identity",
        "description": "Retorna informa√ß√µes de identidade do servi√ßo",
        "operationId": "get_identity__identity_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/docs-login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "üîê Login para Documenta√ß√£o Swagger",
        "description": "**Endpoint especial para facilitar o login na documenta√ß√£o Swagger**\n    \n    ## üìù Como usar na documenta√ß√£o:\n    \n    ### ‚úÖ M√©todo Recomendado (2 passos):\n    \n    #### Passo 1: Obter Token\n    1. **Clique no bot√£o \"Authorize\"** üîì no topo da documenta√ß√£o\n    2. **No modal de autoriza√ß√£o**:\n       - Encontre a se√ß√£o **\"HTTPBasic\"**\n       - Digite seu **email** no campo \"Username\"\n       - Digite sua **senha** no campo \"Password\"  \n       - Clique em **\"Authorize\"** nesta se√ß√£o\n    3. **Execute este endpoint** (/auth/docs-login) para obter o token JWT\n    \n    #### Passo 2: Usar Token\n    4. **Copie o `access_token`** da resposta\n    5. **No modal de autoriza√ß√£o**:\n       - Encontre a se√ß√£o **\"HTTPBearer\"**\n       - Cole o token no campo \"Value\"\n       - Clique em **\"Authorize\"** nesta se√ß√£o\n    6. **Pronto!** Agora voc√™ pode usar todos os endpoints\n    \n    ## üîÑ Fluxo Alternativo:\n    \n    Use diretamente o endpoint `/auth/login` com form data se preferir.\n    \n    ## ‚ö†Ô∏è Importante:\n    \n    - Use **HTTPBasic** apenas para este endpoint\n    - Use **HTTPBearer** para todos os outros endpoints\n    - O token expira em 30 minutos",
        "operationId": "docs_login_api_v1_auth_docs_login_post",
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Docs Login Api V1 Auth Docs Login Post"
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inv√°lidas"
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Registrar novo usu√°rio",
        "description": "Registra um novo usu√°rio na plataforma.\n\n- **email**: Email do usu√°rio (√∫nico)\n- **username**: Nome de usu√°rio (√∫nico)\n- **full_name**: Nome completo\n- **password**: Senha forte\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"email\": \"usuario@exemplo.com\",\n  \"username\": \"joao_silva\",\n  \"full_name\": \"Jo√£o Silva\",\n  \"password\": \"SenhaForte123!\"\n}\n```",
        "operationId": "register_user_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Usu√°rio registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Register User Api V1 Auth Register Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login flex√≠vel do usu√°rio",
        "description": "**Endpoint de login flex√≠vel que aceita m√∫ltiplos formatos de entrada:**\n    \n    ## üîÑ Formatos Aceitos:\n    \n    ### 1. JSON (application/json):\n    ```json\n    {\n        \"username\": \"user@example.com\",\n        \"password\": \"password123\"\n    }\n    ```\n    \n    ### 2. Form Data (application/x-www-form-urlencoded):\n    ```\n    username=user@example.com&password=password123\n    ```\n    \n    ### 3. Via cURL (qualquer formato):\n    ```bash\n    # JSON\n    curl -X POST \"http://localhost:8000/api/v1/auth/login\"          -H \"Content-Type: application/json\"          -d '{\"username\":\"user@example.com\",\"password\":\"password123\"}'\n    \n    # Form data\n    curl -X POST \"http://localhost:8000/api/v1/auth/login\"          -H \"Content-Type: application/x-www-form-urlencoded\"          -d \"username=user@example.com&password=password123\"\n    ```\n    \n    ## üîë Campos de Login:\n    - **username**: Aceita tanto **email** quanto **username**\n    - **password**: Senha do usu√°rio\n    \n    O sistema automaticamente busca por email OU username na base de dados.",
        "operationId": "login_api_v1_auth_login_post",
        "responses": {
          "200": {
            "description": "Tokens de acesso e refresh gerados",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Login Api V1 Auth Login Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Renovar token de acesso",
        "description": "Renova o token de acesso usando um refresh token v√°lido.\n\n- **refresh_token**: Token de atualiza√ß√£o v√°lido\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n```",
        "operationId": "refresh_token_api_v1_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Novo token de acesso gerado",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Refresh Token Api V1 Auth Refresh Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout do usu√°rio",
        "description": "Faz logout do usu√°rio revogando o refresh token informado.\n\n- **refresh_token**: Token de atualiza√ß√£o a ser revogado\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n```",
        "operationId": "logout_api_v1_auth_logout_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Logout Api V1 Auth Logout Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/logout-all": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout de todos os dispositivos",
        "description": "Faz logout de todos os dispositivos revogando todos os refresh tokens do usu√°rio autenticado.\n\nN√£o requer corpo de requisi√ß√£o.",
        "operationId": "logout_all_api_v1_auth_logout_all_post",
        "responses": {
          "200": {
            "description": "Logout de todos os dispositivos realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Logout All Api V1 Auth Logout All Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Obter informa√ß√µes do usu√°rio autenticado",
        "description": "Retorna as informa√ß√µes do usu√°rio atualmente autenticado.\n\nN√£o requer corpo de requisi√ß√£o.",
        "operationId": "get_current_user_info_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Dados do usu√°rio autenticado retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Current User Info Api V1 Auth Me Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/verify-email": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Verificar email do usu√°rio",
        "description": "Verifica o email do usu√°rio usando o token de verifica√ß√£o.\n\n- **token**: Token de verifica√ß√£o recebido por email\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"token\": \"abc123def456...\"\n}\n```",
        "operationId": "verify_email_api_v1_auth_verify_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Email verificado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Verify Email Api V1 Auth Verify Email Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/resend-verification": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Reenviar email de verifica√ß√£o",
        "description": "Reenvia o email de verifica√ß√£o para o usu√°rio autenticado.\n\nN√£o requer corpo de requisi√ß√£o.",
        "operationId": "resend_verification_email_api_v1_auth_resend_verification_post",
        "responses": {
          "200": {
            "description": "Email de verifica√ß√£o reenviado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Resend Verification Email Api V1 Auth Resend Verification Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Solicitar redefini√ß√£o de senha",
        "description": "Solicita redefini√ß√£o de senha enviando um token por email.\n\n- **email**: Email do usu√°rio\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"email\": \"usuario@exemplo.com\"\n}\n```",
        "operationId": "forgot_password_api_v1_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Instru√ß√µes de redefini√ß√£o enviadas se o email existir",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Forgot Password Api V1 Auth Forgot Password Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Redefinir senha do usu√°rio",
        "description": "Redefine a senha do usu√°rio usando o token de redefini√ß√£o.\n\n- **token**: Token de redefini√ß√£o recebido por email\n- **new_password**: Nova senha\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"token\": \"abc123def456...\",\n  \"new_password\": \"NovaSenhaForte123!\"\n}\n```",
        "operationId": "reset_password_api_v1_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Senha redefinida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Reset Password Api V1 Auth Reset Password Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Alterar senha do usu√°rio autenticado",
        "description": "Altera a senha do usu√°rio autenticado.\n\n- **current_password**: Senha atual\n- **new_password**: Nova senha\n\nExemplo de corpo (x-www-form-urlencoded):\n```\ncurrent_password=SenhaAtual123!&new_password=NovaSenhaForte123!\n```",
        "operationId": "change_password_api_v1_auth_change_password_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_change_password_api_v1_auth_change_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Senha alterada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Change Password Api V1 Auth Change Password Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/account": {
      "delete": {
        "tags": [
          "authentication"
        ],
        "summary": "Excluir conta do usu√°rio autenticado",
        "description": "Exclui a conta do usu√°rio autenticado.\n\n- **password**: Senha do usu√°rio para confirma√ß√£o\n\nExemplo de corpo (x-www-form-urlencoded):\n```\npassword=SenhaForte123!\n```",
        "operationId": "delete_account_api_v1_auth_account_delete",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_delete_account_api_v1_auth_account_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Conta exclu√≠da com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Delete Account Api V1 Auth Account Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/test-token": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "üß™ Teste de Token JWT",
        "description": "**Endpoint para testar se a autentica√ß√£o JWT est√° funcionando**\n    \n    Use este endpoint para verificar se:\n    - Seu token JWT est√° v√°lido\n    - A autentica√ß√£o est√° funcionando corretamente\n    - O usu√°rio est√° sendo identificado\n    \n    ## üìù Como usar:\n    1. Fa√ßa login com `/auth/docs-login` ou `/auth/login`\n    2. Configure o token Bearer no bot√£o \"Authorize\"\n    3. Execute este endpoint para testar\n    \n    Se estiver funcionando, voc√™ ver√° suas informa√ß√µes de usu√°rio.",
        "operationId": "test_token_api_v1_auth_test_token_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Test Token Api V1 Auth Test Token Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/test-hybrid-auth": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "üß™ Teste de Autentica√ß√£o H√≠brida",
        "description": "**Endpoint para testar se a autentica√ß√£o h√≠brida est√° funcionando**\n    \n    Este endpoint aceita **AMBOS** os m√©todos de autentica√ß√£o:\n    - **HTTPBearer**: Token JWT no header Authorization\n    - **HTTPBasic**: Email/senha diretamente no modal de autoriza√ß√£o\n    \n    ## üìù Como usar:\n    \n    ### Op√ß√£o 1: HTTPBearer (Token JWT)\n    1. Fa√ßa login com `/auth/login` ou `/auth/docs-login`\n    2. No modal \"Authorize\", se√ß√£o **HTTPBearer**:\n       - Cole o token JWT no campo \"Value\"\n       - Clique \"Authorize\"\n    3. Execute este endpoint\n    \n    ### Op√ß√£o 2: HTTPBasic (Email/Senha)\n    1. No modal \"Authorize\", se√ß√£o **HTTPBasic**:\n       - Digite seu **email** no campo \"Username\"\n       - Digite sua **senha** no campo \"Password\"\n       - Clique \"Authorize\"\n    2. Execute este endpoint\n    \n    ## ‚úÖ Resultado:\n    Se funcionando corretamente, voc√™ ver√° suas informa√ß√µes de usu√°rio\n    independente do m√©todo de autentica√ß√£o usado.",
        "operationId": "test_hybrid_authentication_api_v1_auth_test_hybrid_auth_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Test Hybrid Authentication Api V1 Auth Test Hybrid Auth Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/users/profile": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get User Profile",
        "description": "Obter perfil do usu√°rio atual",
        "operationId": "get_user_profile_api_v1_users_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      },
      "put": {
        "tags": [
          "authentication"
        ],
        "summary": "Update User Profile",
        "description": "Atualizar perfil do usu√°rio atual",
        "operationId": "update_user_profile_api_v1_users_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "List Users",
        "description": "Listar usu√°rios (apenas superusu√°rios)",
        "operationId": "list_users_api_v1_users__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Tamanho da p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Tamanho da p√°gina"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por nome, email ou username",
              "title": "Search"
            },
            "description": "Buscar por nome, email ou username"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por usu√°rios ativos",
              "title": "Is Active"
            },
            "description": "Filtrar por usu√°rios ativos"
          },
          {
            "name": "is_verified",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por usu√°rios verificados",
              "title": "Is Verified"
            },
            "description": "Filtrar por usu√°rios verificados"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get User",
        "description": "Obter usu√°rio por ID",
        "operationId": "get_user_api_v1_users__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "authentication"
        ],
        "summary": "Update User",
        "description": "Atualizar usu√°rio (apenas superusu√°rios)",
        "operationId": "update_user_api_v1_users__user_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "authentication"
        ],
        "summary": "Delete User",
        "description": "Deletar usu√°rio (apenas superusu√°rios)",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/activate": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Activate User",
        "description": "Ativar usu√°rio (apenas superusu√°rios)",
        "operationId": "activate_user_api_v1_users__user_id__activate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/deactivate": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Deactivate User",
        "description": "Desativar usu√°rio (apenas superusu√°rios)",
        "operationId": "deactivate_user_api_v1_users__user_id__deactivate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get My Tenant",
        "description": "Obter tenant do usu√°rio atual",
        "operationId": "get_my_tenant_api_v1_tenants_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/tenants/": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "List Tenants",
        "description": "Listar todos os tenants (apenas superusu√°rios)",
        "operationId": "list_tenants_api_v1_tenants__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Tamanho da p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Tamanho da p√°gina"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por nome, slug ou dom√≠nio",
              "title": "Search"
            },
            "description": "Buscar por nome, slug ou dom√≠nio"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TenantStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          },
          {
            "name": "plan_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por plano",
              "title": "Plan Id"
            },
            "description": "Filtrar por plano"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Create Tenant",
        "description": "Criar novo tenant (apenas superusu√°rios)",
        "operationId": "create_tenant_api_v1_tenants__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/{tenant_id}": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Tenant",
        "description": "Obter tenant espec√≠fico (apenas superusu√°rios)",
        "operationId": "get_tenant_api_v1_tenants__tenant_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "authentication"
        ],
        "summary": "Update Tenant",
        "description": "Atualizar tenant (apenas superusu√°rios)",
        "operationId": "update_tenant_api_v1_tenants__tenant_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "authentication"
        ],
        "summary": "Delete Tenant",
        "description": "Deletar tenant (apenas superusu√°rios)",
        "operationId": "delete_tenant_api_v1_tenants__tenant_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/{tenant_id}/activate": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Activate Tenant",
        "description": "Ativar tenant (apenas superusu√°rios)",
        "operationId": "activate_tenant_api_v1_tenants__tenant_id__activate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/{tenant_id}/suspend": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Suspend Tenant",
        "description": "Suspender tenant (apenas superusu√°rios)",
        "operationId": "suspend_tenant_api_v1_tenants__tenant_id__suspend_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llms/": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "List Llms",
        "description": "Listar modelos LLM dispon√≠veis",
        "operationId": "list_llms_api_v1_llms__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Tamanho da p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Tamanho da p√°gina"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por nome ou provedor",
              "title": "Search"
            },
            "description": "Buscar por nome ou provedor"
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por provedor",
              "title": "Provider"
            },
            "description": "Filtrar por provedor"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar modelos ativos",
              "title": "Is Active"
            },
            "description": "Filtrar modelos ativos"
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar modelos p√∫blicos",
              "title": "Is Public"
            },
            "description": "Filtrar modelos p√∫blicos"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Create Llm",
        "description": "Criar novo modelo LLM",
        "operationId": "create_llm_api_v1_llms__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llms/{llm_id}": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "Get Llm",
        "description": "Obter LLM por ID",
        "operationId": "get_llm_api_v1_llms__llm_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "llm_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Llm Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ai"
        ],
        "summary": "Update Llm",
        "description": "Atualizar LLM",
        "operationId": "update_llm_api_v1_llms__llm_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "llm_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Llm Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ai"
        ],
        "summary": "Delete Llm",
        "description": "Deletar LLM",
        "operationId": "delete_llm_api_v1_llms__llm_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "llm_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Llm Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llms/{llm_id}/conversations": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "List Llm Conversations",
        "description": "Listar conversas do LLM",
        "operationId": "list_llm_conversations_api_v1_llms__llm_id__conversations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "llm_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Llm Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Size"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por workspace",
              "title": "Workspace Id"
            },
            "description": "Filtrar por workspace"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMConversationListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Create Llm Conversation",
        "description": "Criar nova conversa com LLM",
        "operationId": "create_llm_conversation_api_v1_llms__llm_id__conversations_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "llm_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Llm Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMConversationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMConversationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llms/conversations/{conversation_id}/messages": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "List Conversation Messages",
        "description": "Listar mensagens da conversa",
        "operationId": "list_conversation_messages_api_v1_llms_conversations__conversation_id__messages_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMMessageListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Create Conversation Message",
        "description": "Adicionar mensagem √† conversa",
        "operationId": "create_conversation_message_api_v1_llms_conversations__conversation_id__messages_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMMessageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "List Conversations",
        "description": "Listar conversas do usu√°rio com filtros e pagina√ß√£o",
        "operationId": "list_conversations_api_v1_conversations__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in title or messages",
              "title": "Search"
            },
            "description": "Search in title or messages"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status (active, archived, deleted)",
              "title": "Status"
            },
            "description": "Filter by status (active, archived, deleted)"
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by agent",
              "title": "Agent Id"
            },
            "description": "Filter by agent"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationResponse"
                  },
                  "title": "Response List Conversations Api V1 Conversations  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Create Conversation",
        "description": "Criar nova conversa√ß√£o",
        "operationId": "create_conversation_api_v1_conversations__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "Get Conversation",
        "description": "Obter conversa√ß√£o espec√≠fica",
        "operationId": "get_conversation_api_v1_conversations__conversation_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ai"
        ],
        "summary": "Delete Conversation",
        "description": "Deletar conversa√ß√£o",
        "operationId": "delete_conversation_api_v1_conversations__conversation_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}/messages": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "List Messages",
        "description": "Listar mensagens da conversa√ß√£o",
        "operationId": "list_messages_api_v1_conversations__conversation_id__messages_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageResponse"
                  },
                  "title": "Response List Messages Api V1 Conversations  Conversation Id  Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Send Message",
        "description": "Enviar mensagem na conversa√ß√£o",
        "operationId": "send_message_api_v1_conversations__conversation_id__messages_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}/title": {
      "put": {
        "tags": [
          "ai"
        ],
        "summary": "Update Conversation Title",
        "description": "Atualizar t√≠tulo da conversa√ß√£o",
        "operationId": "update_conversation_title_api_v1_conversations__conversation_id__title_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationTitleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}/archive": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Archive Conversation",
        "description": "Arquivar conversa√ß√£o",
        "operationId": "archive_conversation_api_v1_conversations__conversation_id__archive_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}/unarchive": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Unarchive Conversation",
        "description": "Desarquivar conversa√ß√£o",
        "operationId": "unarchive_conversation_api_v1_conversations__conversation_id__unarchive_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback/messages/{message_id}/feedback": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Registrar feedback de mensagem",
        "operationId": "create_feedback_api_v1_feedback_messages__message_id__feedback_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Feedback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "Listar feedbacks de uma mensagem",
        "operationId": "list_feedbacks_for_message_api_v1_feedback_messages__message_id__feedback_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback/": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "Listar feedbacks gerais",
        "operationId": "list_feedbacks_api_v1_feedback__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "List Agents",
        "description": "Listar agentes do usu√°rio",
        "operationId": "list_agents_api_v1_agents__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Tamanho da p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Tamanho da p√°gina"
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por workspace",
              "title": "Workspace Id"
            },
            "description": "Filtrar por workspace"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por nome ou descri√ß√£o",
              "title": "Search"
            },
            "description": "Buscar por nome ou descri√ß√£o"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AgentStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          },
          {
            "name": "environment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AgentEnvironment"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por ambiente",
              "title": "Environment"
            },
            "description": "Filtrar por ambiente"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por escopo",
              "title": "Scope"
            },
            "description": "Filtrar por escopo"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar agentes ativos",
              "title": "Is Active"
            },
            "description": "Filtrar agentes ativos"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Create Agent",
        "description": "Criar novo agente",
        "operationId": "create_agent_api_v1_agents__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get Agent",
        "description": "Obter agente por ID",
        "operationId": "get_agent_api_v1_agents__agent_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "agents"
        ],
        "summary": "Update Agent",
        "description": "Atualizar agente",
        "operationId": "update_agent_api_v1_agents__agent_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "agents"
        ],
        "summary": "Delete Agent",
        "description": "Deletar agente",
        "operationId": "delete_agent_api_v1_agents__agent_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}/activate": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Activate Agent",
        "description": "Ativar agente",
        "operationId": "activate_agent_api_v1_agents__agent_id__activate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}/deactivate": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Deactivate Agent",
        "description": "Desativar agente",
        "operationId": "deactivate_agent_api_v1_agents__agent_id__deactivate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}/clone": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Clone Agent",
        "description": "Clonar agente",
        "operationId": "clone_agent_api_v1_agents__agent_id__clone_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          },
          {
            "name": "new_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Nome para o clone",
              "title": "New Name"
            },
            "description": "Nome para o clone"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/tools/test": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Test Endpoint",
        "description": "Endpoint de teste para Agent Tools",
        "operationId": "test_endpoint_agent_tools",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/models/test": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Test Endpoint",
        "description": "Endpoint de teste para Agent Models",
        "operationId": "test_endpoint_agent_models",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/configs/test": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Test Endpoint",
        "description": "Endpoint de teste para Agent Configurations",
        "operationId": "test_endpoint_agent_configurations",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/advanced/advanced": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get Advanced Features",
        "description": "Obter recursos avan√ßados do agente",
        "operationId": "get_advanced_features_api_v1_agents_advanced_advanced_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Advanced Features Api V1 Agents Advanced Advanced Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/agents/quotas/daily": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Create Daily Quota",
        "description": "Create a daily quota for an agent.",
        "operationId": "create_daily_quota_api_v1_agents_quotas_daily_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentQuotaCreateDaily"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentQuotaBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/agents/quotas/hourly": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Create Hourly Quota",
        "description": "Create an hourly quota for an agent.",
        "operationId": "create_hourly_quota_api_v1_agents_quotas_hourly_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentQuotaCreateHourly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentQuotaBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/agents/quotas/monthly": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Create Monthly Quota",
        "description": "Create a monthly quota for an agent.",
        "operationId": "create_monthly_quota_api_v1_agents_quotas_monthly_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentQuotaCreateMonthly"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentQuotaBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/agents/quotas/{quota_id}": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get Quota",
        "description": "Get a specific quota by its ID.",
        "operationId": "get_quota_api_v1_agents_quotas__quota_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "quota_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quota Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentQuotaBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "agents"
        ],
        "summary": "Update Quota",
        "description": "Update an existing quota.",
        "operationId": "update_quota_api_v1_agents_quotas__quota_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "quota_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quota Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentQuotaUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentQuotaBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "agents"
        ],
        "summary": "Delete Quota",
        "description": "Delete a quota.",
        "operationId": "delete_quota_api_v1_agents_quotas__quota_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "quota_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quota Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/quotas/": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "List Quotas",
        "description": "List all quotas for the current tenant.",
        "operationId": "list_quotas_api_v1_agents_quotas__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by agent ID",
              "title": "Agent Id"
            },
            "description": "Filter by agent ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentQuotaListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/quotas/{quota_id}/check": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Check Quota Usage",
        "description": "Check current usage against quota limits.",
        "operationId": "check_quota_usage_api_v1_agents_quotas__quota_id__check_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "quota_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quota Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentQuotaUsageCheck"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/knowledge-bases/": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Create Knowledge Base",
        "description": "Create a new knowledge base.",
        "operationId": "create_knowledge_base_api_v1_knowledge_bases__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KnowledgeBaseCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "List Knowledge Bases",
        "description": "List all knowledge bases for the current tenant.",
        "operationId": "list_knowledge_bases_api_v1_knowledge_bases__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in title and content",
              "title": "Search"
            },
            "description": "Search in title and content"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/knowledge-bases/{kb_id}": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get Knowledge Base",
        "description": "Get a specific knowledge base by its ID.",
        "operationId": "get_knowledge_base_api_v1_knowledge_bases__kb_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "kb_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Kb Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "agents"
        ],
        "summary": "Update Knowledge Base",
        "description": "Update an existing knowledge base.",
        "operationId": "update_knowledge_base_api_v1_knowledge_bases__kb_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "kb_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Kb Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KnowledgeBaseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "agents"
        ],
        "summary": "Delete Knowledge Base",
        "description": "Delete a knowledge base.",
        "operationId": "delete_knowledge_base_api_v1_knowledge_bases__kb_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "kb_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Kb Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/knowledge-bases/search": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Search Knowledge Bases",
        "description": "Advanced search in knowledge bases.",
        "operationId": "search_knowledge_bases_api_v1_knowledge_bases_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KnowledgeBaseSearch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBaseResponse"
                  },
                  "type": "array",
                  "title": "Response Search Knowledge Bases Api V1 Knowledge Bases Search Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/knowledge-bases/{kb_id}/sync": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Sync Knowledge Base",
        "description": "Sync knowledge base with external sources.",
        "operationId": "sync_knowledge_base_api_v1_knowledge_bases__kb_id__sync_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "kb_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Kb Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseIndexing"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/knowledge-bases/{kb_id}/stats": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get Knowledge Base Stats",
        "description": "Get statistics for a knowledge base.",
        "operationId": "get_knowledge_base_stats_api_v1_knowledge_bases__kb_id__stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "kb_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Kb Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseStatistics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/knowledge-bases/{kb_id}/export": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Export Knowledge Base",
        "description": "Export knowledge base data.",
        "operationId": "export_knowledge_base_api_v1_knowledge_bases__kb_id__export_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "kb_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Kb Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Export format (json, csv, txt)",
              "default": "json",
              "title": "Format"
            },
            "description": "Export format (json, csv, txt)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseExport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Workflows",
        "description": "Listar workflows do usu√°rio com filtros e pagina√ß√£o",
        "operationId": "list_workflows_api_v1_workflows__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in name or description",
              "title": "Search"
            },
            "description": "Search in name or description"
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by workspace",
              "title": "Workspace Id"
            },
            "description": "Filter by workspace"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status"
            },
            "description": "Filter by status"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowResponse"
                  },
                  "title": "Response List Workflows Api V1 Workflows  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Workflow",
        "description": "Criar workflow",
        "operationId": "create_workflow_api_v1_workflows__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Workflow",
        "description": "Obter workflow espec√≠fico",
        "operationId": "get_workflow_api_v1_workflows__workflow_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Workflow",
        "description": "Atualizar workflow",
        "operationId": "update_workflow_api_v1_workflows__workflow_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Delete Workflow",
        "description": "Deletar workflow",
        "operationId": "delete_workflow_api_v1_workflows__workflow_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}/execute": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Execute Workflow",
        "description": "Executar workflow",
        "operationId": "execute_workflow_api_v1_workflows__workflow_id__execute_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowExecutionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}/executions": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Workflow Executions",
        "description": "Listar execu√ß√µes do workflow",
        "operationId": "list_workflow_executions_api_v1_workflows__workflow_id__executions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowExecutionResponse"
                  },
                  "title": "Response List Workflow Executions Api V1 Workflows  Workflow Id  Executions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}/duplicate": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Duplicate Workflow",
        "description": "Duplicar workflow",
        "operationId": "duplicate_workflow_api_v1_workflows__workflow_id__duplicate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Executions",
        "description": "List workflow executions with comprehensive filtering, search, and pagination",
        "operationId": "list_executions_api_v1_executions__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of records to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Number of records to return"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExecutionStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by execution status",
              "title": "Status"
            },
            "description": "Filter by execution status"
          },
          {
            "name": "workflow_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by workflow ID",
              "title": "Workflow Id"
            },
            "description": "Filter by workflow ID"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by user ID",
              "title": "User Id"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by priority",
              "title": "Priority"
            },
            "description": "Filter by priority"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter executions started after this date",
              "title": "Start Date"
            },
            "description": "Filter executions started after this date"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter executions started before this date",
              "title": "End Date"
            },
            "description": "Filter executions started before this date"
          },
          {
            "name": "min_progress",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 100.0,
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Minimum progress percentage",
              "title": "Min Progress"
            },
            "description": "Minimum progress percentage"
          },
          {
            "name": "has_errors",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter executions with/without errors",
              "title": "Has Errors"
            },
            "description": "Filter executions with/without errors"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort field",
              "default": "created_at",
              "title": "Sort By"
            },
            "description": "Sort field"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(asc|desc)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort order",
              "default": "desc",
              "title": "Sort Order"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_ExecutionResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Execution",
        "description": "Create and start a new workflow execution",
        "operationId": "create_execution_api_v1_executions__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{execution_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Execution",
        "description": "Get a specific workflow execution by ID with optional node executions",
        "operationId": "get_execution_api_v1_executions__execution_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          },
          {
            "name": "include_nodes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include node executions in response",
              "default": true,
              "title": "Include Nodes"
            },
            "description": "Include node executions in response"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutionWithNodesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Cancel Execution",
        "description": "Cancel a workflow execution",
        "operationId": "cancel_execution_api_v1_executions__execution_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force cancel even if already completed",
              "default": false,
              "title": "Force"
            },
            "description": "Force cancel even if already completed"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{execution_id}/status": {
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Execution Status",
        "description": "Update the status of a workflow execution",
        "operationId": "update_execution_status_api_v1_executions__execution_id__status_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          },
          {
            "name": "new_status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ExecutionStatus",
              "description": "New execution status"
            },
            "description": "New execution status"
          },
          {
            "name": "error_message",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Error message if status is failed",
              "title": "Error Message"
            },
            "description": "Error message if status is failed"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{execution_id}/logs": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Execution Logs",
        "description": "Get execution logs for a workflow execution",
        "operationId": "get_execution_logs_api_v1_executions__execution_id__logs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          },
          {
            "name": "node_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter logs by specific node",
              "title": "Node Id"
            },
            "description": "Filter logs by specific node"
          },
          {
            "name": "log_level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by log level",
              "title": "Log Level"
            },
            "description": "Filter by log level"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{execution_id}/metrics": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Execution Metrics",
        "description": "Get execution metrics and statistics",
        "operationId": "get_execution_metrics_api_v1_executions__execution_id__metrics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionMetricsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{execution_id}/nodes": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Execution Nodes",
        "description": "Get node executions for a specific workflow execution",
        "operationId": "get_execution_nodes_api_v1_executions__execution_id__nodes_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "node_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by node execution status",
              "title": "Node Status"
            },
            "description": "Filter by node execution status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_NodeExecutionResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Nodes",
        "description": "List nodes with comprehensive filtering, search, and pagination",
        "operationId": "list_nodes_api_v1_nodes__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of records to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Number of records to return"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category"
            },
            "description": "Filter by category"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/synapse__models__node__NodeStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status"
            },
            "description": "Filter by status"
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by public visibility",
              "title": "Is Public"
            },
            "description": "Filter by public visibility"
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by workspace",
              "title": "Workspace Id"
            },
            "description": "Filter by workspace"
          },
          {
            "name": "min_rating",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 5.0,
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Minimum rating",
              "title": "Min Rating"
            },
            "description": "Minimum rating"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort field",
              "default": "created_at",
              "title": "Sort By"
            },
            "description": "Sort field"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(asc|desc)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort order",
              "default": "desc",
              "title": "Sort Order"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_NodeResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Node",
        "description": "Create a new node",
        "operationId": "create_node_api_v1_nodes__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/{node_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node",
        "description": "Get a specific node by ID",
        "operationId": "get_node_api_v1_nodes__node_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Node",
        "description": "Update a specific node",
        "operationId": "update_node_api_v1_nodes__node_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Delete Node",
        "description": "Delete a specific node",
        "operationId": "delete_node_api_v1_nodes__node_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/{node_id}/executions": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Executions",
        "description": "Get execution history for a specific node",
        "operationId": "get_node_executions_api_v1_nodes__node_id__executions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by execution status",
              "title": "Status"
            },
            "description": "Filter by execution status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_Dict_str__Any__"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/{node_id}/stats": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Stats",
        "description": "Get execution statistics for a specific node",
        "operationId": "get_node_stats_api_v1_nodes__node_id__stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeExecutionStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/{node_id}/rate": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Rate Node",
        "description": "Rate a node (1-5 stars)",
        "operationId": "rate_node_api_v1_nodes__node_id__rate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          },
          {
            "name": "rating",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "maximum": 5.0,
              "minimum": 1.0,
              "description": "Rating from 1 to 5",
              "title": "Rating"
            },
            "description": "Rating from 1 to 5"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-categories/": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Node Category",
        "description": "Create a new node category.",
        "operationId": "create_node_category_api_v1_workflows_node_categories__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeCategoryCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeCategoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Node Categories",
        "description": "List all node categories for the current tenant.",
        "operationId": "list_node_categories_api_v1_workflows_node_categories__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeCategoryListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-categories/{category_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Category",
        "description": "Get a specific node category by its ID.",
        "operationId": "get_node_category_api_v1_workflows_node_categories__category_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeCategoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Node Category",
        "description": "Update an existing node category.",
        "operationId": "update_node_category_api_v1_workflows_node_categories__category_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeCategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeCategoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Delete Node Category",
        "description": "Delete a node category.",
        "operationId": "delete_node_category_api_v1_workflows_node_categories__category_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-execution-statuses/": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Node Execution Status",
        "description": "Create a new node execution status.",
        "operationId": "create_node_execution_status_api_v1_workflows_node_execution_statuses__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeExecutionStatusCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeExecutionStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Node Execution Statuses",
        "description": "List all node execution statuses.",
        "operationId": "list_node_execution_statuses_api_v1_workflows_node_execution_statuses__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeExecutionStatusList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-execution-statuses/{status_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Execution Status",
        "description": "Get a specific node execution status by its ID.",
        "operationId": "get_node_execution_status_api_v1_workflows_node_execution_statuses__status_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeExecutionStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Node Execution Status",
        "description": "Update an existing node execution status.",
        "operationId": "update_node_execution_status_api_v1_workflows_node_execution_statuses__status_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeExecutionStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeExecutionStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Delete Node Execution Status",
        "description": "Delete a node execution status.",
        "operationId": "delete_node_execution_status_api_v1_workflows_node_execution_statuses__status_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-ratings/": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Node Rating",
        "description": "Create a new node rating.",
        "operationId": "create_node_rating_api_v1_workflows_node_ratings__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeRatingCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeRatingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Node Ratings",
        "description": "List all node ratings for the current tenant.",
        "operationId": "list_node_ratings_api_v1_workflows_node_ratings__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by node ID",
              "title": "Node Id"
            },
            "description": "Filter by node ID"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by user ID",
              "title": "User Id"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeRatingListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-ratings/{rating_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Rating",
        "description": "Get a specific node rating by its ID.",
        "operationId": "get_node_rating_api_v1_workflows_node_ratings__rating_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "rating_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rating Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeRatingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Node Rating",
        "description": "Update an existing node rating.",
        "operationId": "update_node_rating_api_v1_workflows_node_ratings__rating_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "rating_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rating Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeRatingUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeRatingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Delete Node Rating",
        "description": "Delete a node rating.",
        "operationId": "delete_node_rating_api_v1_workflows_node_ratings__rating_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "rating_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rating Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-ratings/{node_id}/summary": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Rating Summary",
        "description": "Get rating summary for a specific node.",
        "operationId": "get_node_rating_summary_api_v1_workflows_node_ratings__node_id__summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Node Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeRatingSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-ratings/{node_id}/trends": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Rating Trends",
        "description": "Get rating trends for a specific node over time.",
        "operationId": "get_node_rating_trends_api_v1_workflows_node_ratings__node_id__trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Node Id"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Number of days to get trends for",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to get trends for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodeRatingTrend"
                  },
                  "title": "Response Get Node Rating Trends Api V1 Workflows Node Ratings  Node Id  Trends Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-executions/": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Node Execution",
        "description": "Create a new node execution record.",
        "operationId": "create_node_execution_api_v1_workflows_node_executions__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeExecutionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__node_execution__NodeExecutionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Node Executions",
        "description": "List all node execution records for the current tenant.",
        "operationId": "list_node_executions_api_v1_workflows_node_executions__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by node ID",
              "title": "Node Id"
            },
            "description": "Filter by node ID"
          },
          {
            "name": "workflow_execution_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by workflow execution ID",
              "title": "Workflow Execution Id"
            },
            "description": "Filter by workflow execution ID"
          },
          {
            "name": "status_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by execution status name",
              "title": "Status Name"
            },
            "description": "Filter by execution status name"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeExecutionList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-executions/{execution_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Execution",
        "description": "Get a specific node execution record by its ID.",
        "operationId": "get_node_execution_api_v1_workflows_node_executions__execution_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Execution Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__node_execution__NodeExecutionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Node Execution",
        "description": "Update an existing node execution record.",
        "operationId": "update_node_execution_api_v1_workflows_node_executions__execution_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Execution Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeExecutionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__node_execution__NodeExecutionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Delete Node Execution",
        "description": "Delete a node execution record.",
        "operationId": "delete_node_execution_api_v1_workflows_node_executions__execution_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Execution Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-statuses/": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Node Status",
        "description": "Create a new node status.",
        "operationId": "create_node_status_api_v1_workflows_node_statuses__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeStatusCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Node Statuses",
        "description": "List all node statuses.",
        "operationId": "list_node_statuses_api_v1_workflows_node_statuses__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeStatusListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-statuses/{status_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Status",
        "description": "Get a specific node status by its ID.",
        "operationId": "get_node_status_api_v1_workflows_node_statuses__status_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Node Status",
        "description": "Update an existing node status.",
        "operationId": "update_node_status_api_v1_workflows_node_statuses__status_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Delete Node Status",
        "description": "Delete a node status.",
        "operationId": "delete_node_status_api_v1_workflows_node_statuses__status_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-templates/": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Node Template",
        "description": "Create a new node template.",
        "operationId": "create_node_template_api_v1_workflows_node_templates__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeTemplateCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Node Templates",
        "description": "List all node templates for the current tenant.",
        "operationId": "list_node_templates_api_v1_workflows_node_templates__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeTemplateListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-templates/{template_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Template",
        "description": "Get a specific node template by its ID.",
        "operationId": "get_node_template_api_v1_workflows_node_templates__template_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Node Template",
        "description": "Update an existing node template.",
        "operationId": "update_node_template_api_v1_workflows_node_templates__template_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Delete Node Template",
        "description": "Delete a node template.",
        "operationId": "delete_node_template_api_v1_workflows_node_templates__template_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-types/": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Create Node Type",
        "description": "Create a new node type.",
        "operationId": "create_node_type_api_v1_workflows_node_types__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeTypeCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeTypeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "List Node Types",
        "description": "List all node types.",
        "operationId": "list_node_types_api_v1_workflows_node_types__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeTypeListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/node-types/{type_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Get Node Type",
        "description": "Get a specific node type by its ID.",
        "operationId": "get_node_type_api_v1_workflows_node_types__type_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Type Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeTypeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Update Node Type",
        "description": "Update an existing node type.",
        "operationId": "update_node_type_api_v1_workflows_node_types__type_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Type Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeTypeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeTypeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Delete Node Type",
        "description": "Delete a node type.",
        "operationId": "delete_node_type_api_v1_workflows_node_types__type_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Type Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/health": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Analytics Health",
        "description": "Health check for analytics service",
        "operationId": "analytics_health_api_v1_analytics_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/overview": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Analytics Overview",
        "description": "Get analytics overview",
        "operationId": "analytics_overview_api_v1_analytics_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/events": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Create Event",
        "description": "Create analytics event",
        "operationId": "create_event_api_v1_analytics_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Event Api V1 Analytics Events Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/dashboards": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "List Dashboards",
        "description": "List user dashboards",
        "operationId": "list_dashboards_api_v1_analytics_dashboards_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response List Dashboards Api V1 Analytics Dashboards Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      },
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Create Dashboard",
        "description": "Create analytics dashboard",
        "operationId": "create_dashboard_api_v1_analytics_dashboards_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Dashboard Api V1 Analytics Dashboards Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/usage-log/": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Registrar log de uso",
        "description": "Cria um novo log de uso no sistema",
        "operationId": "create_usage_log_api_v1_usage_log__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Log"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Listar logs de uso",
        "description": "Lista logs de uso com filtros opcionais",
        "operationId": "list_usage_logs_api_v1_usage_log__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workspace Id"
            }
          },
          {
            "name": "llm_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Llm Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/dashboards/": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Create Analytics Dashboard",
        "description": "Create a new analytics dashboard.",
        "operationId": "create_analytics_dashboard_api_v1_analytics_dashboards__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsDashboardCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsDashboardResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "List Analytics Dashboards",
        "description": "List all analytics dashboards for the current tenant.",
        "operationId": "list_analytics_dashboards_api_v1_analytics_dashboards__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsDashboardListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/dashboards/{dashboard_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Analytics Dashboard",
        "description": "Get a specific analytics dashboard by its ID.",
        "operationId": "get_analytics_dashboard_api_v1_analytics_dashboards__dashboard_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dashboard Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsDashboardResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "analytics"
        ],
        "summary": "Update Analytics Dashboard",
        "description": "Update an existing analytics dashboard.",
        "operationId": "update_analytics_dashboard_api_v1_analytics_dashboards__dashboard_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dashboard Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsDashboardUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsDashboardResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "analytics"
        ],
        "summary": "Delete Analytics Dashboard",
        "description": "Delete an analytics dashboard.",
        "operationId": "delete_analytics_dashboard_api_v1_analytics_dashboards__dashboard_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dashboard Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/alerts/": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Create Analytics Alert",
        "description": "Create a new analytics alert.",
        "operationId": "create_analytics_alert_api_v1_analytics_alerts__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsAlertCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsAlertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "List Analytics Alerts",
        "description": "List all analytics alerts for the current tenant.",
        "operationId": "list_analytics_alerts_api_v1_analytics_alerts__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsAlertListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/alerts/{alert_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Analytics Alert",
        "description": "Get a specific analytics alert by its ID.",
        "operationId": "get_analytics_alert_api_v1_analytics_alerts__alert_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsAlertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "analytics"
        ],
        "summary": "Update Analytics Alert",
        "description": "Update an existing analytics alert.",
        "operationId": "update_analytics_alert_api_v1_analytics_alerts__alert_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Alert Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsAlertUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsAlertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "analytics"
        ],
        "summary": "Delete Analytics Alert",
        "description": "Delete an analytics alert.",
        "operationId": "delete_analytics_alert_api_v1_analytics_alerts__alert_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/exports/": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Create Analytics Export",
        "description": "Create a new analytics export.",
        "operationId": "create_analytics_export_api_v1_analytics_exports__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsExportCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "List Analytics Exports",
        "description": "List all analytics exports for the current tenant.",
        "operationId": "list_analytics_exports_api_v1_analytics_exports__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsExportListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/exports/{export_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Get Analytics Export",
        "description": "Get a specific analytics export by its ID.",
        "operationId": "get_analytics_export_api_v1_analytics_exports__export_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Export Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "analytics"
        ],
        "summary": "Update Analytics Export",
        "description": "Update an existing analytics export.",
        "operationId": "update_analytics_export_api_v1_analytics_exports__export_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Export Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsExportUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "analytics"
        ],
        "summary": "Delete Analytics Export",
        "description": "Delete an analytics export.",
        "operationId": "delete_analytics_export_api_v1_analytics_exports__export_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Export Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/upload": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Upload File",
        "description": "Upload de arquivo",
        "operationId": "upload_file_api_v1_files_upload_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID do workspace",
              "title": "Workspace Id"
            },
            "description": "ID do workspace"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Descri√ß√£o do arquivo",
              "title": "Description"
            },
            "description": "Descri√ß√£o do arquivo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_api_v1_files_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "List Files",
        "description": "Listar arquivos do usu√°rio",
        "operationId": "list_files_api_v1_files__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Tamanho da p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Tamanho da p√°gina"
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por workspace",
              "title": "Workspace Id"
            },
            "description": "Filtrar por workspace"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por nome ou descri√ß√£o",
              "title": "Search"
            },
            "description": "Buscar por nome ou descri√ß√£o"
          },
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por tipo de conte√∫do",
              "title": "Content Type"
            },
            "description": "Filtrar por tipo de conte√∫do"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FileStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get File",
        "description": "Obter informa√ß√µes do arquivo",
        "operationId": "get_file_api_v1_files__file_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "data"
        ],
        "summary": "Update File",
        "description": "Atualizar metadados do arquivo",
        "operationId": "update_file_api_v1_files__file_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data"
        ],
        "summary": "Delete File",
        "description": "Deletar arquivo",
        "operationId": "delete_file_api_v1_files__file_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}/download": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Download File",
        "description": "Download do arquivo",
        "operationId": "download_file_api_v1_files__file_id__download_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-variables/": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Create User Variable",
        "description": "Create a new user variable.",
        "operationId": "create_user_variable_api_v1_user_variables__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVariableCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVariableResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "data"
        ],
        "summary": "List User Variables",
        "description": "List all user variables for the current user and tenant.",
        "operationId": "list_user_variables_api_v1_user_variables__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category"
            },
            "description": "Filter by category"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in key or description",
              "title": "Search"
            },
            "description": "Search in key or description"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVariableListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-variables/{variable_id}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get User Variable",
        "description": "Get a specific user variable by its ID.",
        "operationId": "get_user_variable_api_v1_user_variables__variable_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Variable Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVariableResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "data"
        ],
        "summary": "Update User Variable",
        "description": "Update an existing user variable.",
        "operationId": "update_user_variable_api_v1_user_variables__variable_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Variable Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVariableUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVariableResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data"
        ],
        "summary": "Delete User Variable",
        "description": "Delete a user variable (soft delete).",
        "operationId": "delete_user_variable_api_v1_user_variables__variable_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Variable Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-variables/key/{key}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get User Variable By Key",
        "description": "Get a specific user variable by its key.",
        "operationId": "get_user_variable_by_key_api_v1_user_variables_key__key__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVariableResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-insights/": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Create User Insight",
        "description": "Create a new user insight.",
        "operationId": "create_user_insight_api_v1_user_insights__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInsightCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInsightResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "data"
        ],
        "summary": "List User Insights",
        "description": "List all user insights for the current tenant.",
        "operationId": "list_user_insights_api_v1_user_insights__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by user ID",
              "title": "User Id"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "insight_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by insight type",
              "title": "Insight Type"
            },
            "description": "Filter by insight type"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category"
            },
            "description": "Filter by category"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInsightListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-insights/{insight_id}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get User Insight",
        "description": "Get a specific user insight by its ID.",
        "operationId": "get_user_insight_api_v1_user_insights__insight_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "insight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Insight Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInsightResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "data"
        ],
        "summary": "Update User Insight",
        "description": "Update an existing user insight.",
        "operationId": "update_user_insight_api_v1_user_insights__insight_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "insight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Insight Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInsightUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInsightResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data"
        ],
        "summary": "Delete User Insight",
        "description": "Delete a user insight.",
        "operationId": "delete_user_insight_api_v1_user_insights__insight_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "insight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Insight Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Criar nova tag",
        "description": "Cria uma nova tag para o usu√°rio",
        "operationId": "create_tag_api_v1_tags__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Listar tags",
        "description": "Lista tags com filtros opcionais",
        "operationId": "list_tags_api_v1_tags__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "target_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Target Type"
            }
          },
          {
            "name": "target_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Target Id"
            }
          },
          {
            "name": "tag_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/conversations/{conversation_id}/tags": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Adicionar tag a conversa",
        "description": "Adiciona uma tag a uma conversa espec√≠fica",
        "operationId": "add_tag_to_conversation_api_v1_tags_conversations__conversation_id__tags_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Listar tags de conversa",
        "description": "Lista todas as tags de uma conversa espec√≠fica",
        "operationId": "list_tags_for_conversation_api_v1_tags_conversations__conversation_id__tags_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/messages/{message_id}/tags": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Adicionar tag a mensagem",
        "description": "Adiciona uma tag a uma mensagem espec√≠fica",
        "operationId": "add_tag_to_message_api_v1_tags_messages__message_id__tags_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Listar tags de mensagem",
        "description": "Lista todas as tags de uma mensagem espec√≠fica",
        "operationId": "list_tags_for_message_api_v1_tags_messages__message_id__tags_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "List Workspaces",
        "description": "Listar workspaces do usu√°rio",
        "operationId": "list_workspaces_api_v1_workspaces__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Tamanho da p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Tamanho da p√°gina"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por nome ou descri√ß√£o",
              "title": "Search"
            },
            "description": "Buscar por nome ou descri√ß√£o"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkspaceType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por tipo",
              "title": "Type"
            },
            "description": "Filtrar por tipo"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkspaceStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          },
          {
            "name": "is_owner",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar workspaces pr√≥prios",
              "title": "Is Owner"
            },
            "description": "Filtrar workspaces pr√≥prios"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Create Workspace",
        "description": "Criar novo workspace",
        "operationId": "create_workspace_api_v1_workspaces__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Workspace",
        "description": "Obter workspace espec√≠fico",
        "operationId": "get_workspace_api_v1_workspaces__workspace_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "data"
        ],
        "summary": "Update Workspace",
        "description": "Atualizar workspace",
        "operationId": "update_workspace_api_v1_workspaces__workspace_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "data"
        ],
        "summary": "Delete Workspace",
        "description": "Deletar workspace",
        "operationId": "delete_workspace_api_v1_workspaces__workspace_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/members": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "List Workspace Members",
        "description": "Listar membros do workspace",
        "operationId": "list_workspace_members_api_v1_workspaces__workspace_id__members_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceMemberListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Add Workspace Member",
        "description": "Adicionar membro ao workspace",
        "operationId": "add_workspace_member_api_v1_workspaces__workspace_id__members_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceMemberCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspace-members/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "List Workspace Members",
        "description": "Listar membros do workspace",
        "operationId": "list_workspace_members_api_v1_workspace_members__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response List Workspace Members Api V1 Workspace Members  Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/crm/contacts/": {
      "post": {
        "tags": [
          "crm"
        ],
        "summary": "Create Contact",
        "description": "Create a new contact.",
        "operationId": "create_contact_api_v1_crm_contacts__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "List Contacts",
        "description": "List all contacts for the current tenant.",
        "operationId": "list_contacts_api_v1_crm_contacts__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name, email, or company",
              "title": "Search"
            },
            "description": "Search term for name, email, or company"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__contact__ContactListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/contacts/{contact_id}": {
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "Get Contact",
        "description": "Get a specific contact by its ID.",
        "operationId": "get_contact_api_v1_crm_contacts__contact_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "crm"
        ],
        "summary": "Update Contact",
        "description": "Update an existing contact.",
        "operationId": "update_contact_api_v1_crm_contacts__contact_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "crm"
        ],
        "summary": "Delete Contact",
        "description": "Delete a contact.",
        "operationId": "delete_contact_api_v1_crm_contacts__contact_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/contact-lists/": {
      "post": {
        "tags": [
          "crm"
        ],
        "summary": "Create Contact List",
        "description": "Create a new contact list.",
        "operationId": "create_contact_list_api_v1_crm_contact_lists__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactListCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__contact_list__ContactListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "List Contact Lists",
        "description": "List all contact lists for the current tenant.",
        "operationId": "list_contact_lists_api_v1_crm_contact_lists__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__contact_list__ContactListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/contact-lists/{contact_list_id}": {
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "Get Contact List",
        "description": "Get a specific contact list by its ID.",
        "operationId": "get_contact_list_api_v1_crm_contact_lists__contact_list_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact List Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__contact_list__ContactListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "crm"
        ],
        "summary": "Update Contact List",
        "description": "Update an existing contact list.",
        "operationId": "update_contact_list_api_v1_crm_contact_lists__contact_list_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact List Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactListUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__contact_list__ContactListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "crm"
        ],
        "summary": "Delete Contact List",
        "description": "Delete a contact list.",
        "operationId": "delete_contact_list_api_v1_crm_contact_lists__contact_list_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact List Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/campaigns/": {
      "post": {
        "tags": [
          "crm"
        ],
        "summary": "Create Campaign",
        "description": "Create a new campaign.",
        "operationId": "create_campaign_api_v1_crm_campaigns__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "List Campaigns",
        "description": "List all campaigns for the current tenant.",
        "operationId": "list_campaigns_api_v1_crm_campaigns__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/campaigns/{campaign_id}": {
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "Get Campaign",
        "description": "Get a specific campaign by its ID.",
        "operationId": "get_campaign_api_v1_crm_campaigns__campaign_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "crm"
        ],
        "summary": "Update Campaign",
        "description": "Update an existing campaign.",
        "operationId": "update_campaign_api_v1_crm_campaigns__campaign_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "crm"
        ],
        "summary": "Delete Campaign",
        "description": "Delete a campaign.",
        "operationId": "delete_campaign_api_v1_crm_campaigns__campaign_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/contact-tags/": {
      "post": {
        "tags": [
          "crm"
        ],
        "summary": "Create Contact Tag",
        "description": "Create a new contact tag.",
        "operationId": "create_contact_tag_api_v1_crm_contact_tags__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactTagCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTagResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "List Contact Tags",
        "description": "List all contact tags for the current tenant.",
        "operationId": "list_contact_tags_api_v1_crm_contact_tags__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTagListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/contact-tags/{contact_tag_id}": {
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "Get Contact Tag",
        "description": "Get a specific contact tag by its ID.",
        "operationId": "get_contact_tag_api_v1_crm_contact_tags__contact_tag_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTagResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "crm"
        ],
        "summary": "Update Contact Tag",
        "description": "Update an existing contact tag.",
        "operationId": "update_contact_tag_api_v1_crm_contact_tags__contact_tag_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Tag Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactTagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactTagResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "crm"
        ],
        "summary": "Delete Contact Tag",
        "description": "Delete a contact tag.",
        "operationId": "delete_contact_tag_api_v1_crm_contact_tags__contact_tag_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Tag Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/contact-sources/": {
      "post": {
        "tags": [
          "crm"
        ],
        "summary": "Create Contact Source",
        "description": "Create a new contact source.",
        "operationId": "create_contact_source_api_v1_crm_contact_sources__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactSourceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSourceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "List Contact Sources",
        "description": "List all contact sources for the current tenant.",
        "operationId": "list_contact_sources_api_v1_crm_contact_sources__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSourceListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/contact-sources/{contact_source_id}": {
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "Get Contact Source",
        "description": "Get a specific contact source by its ID.",
        "operationId": "get_contact_source_api_v1_crm_contact_sources__contact_source_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSourceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "crm"
        ],
        "summary": "Update Contact Source",
        "description": "Update an existing contact source.",
        "operationId": "update_contact_source_api_v1_crm_contact_sources__contact_source_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Source Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactSourceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSourceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "crm"
        ],
        "summary": "Delete Contact Source",
        "description": "Delete a contact source.",
        "operationId": "delete_contact_source_api_v1_crm_contact_sources__contact_source_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Source Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/contact-notes/": {
      "post": {
        "tags": [
          "crm"
        ],
        "summary": "Create Contact Note",
        "description": "Create a new contact note.",
        "operationId": "create_contact_note_api_v1_crm_contact_notes__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactNoteCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactNoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "List Contact Notes",
        "description": "List all contact notes for the current tenant.",
        "operationId": "list_contact_notes_api_v1_crm_contact_notes__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by contact ID",
              "title": "Contact Id"
            },
            "description": "Filter by contact ID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactNoteListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm/contact-notes/{contact_note_id}": {
      "get": {
        "tags": [
          "crm"
        ],
        "summary": "Get Contact Note",
        "description": "Get a specific contact note by its ID.",
        "operationId": "get_contact_note_api_v1_crm_contact_notes__contact_note_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Note Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactNoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "crm"
        ],
        "summary": "Update Contact Note",
        "description": "Update an existing contact note.",
        "operationId": "update_contact_note_api_v1_crm_contact_notes__contact_note_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Note Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactNoteUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactNoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "crm"
        ],
        "summary": "Delete Contact Note",
        "description": "Delete a contact note.",
        "operationId": "delete_contact_note_api_v1_crm_contact_notes__contact_note_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "contact_note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Contact Note Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/rbac/roles": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Roles",
        "description": "Lista roles RBAC do tenant atual",
        "operationId": "list_roles_api_v1_enterprise_rbac_roles_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por nome",
              "title": "Search"
            },
            "description": "Buscar por nome"
          },
          {
            "name": "is_system",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por roles do sistema",
              "title": "Is System"
            },
            "description": "Filtrar por roles do sistema"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RBACRoleListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Role",
        "description": "Cria um novo role RBAC (apenas admins)",
        "operationId": "create_role_api_v1_enterprise_rbac_roles_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RBACRoleCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RBACRoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/rbac/roles/{role_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Role",
        "description": "Obt√©m detalhes de um role espec√≠fico",
        "operationId": "get_role_api_v1_enterprise_rbac_roles__role_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RBACRoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Role",
        "description": "Atualiza um role existente (apenas admins)",
        "operationId": "update_role_api_v1_enterprise_rbac_roles__role_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RBACRoleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RBACRoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete Role",
        "description": "Remove um role (apenas admins)",
        "operationId": "delete_role_api_v1_enterprise_rbac_roles__role_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/rbac/permissions": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Permissions",
        "description": "Lista todas as permissions (apenas admins)",
        "operationId": "list_permissions_api_v1_enterprise_rbac_permissions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por nome",
              "title": "Search"
            },
            "description": "Buscar por nome"
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por recurso",
              "title": "Resource"
            },
            "description": "Filtrar por recurso"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por a√ß√£o",
              "title": "Action"
            },
            "description": "Filtrar por a√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RBACPermissionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Permission",
        "description": "Cria uma nova permission (apenas admins)",
        "operationId": "create_permission_api_v1_enterprise_rbac_permissions_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RBACPermissionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RBACPermissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/rbac/user-roles": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Assign User Role",
        "description": "Atribui um role a um usu√°rio em um tenant (apenas admins)",
        "operationId": "assign_user_role_api_v1_enterprise_rbac_user_roles_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/synapse__schemas__rbac__UserTenantRoleCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__rbac__UserTenantRoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/enterprise/rbac/user-roles/{user_role_id}": {
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Remove User Role",
        "description": "Remove um role de um usu√°rio (apenas admins)",
        "operationId": "remove_user_role_api_v1_enterprise_rbac_user_roles__user_role_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Role Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/rbac/roles/{role_id}/permissions": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Role Permissions",
        "description": "Lista permissions de um role espec√≠fico",
        "operationId": "get_role_permissions_api_v1_enterprise_rbac_roles__role_id__permissions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RBACPermissionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/rbac/roles/{role_id}/permissions/{permission_id}": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Assign Permission To Role",
        "description": "Atribui uma permission a um role (apenas admins)",
        "operationId": "assign_permission_to_role_api_v1_enterprise_rbac_roles__role_id__permissions__permission_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          },
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Remove Permission From Role",
        "description": "Remove uma permission de um role (apenas admins)",
        "operationId": "remove_permission_from_role_api_v1_enterprise_rbac_roles__role_id__permissions__permission_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          },
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/features/": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Features",
        "description": "Listar todas as features dispon√≠veis\nAcesso: Usu√°rios autenticados",
        "operationId": "list_features_api_v1_enterprise_features__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "N√∫mero de registros para pular",
              "default": 0,
              "title": "Skip"
            },
            "description": "N√∫mero de registros para pular"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "N√∫mero m√°ximo de registros",
              "default": 100,
              "title": "Limit"
            },
            "description": "N√∫mero m√°ximo de registros"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por nome ou descri√ß√£o",
              "title": "Search"
            },
            "description": "Buscar por nome ou descri√ß√£o"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por categoria",
              "title": "Category"
            },
            "description": "Filtrar por categoria"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status ativo",
              "title": "Is Active"
            },
            "description": "Filtrar por status ativo"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Feature",
        "description": "Criar nova feature\nAcesso: Apenas administradores",
        "operationId": "create_feature_api_v1_enterprise_features__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/features/{feature_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Feature",
        "description": "Obter feature por ID\nAcesso: Usu√°rios autenticados",
        "operationId": "get_feature_api_v1_enterprise_features__feature_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "feature_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feature Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Feature",
        "description": "Atualizar feature existente\nAcesso: Apenas administradores",
        "operationId": "update_feature_api_v1_enterprise_features__feature_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "feature_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feature Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete Feature",
        "description": "Deletar feature\nAcesso: Apenas administradores\nATEN√á√ÉO: Remove todas as associa√ß√µes com planos, tenants e workspaces",
        "operationId": "delete_feature_api_v1_enterprise_features__feature_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "feature_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feature Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/features/plans/{plan_id}/features": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Plan Features",
        "description": "Listar features de um plano espec√≠fico\nAcesso: Usu√°rios autenticados",
        "operationId": "list_plan_features_api_v1_enterprise_features_plans__plan_id__features_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Plan Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanFeatureListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Add Feature To Plan",
        "description": "Adicionar feature a um plano\nAcesso: Apenas administradores",
        "operationId": "add_feature_to_plan_api_v1_enterprise_features_plans__plan_id__features_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Plan Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanFeatureCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanFeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/features/tenants/{tenant_id}/features": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Tenant Features",
        "description": "Listar features de um tenant espec√≠fico\nAcesso: Usu√°rios do tenant ou administradores",
        "operationId": "list_tenant_features_api_v1_enterprise_features_tenants__tenant_id__features_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Add Feature To Tenant",
        "description": "Adicionar feature a um tenant\nAcesso: Apenas administradores",
        "operationId": "add_feature_to_tenant_api_v1_enterprise_features_tenants__tenant_id__features_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantFeatureCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/features/workspaces/{workspace_id}/features": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Workspace Features",
        "description": "Listar features de um workspace espec√≠fico\nAcesso: Membros do workspace ou administradores",
        "operationId": "list_workspace_features_api_v1_enterprise_features_workspaces__workspace_id__features_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceFeatureListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Add Feature To Workspace",
        "description": "Adicionar feature a um workspace\nAcesso: Apenas administradores",
        "operationId": "add_feature_to_workspace_api_v1_enterprise_features_workspaces__workspace_id__features_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceFeatureCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceFeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/features/categories": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Feature Categories",
        "description": "Listar todas as categorias de features dispon√≠veis\nAcesso: Usu√°rios autenticados",
        "operationId": "list_feature_categories_api_v1_enterprise_features_categories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Feature Categories Api V1 Enterprise Features Categories Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/enterprise/payments/providers": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Payment Providers",
        "description": "Lista provedores de pagamento (apenas super admins)\nATEN√á√ÉO: N√£o expor configura√ß√µes sens√≠veis",
        "operationId": "list_payment_providers_api_v1_enterprise_payments_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentProviderResponse"
                  },
                  "type": "array",
                  "title": "Response List Payment Providers Api V1 Enterprise Payments Providers Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Payment Provider",
        "description": "Cria um novo provedor de pagamento (apenas super admins)",
        "operationId": "create_payment_provider_api_v1_enterprise_payments_providers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentProviderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProviderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/enterprise/payments/customers/current": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Current Customer",
        "description": "Obt√©m customer de pagamento do tenant atual",
        "operationId": "get_current_customer_api_v1_enterprise_payments_customers_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__payment__PaymentCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/enterprise/payments/customers": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Payment Customer",
        "description": "Cria um customer de pagamento (apenas admins)",
        "operationId": "create_payment_customer_api_v1_enterprise_payments_customers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCustomerCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__payment__PaymentCustomerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/enterprise/payments/methods": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Payment Methods",
        "description": "Lista m√©todos de pagamento do tenant atual",
        "operationId": "list_payment_methods_api_v1_enterprise_payments_methods_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por m√©todos ativos",
              "default": true,
              "title": "Is Active"
            },
            "description": "Filtrar por m√©todos ativos"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Payment Method",
        "description": "Adiciona um novo m√©todo de pagamento\nATEN√á√ÉO: N√£o armazenar dados sens√≠veis do cart√£o - usar tokens do provedor",
        "operationId": "create_payment_method_api_v1_enterprise_payments_methods_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payments/methods/{method_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Payment Method",
        "description": "Obt√©m detalhes de um m√©todo de pagamento espec√≠fico",
        "operationId": "get_payment_method_api_v1_enterprise_payments_methods__method_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Payment Method",
        "description": "Atualiza um m√©todo de pagamento",
        "operationId": "update_payment_method_api_v1_enterprise_payments_methods__method_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete Payment Method",
        "description": "Remove um m√©todo de pagamento",
        "operationId": "delete_payment_method_api_v1_enterprise_payments_methods__method_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payments/invoices": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Invoices",
        "description": "Lista faturas do tenant atual",
        "operationId": "list_invoices_api_v1_enterprise_payments_invoices_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Data de in√≠cio",
              "title": "Start Date"
            },
            "description": "Data de in√≠cio"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Data de fim",
              "title": "End Date"
            },
            "description": "Data de fim"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__payment__InvoiceListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Invoice",
        "description": "Cria uma nova fatura (apenas admins)",
        "operationId": "create_invoice_api_v1_enterprise_payments_invoices_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/synapse__schemas__payment__InvoiceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__payment__InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payments/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Invoice",
        "description": "Obt√©m detalhes de uma fatura espec√≠fica",
        "operationId": "get_invoice_api_v1_enterprise_payments_invoices__invoice_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__payment__InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Invoice",
        "description": "Atualiza uma fatura (apenas admins)",
        "operationId": "update_invoice_api_v1_enterprise_payments_invoices__invoice_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invoice Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/synapse__schemas__payment__InvoiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__payment__InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete Invoice",
        "description": "Remove uma fatura (apenas admins)",
        "operationId": "delete_invoice_api_v1_enterprise_payments_invoices__invoice_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payments/invoices/{invoice_id}/download": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Download Invoice Pdf",
        "description": "Gera e baixa PDF da fatura\nTODO: Implementar gera√ß√£o de PDF",
        "operationId": "download_invoice_pdf_api_v1_enterprise_payments_invoices__invoice_id__download_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payments/invoices/{invoice_id}/pay": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Pay Invoice",
        "description": "Processa pagamento de uma fatura\nTODO: Integrar com provedor de pagamento",
        "operationId": "pay_invoice_api_v1_enterprise_payments_invoices__invoice_id__pay_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invoice Id"
            }
          },
          {
            "name": "payment_method_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID do m√©todo de pagamento",
              "title": "Payment Method Id"
            },
            "description": "ID do m√©todo de pagamento"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payment-customers/": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Payment Customer",
        "description": "Create a new payment customer.",
        "operationId": "create_payment_customer_api_v1_enterprise_payment_customers__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCustomerCreateSimple"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCustomerBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Payment Customers",
        "description": "List all payment customers for the current tenant.",
        "operationId": "list_payment_customers_api_v1_enterprise_payment_customers__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in customer name or email",
              "title": "Search"
            },
            "description": "Search in customer name or email"
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by payment provider",
              "title": "Provider"
            },
            "description": "Filter by payment provider"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCustomerListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payment-customers/{customer_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Payment Customer",
        "description": "Get a specific payment customer by its ID.",
        "operationId": "get_payment_customer_api_v1_enterprise_payment_customers__customer_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Customer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCustomerBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Payment Customer",
        "description": "Update an existing payment customer.",
        "operationId": "update_payment_customer_api_v1_enterprise_payment_customers__customer_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Customer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCustomerUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCustomerBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete Payment Customer",
        "description": "Delete a payment customer.",
        "operationId": "delete_payment_customer_api_v1_enterprise_payment_customers__customer_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Customer Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payment-customers/search": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Search Payment Customers",
        "description": "Advanced search for payment customers.",
        "operationId": "search_payment_customers_api_v1_enterprise_payment_customers_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCustomerSearch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentCustomerBase"
                  },
                  "type": "array",
                  "title": "Response Search Payment Customers Api V1 Enterprise Payment Customers Search Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/enterprise/payment-customers/{customer_id}/summary": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Customer Summary",
        "description": "Get summary information for a payment customer.",
        "operationId": "get_customer_summary_api_v1_enterprise_payment_customers__customer_id__summary_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Customer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCustomerSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payment-customers/{customer_id}/activate": {
      "patch": {
        "tags": [
          "enterprise"
        ],
        "summary": "Activate Customer",
        "description": "Activate or deactivate a payment customer.",
        "operationId": "activate_customer_api_v1_enterprise_payment_customers__customer_id__activate_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Customer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCustomerActivateDeactivate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCustomerBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/payment-customers/{customer_id}/update-data": {
      "patch": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Customer Data",
        "description": "Update specific customer data fields.",
        "operationId": "update_customer_data_api_v1_enterprise_payment_customers__customer_id__update_data_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Customer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCustomerUpdateData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCustomerBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/billing-events/": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Billing Event",
        "description": "Create a new billing event.",
        "operationId": "create_billing_event_api_v1_enterprise_billing_events__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingEventCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingEventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Billing Events",
        "description": "List all billing events for the current tenant.",
        "operationId": "list_billing_events_api_v1_enterprise_billing_events__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for event type or description",
              "title": "Search"
            },
            "description": "Search term for event type or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingEventListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/billing-events/{event_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Billing Event",
        "description": "Get a specific billing event by its ID.",
        "operationId": "get_billing_event_api_v1_enterprise_billing_events__event_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingEventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Billing Event",
        "description": "Update an existing billing event.",
        "operationId": "update_billing_event_api_v1_enterprise_billing_events__event_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingEventUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingEventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete Billing Event",
        "description": "Delete a billing event.",
        "operationId": "delete_billing_event_api_v1_enterprise_billing_events__event_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/invoices/": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Invoice",
        "description": "Create a new invoice.",
        "operationId": "create_invoice_api_v1_enterprise_invoices__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/synapse__schemas__invoice__InvoiceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__invoice__InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Invoices",
        "description": "List all invoices for the current tenant.",
        "operationId": "list_invoices_api_v1_enterprise_invoices__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for invoice number or status",
              "title": "Search"
            },
            "description": "Search term for invoice number or status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__invoice__InvoiceListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Invoice",
        "description": "Get a specific invoice by its ID.",
        "operationId": "get_invoice_api_v1_enterprise_invoices__invoice_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__invoice__InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Invoice",
        "description": "Update an existing invoice.",
        "operationId": "update_invoice_api_v1_enterprise_invoices__invoice_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invoice Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/synapse__schemas__invoice__InvoiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__invoice__InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete Invoice",
        "description": "Delete an invoice.",
        "operationId": "delete_invoice_api_v1_enterprise_invoices__invoice_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/plans/": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Plan",
        "description": "Create a new plan.",
        "operationId": "create_plan_api_v1_enterprise_plans__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Plans",
        "description": "List all plans (global system configuration).",
        "operationId": "list_plans_api_v1_enterprise_plans__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for name or description",
              "title": "Search"
            },
            "description": "Search term for name or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/plans/{plan_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Plan",
        "description": "Get a specific plan by its ID.",
        "operationId": "get_plan_api_v1_enterprise_plans__plan_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Plan Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Plan",
        "description": "Update an existing plan.",
        "operationId": "update_plan_api_v1_enterprise_plans__plan_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Plan Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete Plan",
        "description": "Delete a plan.",
        "operationId": "delete_plan_api_v1_enterprise_plans__plan_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Plan Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/subscriptions/": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Create Subscription",
        "description": "Create a new subscription.",
        "operationId": "create_subscription_api_v1_enterprise_subscriptions__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List Subscriptions",
        "description": "List all subscriptions for the current tenant.",
        "operationId": "list_subscriptions_api_v1_enterprise_subscriptions__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for plan name or status",
              "title": "Search"
            },
            "description": "Search term for plan name or status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/subscriptions/{subscription_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get Subscription",
        "description": "Get a specific subscription by its ID.",
        "operationId": "get_subscription_api_v1_enterprise_subscriptions__subscription_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subscription Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update Subscription",
        "description": "Update an existing subscription.",
        "operationId": "update_subscription_api_v1_enterprise_subscriptions__subscription_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subscription Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete Subscription",
        "description": "Delete a subscription.",
        "operationId": "delete_subscription_api_v1_enterprise_subscriptions__subscription_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subscription Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/user-tenant-roles/": {
      "post": {
        "tags": [
          "enterprise"
        ],
        "summary": "Assign User Role To Tenant",
        "description": "Assign a role to a user within a specific tenant (Admin only).",
        "operationId": "assign_user_role_to_tenant_api_v1_enterprise_user_tenant_roles__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/synapse__schemas__user_tenant_role__UserTenantRoleCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__user_tenant_role__UserTenantRoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "List User Tenant Role Assignments",
        "description": "List all user-tenant role assignments for the current tenant.",
        "operationId": "list_user_tenant_role_assignments_api_v1_enterprise_user_tenant_roles__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by user ID",
              "title": "User Id"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by role ID",
              "title": "Role Id"
            },
            "description": "Filter by role ID"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            },
            "description": "Filter by active status"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTenantRoleListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprise/user-tenant-roles/{assignment_id}": {
      "get": {
        "tags": [
          "enterprise"
        ],
        "summary": "Get User Tenant Role Assignment",
        "description": "Get a specific user-tenant role assignment by its ID.",
        "operationId": "get_user_tenant_role_assignment_api_v1_enterprise_user_tenant_roles__assignment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Assignment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__user_tenant_role__UserTenantRoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "enterprise"
        ],
        "summary": "Update User Tenant Role Assignment",
        "description": "Update an existing user-tenant role assignment (Admin only).",
        "operationId": "update_user_tenant_role_assignment_api_v1_enterprise_user_tenant_roles__assignment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Assignment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTenantRoleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__user_tenant_role__UserTenantRoleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise"
        ],
        "summary": "Delete User Tenant Role Assignment",
        "description": "Delete a user-tenant role assignment (Admin only).",
        "operationId": "delete_user_tenant_role_assignment_api_v1_enterprise_user_tenant_roles__assignment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Assignment Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Create Template",
        "description": "Criar template de workflow\n\nCria um novo template compartilh√°vel baseado em um workflow existente\nou dados fornecidos diretamente. O template pode ser privado ou p√∫blico.",
        "operationId": "create_template_api_v1_templates__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Search Templates",
        "description": "Buscar templates com filtros avan√ßados\n\nPermite busca e filtragem de templates por m√∫ltiplos crit√©rios incluindo\ncategoria, tags, pre√ßo, avalia√ß√£o, complexidade e muito mais.",
        "operationId": "search_templates_api_v1_templates__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Termo de busca",
              "title": "Search"
            },
            "description": "Termo de busca"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Categoria do template",
              "title": "Category"
            },
            "description": "Categoria do template"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tags para filtrar",
              "title": "Tags"
            },
            "description": "Tags para filtrar"
          },
          {
            "name": "license_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tipo de licen√ßa",
              "title": "License Type"
            },
            "description": "Tipo de licen√ßa"
          },
          {
            "name": "price_min",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pre√ßo m√≠nimo",
              "title": "Price Min"
            },
            "description": "Pre√ßo m√≠nimo"
          },
          {
            "name": "price_max",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pre√ßo m√°ximo",
              "title": "Price Max"
            },
            "description": "Pre√ßo m√°ximo"
          },
          {
            "name": "rating_min",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 5,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Avalia√ß√£o m√≠nima",
              "title": "Rating Min"
            },
            "description": "Avalia√ß√£o m√≠nima"
          },
          {
            "name": "complexity_min",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 5,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Complexidade m√≠nima",
              "title": "Complexity Min"
            },
            "description": "Complexidade m√≠nima"
          },
          {
            "name": "complexity_max",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 5,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Complexidade m√°xima",
              "title": "Complexity Max"
            },
            "description": "Complexidade m√°xima"
          },
          {
            "name": "is_featured",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Templates em destaque",
              "title": "Is Featured"
            },
            "description": "Templates em destaque"
          },
          {
            "name": "is_verified",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Templates verificados",
              "title": "Is Verified"
            },
            "description": "Templates verificados"
          },
          {
            "name": "author_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID do autor",
              "title": "Author Id"
            },
            "description": "ID do autor"
          },
          {
            "name": "industries",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Ind√∫strias aplic√°veis",
              "title": "Industries"
            },
            "description": "Ind√∫strias aplic√°veis"
          },
          {
            "name": "use_cases",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Casos de uso",
              "title": "Use Cases"
            },
            "description": "Casos de uso"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Items por p√°gina",
              "default": 20,
              "title": "Per Page"
            },
            "description": "Items por p√°gina"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(created_at|updated_at|rating|downloads|name|price)$",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(asc|desc)$",
              "default": "desc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/{template_id}": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Template",
        "description": "Obter template espec√≠fico\n\nRetorna detalhes completos de um template incluindo dados do workflow,\nn√≥s, conex√µes, e informa√ß√µes do autor.",
        "operationId": "get_template_api_v1_templates__template_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "marketplace"
        ],
        "summary": "Update Template",
        "description": "Atualizar template\n\nPermite ao autor atualizar informa√ß√µes do template incluindo\nmetadados, conte√∫do, configura√ß√µes e status.",
        "operationId": "update_template_api_v1_templates__template_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "marketplace"
        ],
        "summary": "Delete Template",
        "description": "Deletar template\n\nRemove permanentemente um template. Apenas o autor pode deletar\nseus pr√≥prios templates.",
        "operationId": "delete_template_api_v1_templates__template_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/{template_id}/publish": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Publish Template",
        "description": "Publicar template\n\nTorna um template privado em p√∫blico, disponibilizando-o\nno marketplace para outros usu√°rios.",
        "operationId": "publish_template_api_v1_templates__template_id__publish_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/{template_id}/download": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Download Template",
        "description": "Download de template\n\nRealiza o download de um template. Registra a a√ß√£o para\nestat√≠sticas e controle de licenciamento.",
        "operationId": "download_template_api_v1_templates__template_id__download_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          },
          {
            "name": "download_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(full|preview|demo)$",
              "default": "full",
              "title": "Download Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/install": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Install Template",
        "description": "Instalar template\n\nCria um novo workflow baseado em um template, aplicando\nconfigura√ß√µes personalizadas e vari√°veis do usu√°rio.",
        "operationId": "install_template_api_v1_templates_install_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateInstall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateInstallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/templates/favorites": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Add Favorite",
        "description": "Adicionar favorito\n\nAdiciona um template √† lista de favoritos do usu√°rio\ncom notas opcionais.",
        "operationId": "add_favorite_api_v1_templates_favorites_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoriteCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/templates/favorites/my": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get My Favorites",
        "description": "Meus favoritos\n\nLista todos os templates favoritados pelo usu√°rio atual\ncom pagina√ß√£o.",
        "operationId": "get_my_favorites_api_v1_templates_favorites_my_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Items por p√°gina",
              "default": 20,
              "title": "Per Page"
            },
            "description": "Items por p√°gina"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FavoriteResponse"
                  },
                  "title": "Response Get My Favorites Api V1 Templates Favorites My Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/{template_id}/reviews": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Create Review",
        "description": "Criar review\n\nPermite ao usu√°rio avaliar um template com nota, coment√°rio\ne avalia√ß√£o de aspectos espec√≠ficos.",
        "operationId": "create_review_api_v1_templates__template_id__reviews_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Template Reviews",
        "description": "Obter reviews\n\nLista todas as avalia√ß√µes de um template com pagina√ß√£o\ne op√ß√µes de ordena√ß√£o.",
        "operationId": "get_template_reviews_api_v1_templates__template_id__reviews_get",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Template Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Items por p√°gina",
              "default": 20,
              "title": "Per Page"
            },
            "description": "Items por p√°gina"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(created_at|rating|helpful)$",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(asc|desc)$",
              "default": "desc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponse"
                  },
                  "title": "Response Get Template Reviews Api V1 Templates  Template Id  Reviews Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/collections": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Create Collection",
        "description": "Criar cole√ß√£o\n\nCria uma nova cole√ß√£o de templates relacionados, permitindo\nagrupar templates por tema, projeto ou categoria.",
        "operationId": "create_collection_api_v1_templates_collections_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "List Collections",
        "description": "Listar cole√ß√µes\n\nLista cole√ß√µes p√∫blicas de templates com filtros opcionais\ne pagina√ß√£o.",
        "operationId": "list_collections_api_v1_templates_collections_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Items por p√°gina",
              "default": 20,
              "title": "Per Page"
            },
            "description": "Items por p√°gina"
          },
          {
            "name": "is_featured",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cole√ß√µes em destaque",
              "title": "Is Featured"
            },
            "description": "Cole√ß√µes em destaque"
          },
          {
            "name": "creator_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID do criador",
              "title": "Creator Id"
            },
            "description": "ID do criador"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionResponse"
                  },
                  "title": "Response List Collections Api V1 Templates Collections Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/stats": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Template Stats",
        "description": "Estat√≠sticas de templates\n\nRetorna estat√≠sticas gerais do sistema de templates incluindo\ntotais, distribui√ß√£o por categoria e templates populares.",
        "operationId": "get_template_stats_api_v1_templates_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/marketplace": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Marketplace Stats",
        "description": "Estat√≠sticas do marketplace\n\nRetorna estat√≠sticas espec√≠ficas do marketplace incluindo\ntemplates em destaque, tend√™ncias e top autores.",
        "operationId": "get_marketplace_stats_api_v1_templates_marketplace_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__template__MarketplaceStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/my-stats": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get My Template Stats",
        "description": "Minhas estat√≠sticas\n\nRetorna estat√≠sticas espec√≠ficas do usu√°rio sobre seus templates,\ndownloads, avalia√ß√µes e ganhos.",
        "operationId": "get_my_template_stats_api_v1_templates_my_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTemplateStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/templates/test": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Test Endpoint",
        "description": "Endpoint de teste - LEGADO\n\nMantido para compatibilidade durante a transi√ß√£o.",
        "operationId": "test_endpoint_api_v1_templates_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Create Component",
        "description": "Create a new marketplace component",
        "operationId": "create_component_api_v1_marketplace__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Search Components",
        "description": "Search marketplace components with filters",
        "operationId": "search_components_api_v1_marketplace__get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Query"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "component_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Component Type"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          },
          {
            "name": "is_free",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Free"
            }
          },
          {
            "name": "min_rating",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 5,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Rating"
            }
          },
          {
            "name": "max_price",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Price"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(popularity|rating|downloads|newest|price_low|price_high)$",
              "default": "popularity",
              "title": "Sort By"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/{component_id}": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Component",
        "description": "Get a single component by ID",
        "operationId": "get_component_api_v1_marketplace__component_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "marketplace"
        ],
        "summary": "Update Component",
        "description": "Update a marketplace component",
        "operationId": "update_component_api_v1_marketplace__component_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "marketplace"
        ],
        "summary": "Delete Component",
        "description": "Delete a marketplace component",
        "operationId": "delete_component_api_v1_marketplace__component_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/{component_id}/download": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Download Component",
        "description": "Register a component download",
        "operationId": "download_component_api_v1_marketplace__component_id__download_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/{component_id}/ratings": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Create Rating",
        "description": "Add a rating to a component",
        "operationId": "create_rating_api_v1_marketplace__component_id__ratings_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Ratings",
        "description": "Get ratings for a component",
        "operationId": "get_ratings_api_v1_marketplace__component_id__ratings_get",
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "newest",
              "title": "Sort By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RatingResponse"
                  },
                  "title": "Response Get Ratings Api V1 Marketplace  Component Id  Ratings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/{component_id}/ratings/stats": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Rating Stats",
        "description": "Get rating statistics for a component",
        "operationId": "get_rating_stats_api_v1_marketplace__component_id__ratings_stats_get",
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/{component_id}/purchase": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Purchase Component",
        "description": "Purchase a premium component",
        "operationId": "purchase_component_api_v1_marketplace__component_id__purchase_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/purchases/my": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get My Purchases",
        "description": "Get purchases for current user",
        "operationId": "get_my_purchases_api_v1_marketplace_purchases_my_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseResponse"
                  },
                  "title": "Response Get My Purchases Api V1 Marketplace Purchases My Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/purchases/{purchase_id}": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Purchase",
        "description": "Get a specific purchase by ID",
        "operationId": "get_purchase_api_v1_marketplace_purchases__purchase_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "purchase_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Purchase Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/{component_id}/metadata": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Component Metadata",
        "description": "Get metadata for a component including current version info",
        "operationId": "get_component_metadata_api_v1_marketplace__component_id__metadata_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Component Metadata Api V1 Marketplace  Component Id  Metadata Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/stats": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Marketplace Stats",
        "description": "Get overall marketplace statistics",
        "operationId": "get_marketplace_stats_api_v1_marketplace_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__marketplace__MarketplaceStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/categories": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Categories",
        "description": "Get component categories and counts",
        "operationId": "get_categories_api_v1_marketplace_categories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Get Categories Api V1 Marketplace Categories Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/popular-tags": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Popular Tags",
        "description": "Get most popular component tags",
        "operationId": "get_popular_tags_api_v1_marketplace_popular_tags_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get Popular Tags Api V1 Marketplace Popular Tags Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/recommendations": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Recommendations",
        "description": "Get component recommendations for user",
        "operationId": "get_recommendations_api_v1_marketplace_recommendations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentResponse"
                  },
                  "title": "Response Get Recommendations Api V1 Marketplace Recommendations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/similar/{component_id}": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Similar",
        "description": "Get components similar to given component",
        "operationId": "get_similar_api_v1_marketplace_similar__component_id__get",
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 5,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentResponse"
                  },
                  "title": "Response Get Similar Api V1 Marketplace Similar  Component Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/moderation/pending": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Pending Moderation",
        "description": "Get components pending moderation",
        "operationId": "get_pending_moderation_api_v1_marketplace_moderation_pending_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentModerationResponse"
                  },
                  "title": "Response Get Pending Moderation Api V1 Marketplace Moderation Pending Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/moderation/{component_id}": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Moderate Component",
        "description": "Perform moderation action on component",
        "operationId": "moderate_component_api_v1_marketplace_moderation__component_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Component Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModerationAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentModerationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/bulk": {
      "post": {
        "tags": [
          "marketplace"
        ],
        "summary": "Bulk Operations",
        "description": "Perform bulk operations on components",
        "operationId": "bulk_operations_api_v1_marketplace_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkComponentOperation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkOperationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/marketplace/reports/revenue": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Revenue Report",
        "description": "Get revenue report for period",
        "operationId": "get_revenue_report_api_v1_marketplace_reports_revenue_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Revenue Report Api V1 Marketplace Reports Revenue Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/reports/downloads": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Downloads Report",
        "description": "Get downloads report for period",
        "operationId": "get_downloads_report_api_v1_marketplace_reports_downloads_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Downloads Report Api V1 Marketplace Reports Downloads Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/reports/top": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Get Top Components Report",
        "description": "Get top components based on metric",
        "operationId": "get_top_components_report_api_v1_marketplace_reports_top_get",
        "parameters": [
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "downloads",
              "title": "Metric"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Top Components Report Api V1 Marketplace Reports Top Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Admin Stats",
        "description": "Obter estat√≠sticas administrativas",
        "operationId": "get_admin_stats_api_v1_admin_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Admin Stats Api V1 Admin Stats Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AgentCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "Agent name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Active agent",
            "default": true
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Status",
            "default": "active"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority",
            "description": "Priority (1-10)",
            "default": 1
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version",
            "default": "1.0.0"
          },
          "environment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Environment",
            "description": "Environment",
            "default": "development"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "Workspace ID"
          },
          "current_config": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Config",
            "description": "Active configuration ID"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "AgentCreate",
        "description": "Schema for agent creation - ALIGNED WITH DATABASE"
      },
      "AgentEnvironment": {
        "type": "string",
        "enum": [
          "development",
          "staging",
          "production"
        ],
        "title": "AgentEnvironment",
        "description": "Agent environment - ALIGNED WITH THE DATABASE"
      },
      "AgentListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of agents"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of agents"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "AgentListResponse",
        "description": "Paginated list of agents."
      },
      "AgentQuotaBase": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "Agent ID"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "max_calls": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Calls",
            "description": "Maximum number of calls allowed"
          },
          "max_tokens": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Tokens",
            "description": "Maximum number of tokens allowed"
          },
          "period": {
            "type": "string",
            "format": "duration",
            "title": "Period",
            "description": "Quota period duration"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "tenant_id",
          "max_calls",
          "max_tokens",
          "period"
        ],
        "title": "AgentQuotaBase",
        "description": "Base schema for AgentQuota attributes."
      },
      "AgentQuotaCreateDaily": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "Agent ID"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "max_calls": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Calls",
            "description": "Maximum number of calls allowed per day"
          },
          "max_tokens": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Tokens",
            "description": "Maximum number of tokens allowed per day"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "tenant_id",
          "max_calls",
          "max_tokens"
        ],
        "title": "AgentQuotaCreateDaily",
        "description": "Schema for creating a daily quota."
      },
      "AgentQuotaCreateHourly": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "Agent ID"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "max_calls": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Calls",
            "description": "Maximum number of calls allowed per hour"
          },
          "max_tokens": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Tokens",
            "description": "Maximum number of tokens allowed per hour"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "tenant_id",
          "max_calls",
          "max_tokens"
        ],
        "title": "AgentQuotaCreateHourly",
        "description": "Schema for creating an hourly quota."
      },
      "AgentQuotaCreateMonthly": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "Agent ID"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "max_calls": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Calls",
            "description": "Maximum number of calls allowed per month"
          },
          "max_tokens": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Tokens",
            "description": "Maximum number of tokens allowed per month"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "tenant_id",
          "max_calls",
          "max_tokens"
        ],
        "title": "AgentQuotaCreateMonthly",
        "description": "Schema for creating a monthly quota."
      },
      "AgentQuotaListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentQuotaResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of agent quotas"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of quotas"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "AgentQuotaListResponse",
        "description": "Paginated list of agent quotas."
      },
      "AgentQuotaResponse": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "Agent ID"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "max_calls": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Calls",
            "description": "Maximum number of calls allowed"
          },
          "max_tokens": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Tokens",
            "description": "Maximum number of tokens allowed"
          },
          "period": {
            "type": "string",
            "format": "duration",
            "title": "Period",
            "description": "Quota period duration"
          },
          "quota_id": {
            "type": "string",
            "format": "uuid",
            "title": "Quota Id",
            "description": "Unique identifier for the quota"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the quota was created"
          },
          "period_in_seconds": {
            "type": "number",
            "title": "Period In Seconds",
            "description": "Get period duration in seconds.",
            "readOnly": true
          },
          "period_in_hours": {
            "type": "number",
            "title": "Period In Hours",
            "description": "Get period duration in hours.",
            "readOnly": true
          },
          "period_in_days": {
            "type": "number",
            "title": "Period In Days",
            "description": "Get period duration in days.",
            "readOnly": true
          },
          "period_description": {
            "type": "string",
            "title": "Period Description",
            "description": "Get human-readable period description.",
            "readOnly": true
          },
          "calls_per_second_limit": {
            "type": "number",
            "title": "Calls Per Second Limit",
            "description": "Get calls per second limit.",
            "readOnly": true
          },
          "tokens_per_second_limit": {
            "type": "number",
            "title": "Tokens Per Second Limit",
            "description": "Get tokens per second limit.",
            "readOnly": true
          },
          "is_daily_quota": {
            "type": "boolean",
            "title": "Is Daily Quota",
            "description": "Check if this is a daily quota.",
            "readOnly": true
          },
          "is_hourly_quota": {
            "type": "boolean",
            "title": "Is Hourly Quota",
            "description": "Check if this is an hourly quota.",
            "readOnly": true
          },
          "is_monthly_quota": {
            "type": "boolean",
            "title": "Is Monthly Quota",
            "description": "Check if this is a monthly quota (approximately 30 days).",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "tenant_id",
          "max_calls",
          "max_tokens",
          "period",
          "quota_id",
          "created_at",
          "period_in_seconds",
          "period_in_hours",
          "period_in_days",
          "period_description",
          "calls_per_second_limit",
          "tokens_per_second_limit",
          "is_daily_quota",
          "is_hourly_quota",
          "is_monthly_quota"
        ],
        "title": "AgentQuotaResponse",
        "description": "Response schema for agent quota."
      },
      "AgentQuotaUpdate": {
        "properties": {
          "max_calls": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Calls",
            "description": "Maximum number of calls allowed"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "description": "Maximum number of tokens allowed"
          },
          "period": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Period",
            "description": "Quota period duration"
          }
        },
        "type": "object",
        "title": "AgentQuotaUpdate",
        "description": "Schema for updating an agent quota."
      },
      "AgentQuotaUsageCheck": {
        "properties": {
          "current_calls": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Current Calls",
            "description": "Current number of calls"
          },
          "current_tokens": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Current Tokens",
            "description": "Current number of tokens"
          },
          "calls_limit_exceeded": {
            "type": "boolean",
            "title": "Calls Limit Exceeded",
            "description": "Whether calls limit is exceeded"
          },
          "tokens_limit_exceeded": {
            "type": "boolean",
            "title": "Tokens Limit Exceeded",
            "description": "Whether tokens limit is exceeded"
          },
          "quota_exceeded": {
            "type": "boolean",
            "title": "Quota Exceeded",
            "description": "Whether any quota is exceeded"
          },
          "remaining_calls": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Remaining Calls",
            "description": "Remaining calls"
          },
          "remaining_tokens": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Remaining Tokens",
            "description": "Remaining tokens"
          },
          "calls_usage_percentage": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Calls Usage Percentage",
            "description": "Calls usage percentage"
          },
          "tokens_usage_percentage": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Tokens Usage Percentage",
            "description": "Tokens usage percentage"
          }
        },
        "type": "object",
        "required": [
          "current_calls",
          "current_tokens",
          "calls_limit_exceeded",
          "tokens_limit_exceeded",
          "quota_exceeded",
          "remaining_calls",
          "remaining_tokens",
          "calls_usage_percentage",
          "tokens_usage_percentage"
        ],
        "title": "AgentQuotaUsageCheck",
        "description": "Schema for checking quota usage."
      },
      "AgentResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "Agent name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Active agent",
            "default": true
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Status",
            "default": "active"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority",
            "description": "Priority (1-10)",
            "default": 1
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version",
            "default": "1.0.0"
          },
          "environment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Environment",
            "description": "Environment",
            "default": "development"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "Workspace ID"
          },
          "current_config": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Config",
            "description": "Active configuration ID"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Agent ID"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "User ID"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name",
            "description": "User name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "user_id",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "AgentResponse",
        "description": "Response schema for an agent - PERFECTLY ALIGNED WITH DATABASE"
      },
      "AgentStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "draft",
          "archived",
          "error"
        ],
        "title": "AgentStatus",
        "description": "Agent status - ALIGNED WITH THE DATABASE"
      },
      "AgentUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Agent name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Active agent"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Status"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority",
            "description": "Priority"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version"
          },
          "environment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Environment",
            "description": "Environment"
          },
          "current_config": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Config",
            "description": "Active configuration ID"
          }
        },
        "type": "object",
        "title": "AgentUpdate",
        "description": "Schema for agent updates - ALIGNED WITH DATABASE"
      },
      "AnalyticsAlertCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "The name of the alert."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the alert."
          },
          "condition": {
            "additionalProperties": true,
            "type": "object",
            "title": "Condition",
            "description": "The condition that triggers the alert."
          },
          "notification_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Notification Config",
            "description": "The configuration for sending notifications."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the alert is active.",
            "default": true
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id",
            "description": "The user who owns the alert."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this alert belongs."
          }
        },
        "type": "object",
        "required": [
          "name",
          "condition",
          "notification_config",
          "owner_id"
        ],
        "title": "AnalyticsAlertCreate",
        "description": "Schema for creating a new analytics alert."
      },
      "AnalyticsAlertListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AnalyticsAlertResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of analytics alerts for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of analytics alerts."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "AnalyticsAlertListResponse",
        "description": "Paginated list of analytics alerts."
      },
      "AnalyticsAlertResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "The name of the alert."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the alert."
          },
          "condition": {
            "additionalProperties": true,
            "type": "object",
            "title": "Condition",
            "description": "The condition that triggers the alert."
          },
          "notification_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Notification Config",
            "description": "The configuration for sending notifications."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the alert is active.",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the alert."
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id",
            "description": "The user who owns the alert."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this alert belongs."
          },
          "last_triggered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Triggered At",
            "description": "Timestamp of when the alert was last triggered."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the alert was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          }
        },
        "type": "object",
        "required": [
          "name",
          "condition",
          "notification_config",
          "id",
          "owner_id",
          "created_at",
          "updated_at"
        ],
        "title": "AnalyticsAlertResponse",
        "description": "Response schema for an analytics alert, including database-generated fields."
      },
      "AnalyticsAlertUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "New name for the alert."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          },
          "condition": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Condition",
            "description": "New condition."
          },
          "notification_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Config",
            "description": "New notification configuration."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          }
        },
        "type": "object",
        "title": "AnalyticsAlertUpdate",
        "description": "Schema for updating an existing analytics alert. All fields are optional."
      },
      "AnalyticsDashboardCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dashboard name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dashboard description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Dashboard icon"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Dashboard color (hex)"
          },
          "layout": {
            "$ref": "#/components/schemas/synapse__schemas__analytics_dashboard__DashboardLayout",
            "description": "Dashboard layout configuration"
          },
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/DashboardWidget"
            },
            "type": "array",
            "title": "Widgets",
            "description": "Dashboard widgets"
          },
          "filters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DashboardFilter"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "Dashboard filters"
          },
          "auto_refresh": {
            "type": "boolean",
            "title": "Auto Refresh",
            "description": "Whether to auto-refresh",
            "default": false
          },
          "refresh_interval": {
            "type": "integer",
            "title": "Refresh Interval",
            "description": "Refresh interval in seconds",
            "default": 300
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Whether dashboard is public",
            "default": false
          },
          "shared_with": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shared With",
            "description": "Users dashboard is shared with"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Whether this is the default dashboard",
            "default": false
          },
          "status": {
            "$ref": "#/components/schemas/DashboardStatus",
            "description": "Dashboard status",
            "default": "active"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "Workspace ID"
          }
        },
        "type": "object",
        "required": [
          "name",
          "layout",
          "widgets"
        ],
        "title": "AnalyticsDashboardCreate",
        "description": "Schema for creating a new analytics dashboard"
      },
      "AnalyticsDashboardListResponse": {
        "properties": {
          "dashboards": {
            "items": {
              "$ref": "#/components/schemas/AnalyticsDashboardResponse"
            },
            "type": "array",
            "title": "Dashboards",
            "description": "List of dashboards"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of dashboards"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Number of dashboards per page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total number of pages"
          }
        },
        "type": "object",
        "required": [
          "dashboards",
          "total",
          "page",
          "per_page",
          "pages"
        ],
        "title": "AnalyticsDashboardListResponse",
        "description": "Schema for analytics dashboard list response"
      },
      "AnalyticsDashboardResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Dashboard name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dashboard description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Dashboard icon"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Dashboard color (hex)"
          },
          "layout": {
            "$ref": "#/components/schemas/DashboardLayout-Output",
            "description": "Dashboard layout configuration"
          },
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/DashboardWidget"
            },
            "type": "array",
            "title": "Widgets",
            "description": "Dashboard widgets"
          },
          "filters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DashboardFilter"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "Dashboard filters"
          },
          "auto_refresh": {
            "type": "boolean",
            "title": "Auto Refresh",
            "description": "Whether to auto-refresh",
            "default": false
          },
          "refresh_interval": {
            "type": "integer",
            "title": "Refresh Interval",
            "description": "Refresh interval in seconds",
            "default": 300
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Whether dashboard is public",
            "default": false
          },
          "shared_with": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shared With",
            "description": "Users dashboard is shared with"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Whether this is the default dashboard",
            "default": false
          },
          "status": {
            "$ref": "#/components/schemas/DashboardStatus",
            "description": "Dashboard status",
            "default": "active"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "Workspace ID"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Dashboard ID"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "User ID"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "last_viewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Viewed At",
            "description": "Last viewed timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "layout",
          "widgets",
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "AnalyticsDashboardResponse",
        "description": "Schema for analytics dashboard response"
      },
      "AnalyticsDashboardUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Dashboard name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Dashboard description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Dashboard icon"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Dashboard color (hex)"
          },
          "layout": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/synapse__schemas__analytics_dashboard__DashboardLayout"
              },
              {
                "type": "null"
              }
            ],
            "description": "Dashboard layout configuration"
          },
          "widgets": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DashboardWidget"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Widgets",
            "description": "Dashboard widgets"
          },
          "filters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DashboardFilter"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "Dashboard filters"
          },
          "auto_refresh": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Refresh",
            "description": "Whether to auto-refresh"
          },
          "refresh_interval": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Interval",
            "description": "Refresh interval in seconds"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public",
            "description": "Whether dashboard is public"
          },
          "shared_with": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shared With",
            "description": "Users dashboard is shared with"
          },
          "is_default": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Default",
            "description": "Whether this is the default dashboard"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DashboardStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Dashboard status"
          }
        },
        "type": "object",
        "title": "AnalyticsDashboardUpdate",
        "description": "Schema for updating an existing analytics dashboard"
      },
      "AnalyticsExportCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "The name of the export."
          },
          "export_type": {
            "$ref": "#/components/schemas/ExportType",
            "description": "The file format of the export."
          },
          "export_query": {
            "additionalProperties": true,
            "type": "object",
            "title": "Export Query",
            "description": "The query used to generate the export."
          },
          "status": {
            "$ref": "#/components/schemas/ExportStatus",
            "description": "The current status of the export.",
            "default": "pending"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id",
            "description": "The user who owns the export."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this export belongs."
          }
        },
        "type": "object",
        "required": [
          "name",
          "export_type",
          "export_query",
          "owner_id"
        ],
        "title": "AnalyticsExportCreate",
        "description": "Schema for creating a new analytics export."
      },
      "AnalyticsExportListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AnalyticsExportResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of analytics exports for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of analytics exports."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "AnalyticsExportListResponse",
        "description": "Paginated list of analytics exports."
      },
      "AnalyticsExportResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "The name of the export."
          },
          "export_type": {
            "$ref": "#/components/schemas/ExportType",
            "description": "The file format of the export."
          },
          "export_query": {
            "additionalProperties": true,
            "type": "object",
            "title": "Export Query",
            "description": "The query used to generate the export."
          },
          "status": {
            "$ref": "#/components/schemas/ExportStatus",
            "description": "The current status of the export.",
            "default": "pending"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the export."
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id",
            "description": "The user who owns the export."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this export belongs."
          },
          "file_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Path",
            "description": "The path to the exported file."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the export was created."
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Timestamp of when the export was completed."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Timestamp of the last update."
          }
        },
        "type": "object",
        "required": [
          "name",
          "export_type",
          "export_query",
          "id",
          "owner_id",
          "created_at"
        ],
        "title": "AnalyticsExportResponse",
        "description": "Response schema for an analytics export, including database-generated fields."
      },
      "AnalyticsExportUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "New name for the export."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExportStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "New status for the export."
          }
        },
        "type": "object",
        "title": "AnalyticsExportUpdate",
        "description": "Schema for updating an existing analytics export. All fields are optional."
      },
      "BillingEventCreate": {
        "properties": {
          "event_type": {
            "$ref": "#/components/schemas/BillingEventType",
            "description": "The type of the billing event."
          },
          "amount_usd": {
            "type": "number",
            "title": "Amount Usd",
            "description": "The amount of the event in USD."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the event."
          },
          "invoice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id",
            "description": "The ID of the associated invoice."
          },
          "payment_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider",
            "description": "The payment provider used (e.g., 'stripe', 'paypal')."
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id",
            "description": "The ID of the payment transaction."
          },
          "billing_metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Billing Metadata",
            "description": "Additional metadata for the event."
          },
          "status": {
            "$ref": "#/components/schemas/BillingEventStatus",
            "description": "The current status of the event.",
            "default": "pending"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The user associated with the event."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which this event belongs."
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "The workspace associated with the event."
          },
          "related_usage_log_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Usage Log Id",
            "description": "The usage log associated with the event."
          },
          "related_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Message Id",
            "description": "The message associated with the event."
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "amount_usd",
          "user_id",
          "tenant_id"
        ],
        "title": "BillingEventCreate",
        "description": "Schema for creating a new billing event."
      },
      "BillingEventListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BillingEventResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of billing events for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of billing events."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "BillingEventListResponse",
        "description": "Paginated list of billing events."
      },
      "BillingEventResponse": {
        "properties": {
          "event_type": {
            "$ref": "#/components/schemas/BillingEventType",
            "description": "The type of the billing event."
          },
          "amount_usd": {
            "type": "number",
            "title": "Amount Usd",
            "description": "The amount of the event in USD."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the event."
          },
          "invoice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id",
            "description": "The ID of the associated invoice."
          },
          "payment_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider",
            "description": "The payment provider used (e.g., 'stripe', 'paypal')."
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id",
            "description": "The ID of the payment transaction."
          },
          "billing_metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Billing Metadata",
            "description": "Additional metadata for the event."
          },
          "status": {
            "$ref": "#/components/schemas/BillingEventStatus",
            "description": "The current status of the event.",
            "default": "pending"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the event."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The user associated with the event."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which this event belongs."
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "The workspace associated with the event."
          },
          "related_usage_log_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Usage Log Id",
            "description": "The usage log associated with the event."
          },
          "related_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Message Id",
            "description": "The message associated with the event."
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At",
            "description": "Timestamp of when the event was processed."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the event was created."
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "amount_usd",
          "id",
          "user_id",
          "tenant_id",
          "created_at"
        ],
        "title": "BillingEventResponse",
        "description": "Response schema for a billing event, including database-generated fields."
      },
      "BillingEventStatus": {
        "type": "string",
        "enum": [
          "pending",
          "completed",
          "failed",
          "refunded"
        ],
        "title": "BillingEventStatus",
        "description": "Enum for the status of a billing event."
      },
      "BillingEventType": {
        "type": "string",
        "enum": [
          "usage",
          "subscription",
          "credit",
          "refund"
        ],
        "title": "BillingEventType",
        "description": "Enum for the type of billing event."
      },
      "BillingEventUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BillingEventStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "New status for the event."
          },
          "invoice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id",
            "description": "New invoice ID."
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id",
            "description": "New payment transaction ID."
          },
          "billing_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Metadata",
            "description": "New metadata."
          }
        },
        "type": "object",
        "title": "BillingEventUpdate",
        "description": "Schema for updating an existing billing event. All fields are optional."
      },
      "Body_change_password_api_v1_auth_change_password_post": {
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "Body_change_password_api_v1_auth_change_password_post"
      },
      "Body_delete_account_api_v1_auth_account_delete": {
        "properties": {
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "Body_delete_account_api_v1_auth_account_delete"
      },
      "Body_upload_file_api_v1_files_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_file_api_v1_files_upload_post"
      },
      "BulkComponentOperation": {
        "properties": {
          "action": {
            "type": "string",
            "pattern": "^(approve|reject|suspend|feature|unfeature)$",
            "title": "Action"
          },
          "component_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Component Ids"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "action",
          "component_ids"
        ],
        "title": "BulkComponentOperation"
      },
      "BulkOperationResponse": {
        "properties": {
          "success_count": {
            "type": "integer",
            "title": "Success Count"
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count"
          },
          "errors": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "success_count",
          "error_count",
          "errors"
        ],
        "title": "BulkOperationResponse"
      },
      "CampaignCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Nome da campanha"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o da campanha"
          },
          "type": {
            "$ref": "#/components/schemas/CampaignType",
            "description": "Tipo da campanha"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CampaignStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status da campanha"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "Assunto (para email)"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "description": "Conte√∫do da campanha"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "ID do template usado"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At",
            "description": "Data/hora agendada"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At",
            "description": "Data/hora de envio"
          },
          "stats": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stats",
            "description": "Estat√≠sticas da campanha"
          },
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings",
            "description": "Configura√ß√µes da campanha"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "title": "Created By",
            "description": "ID do usu√°rio criador"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "tenant_id",
          "created_by"
        ],
        "title": "CampaignCreate",
        "description": "Schema para cria√ß√£o de Campaign."
      },
      "CampaignList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CampaignResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de campanhas"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de campanhas"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page",
            "description": "P√°gina atual",
            "default": 1
          },
          "size": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Size",
            "description": "Tamanho da p√°gina",
            "default": 10
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "pages"
        ],
        "title": "CampaignList",
        "description": "Schema para lista paginada de Campaign."
      },
      "CampaignResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Nome da campanha"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o da campanha"
          },
          "type": {
            "$ref": "#/components/schemas/CampaignType",
            "description": "Tipo da campanha"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CampaignStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status da campanha"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "Assunto (para email)"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "description": "Conte√∫do da campanha"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "ID do template usado"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At",
            "description": "Data/hora agendada"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At",
            "description": "Data/hora de envio"
          },
          "stats": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stats",
            "description": "Estat√≠sticas da campanha"
          },
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings",
            "description": "Configura√ß√µes da campanha"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID da campanha"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "title": "Created By",
            "description": "ID do usu√°rio criador"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Data de atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "id",
          "tenant_id",
          "created_by"
        ],
        "title": "CampaignResponse",
        "description": "Schema para resposta de Campaign."
      },
      "CampaignStatus": {
        "type": "string",
        "enum": [
          "draft",
          "scheduled",
          "sending",
          "sent",
          "paused",
          "completed",
          "cancelled"
        ],
        "title": "CampaignStatus",
        "description": "Status poss√≠veis da campanha."
      },
      "CampaignType": {
        "type": "string",
        "enum": [
          "email",
          "sms",
          "push",
          "webinar"
        ],
        "title": "CampaignType",
        "description": "Tipos de campanha."
      },
      "CampaignUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CampaignType"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CampaignStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "subject": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sent At"
          },
          "stats": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stats"
          },
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          }
        },
        "type": "object",
        "title": "CampaignUpdate",
        "description": "Schema para atualiza√ß√£o de Campaign."
      },
      "CollectionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "template_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Template Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "template_ids"
        ],
        "title": "CollectionCreate",
        "description": "Schema para cria√ß√£o de cole√ß√£o"
      },
      "CollectionResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "collection_id": {
            "type": "string",
            "format": "uuid",
            "title": "Collection Id"
          },
          "creator_id": {
            "type": "string",
            "format": "uuid",
            "title": "Creator Id"
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured"
          },
          "template_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Template Ids"
          },
          "view_count": {
            "type": "integer",
            "title": "View Count"
          },
          "follow_count": {
            "type": "integer",
            "title": "Follow Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "creator_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator Name"
          },
          "creator_avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator Avatar"
          },
          "templates_count": {
            "type": "integer",
            "title": "Templates Count",
            "default": 0
          },
          "templates_preview": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TemplateResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templates Preview"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "collection_id",
          "creator_id",
          "is_featured",
          "template_ids",
          "view_count",
          "follow_count",
          "created_at",
          "updated_at"
        ],
        "title": "CollectionResponse",
        "description": "Schema de resposta para cole√ß√£o"
      },
      "ComponentCategory": {
        "type": "string",
        "enum": [
          "ai_ml",
          "data_processing",
          "automation",
          "integration",
          "analytics",
          "communication",
          "productivity",
          "utilities"
        ],
        "title": "ComponentCategory"
      },
      "ComponentCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/ComponentCategory"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "component_type": {
            "$ref": "#/components/schemas/ComponentType"
          },
          "component_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Component Data"
          },
          "configuration_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration Schema"
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies"
          },
          "compatibility": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compatibility"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "changelog": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changelog"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          },
          "icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Url"
          },
          "screenshots": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Screenshots"
          },
          "demo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "is_free": {
            "type": "boolean",
            "title": "Is Free",
            "default": true
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "default": "USD"
          },
          "license_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LicenseType"
              },
              {
                "type": "null"
              }
            ],
            "default": "MIT"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "default": "1.0.0"
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "component_type",
          "component_data"
        ],
        "title": "ComponentCreate"
      },
      "ComponentModerationResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "author_name": {
            "type": "string",
            "title": "Author Name"
          },
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Submitted At"
          },
          "review_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Notes"
          },
          "reviewer_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewer Id"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "author_name",
          "status",
          "submitted_at"
        ],
        "title": "ComponentModerationResponse"
      },
      "ComponentResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/ComponentCategory"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "component_type": {
            "$ref": "#/components/schemas/ComponentType"
          },
          "component_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Component Data"
          },
          "configuration_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration Schema"
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies"
          },
          "compatibility": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compatibility"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "changelog": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changelog"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          },
          "icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Url"
          },
          "screenshots": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Screenshots"
          },
          "demo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "is_free": {
            "type": "boolean",
            "title": "Is Free",
            "default": true
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "default": "USD"
          },
          "license_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LicenseType"
              },
              {
                "type": "null"
              }
            ],
            "default": "MIT"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "default": "1.0.0"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "author_id": {
            "type": "string",
            "title": "Author Id"
          },
          "author_name": {
            "type": "string",
            "title": "Author Name"
          },
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count",
            "default": 0
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average",
            "default": 0.0
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count",
            "default": 0
          },
          "popularity_score": {
            "type": "number",
            "title": "Popularity Score",
            "default": 0.0
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured",
            "default": false
          },
          "last_download_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Download At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "component_type",
          "component_data",
          "id",
          "slug",
          "author_id",
          "author_name",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "ComponentResponse"
      },
      "ComponentSearchResponse": {
        "properties": {
          "components": {
            "items": {
              "$ref": "#/components/schemas/ComponentResponse"
            },
            "type": "array",
            "title": "Components"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "components",
          "total",
          "page",
          "pages",
          "has_next",
          "has_prev"
        ],
        "title": "ComponentSearchResponse"
      },
      "ComponentStatus": {
        "type": "string",
        "enum": [
          "draft",
          "pending",
          "approved",
          "rejected",
          "suspended"
        ],
        "title": "ComponentStatus"
      },
      "ComponentType": {
        "type": "string",
        "enum": [
          "workflow_template",
          "node_component",
          "integration",
          "plugin",
          "theme",
          "widget"
        ],
        "title": "ComponentType"
      },
      "ComponentUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000,
                "minLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ComponentCategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "component_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Component Data"
          },
          "configuration_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration Schema"
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies"
          },
          "compatibility": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compatibility"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "changelog": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changelog"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          },
          "icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Url"
          },
          "screenshots": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Screenshots"
          },
          "demo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "is_free": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Free"
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "license_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LicenseType"
              },
              {
                "type": "null"
              }
            ]
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          }
        },
        "type": "object",
        "title": "ComponentUpdate"
      },
      "ContactCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Contact email address"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Contact first name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Contact last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Contact phone number"
          },
          "company": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company",
            "description": "Contact company"
          },
          "job_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Title",
            "description": "Contact job title"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Contact status"
          },
          "lead_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lead Score",
            "description": "Contact lead score"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id",
            "description": "Source ID reference"
          },
          "custom_fields": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Fields",
            "description": "Custom fields"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Comma-separated tags"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "ContactCreate",
        "description": "Schema for creating a new contact"
      },
      "ContactListCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Contact list name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Contact list description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "List type (static/dynamic/smart)"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "List filters"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ContactListCreate",
        "description": "Schema for creating a new contact list"
      },
      "ContactListUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Contact list name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Contact list description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "List type (static/dynamic/smart)"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "List filters"
          }
        },
        "type": "object",
        "title": "ContactListUpdate",
        "description": "Schema for updating an existing contact list"
      },
      "ContactNoteCreate": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The content of the note."
          },
          "type": {
            "$ref": "#/components/schemas/NoteType",
            "description": "The type of the note.",
            "default": "note"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "description": "Whether the note is private to the author.",
            "default": false
          },
          "contact_id": {
            "type": "string",
            "format": "uuid",
            "title": "Contact Id",
            "description": "The contact to which this note is associated."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The user who authored the note."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this note belongs."
          }
        },
        "type": "object",
        "required": [
          "content",
          "contact_id",
          "user_id"
        ],
        "title": "ContactNoteCreate",
        "description": "Schema for creating a new contact note."
      },
      "ContactNoteListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ContactNoteResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of contact notes for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of notes."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "ContactNoteListResponse",
        "description": "Paginated list of contact notes."
      },
      "ContactNoteResponse": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The content of the note."
          },
          "type": {
            "$ref": "#/components/schemas/NoteType",
            "description": "The type of the note.",
            "default": "note"
          },
          "is_private": {
            "type": "boolean",
            "title": "Is Private",
            "description": "Whether the note is private to the author.",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the note."
          },
          "contact_id": {
            "type": "string",
            "format": "uuid",
            "title": "Contact Id",
            "description": "The contact to which this note is associated."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The user who authored the note."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this note belongs."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the note was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "author_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Name",
            "description": "The name of the user who created the note."
          }
        },
        "type": "object",
        "required": [
          "content",
          "id",
          "contact_id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "ContactNoteResponse",
        "description": "Response schema for a contact note, including database-generated fields."
      },
      "ContactNoteUpdate": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "description": "New content for the note."
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NoteType"
              },
              {
                "type": "null"
              }
            ],
            "description": "New type for the note."
          },
          "is_private": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Private",
            "description": "New privacy status."
          }
        },
        "type": "object",
        "title": "ContactNoteUpdate",
        "description": "Schema for updating an existing contact note. All fields are optional."
      },
      "ContactResponse": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Contact email address"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Contact first name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Contact last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Contact phone number"
          },
          "company": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company",
            "description": "Contact company"
          },
          "job_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Title",
            "description": "Contact job title"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Contact status"
          },
          "lead_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lead Score",
            "description": "Contact lead score"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id",
            "description": "Source ID reference"
          },
          "custom_fields": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Fields",
            "description": "Custom fields"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Comma-separated tags"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Contact ID"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "ContactResponse",
        "description": "Schema for contact response"
      },
      "ContactSourceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "Name of the contact source."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Detailed description of the source."
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType",
            "description": "The type of integration."
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config",
            "description": "Configuration for the integration (e.g., API keys, hostnames)."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether this source is currently active and can receive contacts.",
            "default": true
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which this source belongs."
          }
        },
        "type": "object",
        "required": [
          "name",
          "integration_type",
          "tenant_id"
        ],
        "title": "ContactSourceCreate",
        "description": "Schema for creating a new contact source."
      },
      "ContactSourceListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ContactSourceResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of contact sources for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of sources."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "ContactSourceListResponse",
        "description": "Paginated list of contact sources."
      },
      "ContactSourceResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "Name of the contact source."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Detailed description of the source."
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType",
            "description": "The type of integration."
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config",
            "description": "Configuration for the integration (e.g., API keys, hostnames)."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether this source is currently active and can receive contacts.",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the source."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which this source belongs."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the source was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "contacts_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts Count",
            "description": "Number of contacts originating from this source."
          }
        },
        "type": "object",
        "required": [
          "name",
          "integration_type",
          "id",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "ContactSourceResponse",
        "description": "Response schema for a contact source, including database-generated fields."
      },
      "ContactSourceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "New name for the source."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "New configuration."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          }
        },
        "type": "object",
        "title": "ContactSourceUpdate",
        "description": "Schema for updating an existing contact source. All fields are optional."
      },
      "ContactTagCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "Name of the tag, must be unique per tenant."
          },
          "color": {
            "type": "string",
            "maxLength": 7,
            "title": "Color",
            "description": "Hex color code for the tag display.",
            "default": "#6B7280"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional description of what the tag represents."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which the tag belongs."
          }
        },
        "type": "object",
        "required": [
          "name",
          "tenant_id"
        ],
        "title": "ContactTagCreate",
        "description": "Schema for creating a new contact tag."
      },
      "ContactTagListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ContactTagResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of contact tags for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of tags."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "ContactTagListResponse",
        "description": "Paginated list of contact tags."
      },
      "ContactTagResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "Name of the tag, must be unique per tenant."
          },
          "color": {
            "type": "string",
            "maxLength": 7,
            "title": "Color",
            "description": "Hex color code for the tag display.",
            "default": "#6B7280"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Optional description of what the tag represents."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the tag."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which the tag belongs."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the tag was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "contacts_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contacts Count",
            "description": "Number of contacts associated with this tag."
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "ContactTagResponse",
        "description": "Response schema for a contact tag, including database-generated fields."
      },
      "ContactTagUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "New name for the tag."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "New hex color code."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          }
        },
        "type": "object",
        "title": "ContactTagUpdate",
        "description": "Schema for updating an existing contact tag. All fields are optional."
      },
      "ContactUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Contact email address"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "Contact first name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Contact last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Contact phone number"
          },
          "company": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company",
            "description": "Contact company"
          },
          "job_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Title",
            "description": "Contact job title"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Contact status"
          },
          "lead_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lead Score",
            "description": "Contact lead score"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id",
            "description": "Source ID reference"
          },
          "custom_fields": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Fields",
            "description": "Custom fields"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Comma-separated tags"
          }
        },
        "type": "object",
        "title": "ContactUpdate",
        "description": "Schema for updating an existing contact"
      },
      "ConversationCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "T√≠tulo da conversa"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status da conversa",
            "default": "active"
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id",
            "description": "ID do agente"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "ID do workspace"
          },
          "context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context",
            "description": "Contexto da conversa"
          },
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings",
            "description": "Configura√ß√µes da conversa"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadados adicionais"
          }
        },
        "type": "object",
        "title": "ConversationCreate",
        "description": "Schema for creating conversation"
      },
      "ConversationResponse": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "T√≠tulo da conversa"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status da conversa"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID da conversa"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "ID do usu√°rio"
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id",
            "description": "ID do agente"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "ID do workspace"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count",
            "description": "N√∫mero de mensagens",
            "default": 0
          },
          "total_tokens_used": {
            "type": "integer",
            "title": "Total Tokens Used",
            "description": "Total de tokens usados",
            "default": 0
          },
          "agent_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Name",
            "description": "Nome do agente"
          },
          "latest_message": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Message",
            "description": "√öltima mensagem"
          },
          "last_message_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Message At",
            "description": "Data da √∫ltima mensagem"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          },
          "context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context",
            "description": "Contexto da conversa"
          },
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings",
            "description": "Configura√ß√µes da conversa"
          }
        },
        "type": "object",
        "required": [
          "status",
          "id",
          "user_id",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "ConversationResponse",
        "description": "Response schema for conversation"
      },
      "ConversationTitleUpdate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title",
            "description": "Novo t√≠tulo"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "ConversationTitleUpdate",
        "description": "Schema for updating conversation title"
      },
      "DashboardCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "layout": {
            "$ref": "#/components/schemas/synapse__schemas__analytics__DashboardLayout"
          },
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/WidgetConfig"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Widgets"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "refresh_interval": {
            "type": "integer",
            "maximum": 3600.0,
            "minimum": 30.0,
            "title": "Refresh Interval",
            "default": 300
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "name",
          "layout",
          "widgets"
        ],
        "title": "DashboardCreate"
      },
      "DashboardFilter": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Filter ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Filter name"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Filter type (date, select, multi-select, etc.)"
          },
          "value": {
            "title": "Value",
            "description": "Filter value"
          },
          "options": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options",
            "description": "Filter options"
          },
          "is_global": {
            "type": "boolean",
            "title": "Is Global",
            "description": "Whether filter applies globally",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "value"
        ],
        "title": "DashboardFilter",
        "description": "Schema for dashboard filter"
      },
      "DashboardLayout-Output": {
        "properties": {
          "columns": {
            "type": "integer",
            "title": "Columns",
            "description": "Number of columns",
            "default": 12
          },
          "rows": {
            "type": "integer",
            "title": "Rows",
            "description": "Number of rows",
            "default": 24
          },
          "breakpoints": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Breakpoints",
            "description": "Responsive breakpoints"
          },
          "margins": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Margins",
            "description": "Layout margins"
          },
          "padding": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Padding",
            "description": "Layout padding"
          }
        },
        "type": "object",
        "title": "DashboardLayout",
        "description": "Schema for dashboard layout"
      },
      "DashboardStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "draft",
          "archived"
        ],
        "title": "DashboardStatus",
        "description": "Enum for dashboard status"
      },
      "DashboardWidget": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Widget ID"
          },
          "type": {
            "$ref": "#/components/schemas/WidgetType",
            "description": "Widget type"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Widget title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Widget description"
          },
          "position": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Position",
            "description": "Widget position (x, y, width, height)"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config",
            "description": "Widget configuration"
          },
          "data_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Source",
            "description": "Data source"
          },
          "refresh_interval": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Interval",
            "description": "Refresh interval in seconds"
          },
          "is_visible": {
            "type": "boolean",
            "title": "Is Visible",
            "description": "Whether widget is visible",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "title",
          "position",
          "config"
        ],
        "title": "DashboardWidget",
        "description": "Schema for dashboard widget"
      },
      "DownloadResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "component_id": {
            "type": "integer",
            "title": "Component Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "download_type": {
            "type": "string",
            "title": "Download Type",
            "default": "manual"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "completed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "component_id",
          "user_id",
          "version",
          "created_at"
        ],
        "title": "DownloadResponse"
      },
      "EmailVerificationRequest": {
        "properties": {
          "token": {
            "type": "string",
            "maxLength": 500,
            "title": "Token",
            "description": "Token de verifica√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "EmailVerificationRequest",
        "description": "Schema para verifica√ß√£o de email - ALINHADO COM email_verification_tokens TABLE"
      },
      "EventCreate": {
        "properties": {
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "event_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Event Name"
          },
          "event_category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Category"
          },
          "event_action": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Action"
          },
          "event_label": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Label"
          },
          "event_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Value"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "page_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Url"
          },
          "page_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Title"
          },
          "referrer": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Referrer"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 45
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "browser": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser"
          },
          "os": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Os"
          },
          "screen_resolution": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Screen Resolution"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "event_name"
        ],
        "title": "EventCreate"
      },
      "EventType": {
        "type": "string",
        "enum": [
          "page_view",
          "click",
          "form_submit",
          "workflow_create",
          "workflow_execute",
          "user_login",
          "user_logout",
          "feature_use",
          "error",
          "custom"
        ],
        "title": "EventType"
      },
      "ExecutionCreate": {
        "properties": {
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data"
          },
          "context_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Data"
          },
          "variables": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variables"
          },
          "priority": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Priority",
            "default": 5
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds",
            "default": 3600
          },
          "auto_retry": {
            "type": "boolean",
            "title": "Auto Retry",
            "default": true
          },
          "max_retries": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Max Retries",
            "default": 3
          },
          "notify_on_completion": {
            "type": "boolean",
            "title": "Notify On Completion",
            "default": true
          },
          "notify_on_failure": {
            "type": "boolean",
            "title": "Notify On Failure",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "workflow_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Workflow Id"
          }
        },
        "type": "object",
        "required": [
          "workflow_id"
        ],
        "title": "ExecutionCreate",
        "description": "Schema para cria√ß√£o de execu√ß√£o de workflow"
      },
      "ExecutionMetricsResponse": {
        "properties": {
          "execution_id": {
            "type": "string",
            "title": "Execution Id"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "total_duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Duration Ms"
          },
          "nodes_count": {
            "type": "integer",
            "title": "Nodes Count",
            "default": 0
          },
          "completed_nodes": {
            "type": "integer",
            "title": "Completed Nodes",
            "default": 0
          },
          "failed_nodes": {
            "type": "integer",
            "title": "Failed Nodes",
            "default": 0
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "default": 0.0
          },
          "average_node_duration_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Node Duration Ms"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "default": 0
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage",
            "default": 0.0
          },
          "nodes_by_status": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Nodes By Status",
            "default": {}
          },
          "fastest_node_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fastest Node Ms"
          },
          "slowest_node_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slowest Node Ms"
          },
          "error_types": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Error Types",
            "default": {}
          },
          "most_common_errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Most Common Errors",
            "default": []
          },
          "estimated_duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration Ms"
          },
          "actual_duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Duration Ms"
          },
          "efficiency_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Efficiency Percentage"
          }
        },
        "type": "object",
        "required": [
          "execution_id",
          "workflow_id"
        ],
        "title": "ExecutionMetricsResponse",
        "description": "Response schema for execution metrics and statistics"
      },
      "ExecutionResponse": {
        "properties": {
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data"
          },
          "context_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Data"
          },
          "variables": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variables"
          },
          "priority": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Priority",
            "default": 5
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds",
            "default": 3600
          },
          "auto_retry": {
            "type": "boolean",
            "title": "Auto Retry",
            "default": true
          },
          "max_retries": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Max Retries",
            "default": 3
          },
          "notify_on_completion": {
            "type": "boolean",
            "title": "Notify On Completion",
            "default": true
          },
          "notify_on_failure": {
            "type": "boolean",
            "title": "Notify On Failure",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "execution_id": {
            "type": "string",
            "title": "Execution Id"
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workflow Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/ExecutionStatus"
          },
          "output_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Data"
          },
          "total_nodes": {
            "type": "integer",
            "title": "Total Nodes"
          },
          "completed_nodes": {
            "type": "integer",
            "title": "Completed Nodes"
          },
          "failed_nodes": {
            "type": "integer",
            "title": "Failed Nodes"
          },
          "progress_percentage": {
            "type": "integer",
            "title": "Progress Percentage"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "timeout_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout At"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "actual_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Duration"
          },
          "execution_log": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Log"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          },
          "debug_info": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Debug Info"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "execution_id",
          "workflow_id",
          "user_id",
          "status",
          "total_nodes",
          "completed_nodes",
          "failed_nodes",
          "progress_percentage",
          "retry_count",
          "created_at",
          "updated_at"
        ],
        "title": "ExecutionResponse",
        "description": "Schema de resposta para execu√ß√£o de workflow"
      },
      "ExecutionStatus": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "paused",
          "completed",
          "failed",
          "cancelled",
          "timeout"
        ],
        "title": "ExecutionStatus",
        "description": "Status de execu√ß√£o do workflow"
      },
      "ExportStatus": {
        "type": "string",
        "enum": [
          "pending",
          "processing",
          "completed",
          "failed",
          "cancelled"
        ],
        "title": "ExportStatus",
        "description": "Enum for the status of an export."
      },
      "ExportType": {
        "type": "string",
        "enum": [
          "csv",
          "json",
          "pdf",
          "xlsx"
        ],
        "title": "ExportType",
        "description": "Enum for the type of export."
      },
      "FavoriteCreate": {
        "properties": {
          "template_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Template Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "template_id"
        ],
        "title": "FavoriteCreate",
        "description": "Schema para adicionar favorito"
      },
      "FavoriteResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "template_id": {
            "type": "string",
            "format": "uuid",
            "title": "Template Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "template_name": {
            "type": "string",
            "title": "Template Name"
          },
          "template_title": {
            "type": "string",
            "title": "Template Title"
          },
          "template_category": {
            "type": "string",
            "title": "Template Category"
          }
        },
        "type": "object",
        "required": [
          "id",
          "template_id",
          "user_id",
          "created_at",
          "template_name",
          "template_title",
          "template_category"
        ],
        "title": "FavoriteResponse",
        "description": "Schema de resposta para favorito"
      },
      "FeatureCreate": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 100,
            "title": "Key",
            "description": "Chave √∫nica da feature"
          },
          "name": {
            "type": "string",
            "maxLength": 200,
            "title": "Name",
            "description": "Nome da feature"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o da feature"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Categoria"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se a feature est√° ativa",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "key",
          "name"
        ],
        "title": "FeatureCreate",
        "description": "Schema para cria√ß√£o de feature"
      },
      "FeatureListResponse": {
        "properties": {
          "features": {
            "items": {
              "$ref": "#/components/schemas/FeatureResponse"
            },
            "type": "array",
            "title": "Features",
            "description": "Lista de features"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total de registros"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Tamanho da p√°gina"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Se h√° pr√≥xima p√°gina"
          }
        },
        "type": "object",
        "required": [
          "features",
          "total_count",
          "page",
          "page_size",
          "has_next"
        ],
        "title": "FeatureListResponse",
        "description": "Schema de resposta para listagem de features"
      },
      "FeatureResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID da feature"
          },
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Chave da feature"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome da feature"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Categoria"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se est√° ativa"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "id",
          "key",
          "name",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "FeatureResponse",
        "description": "Schema de resposta para feature"
      },
      "FeatureUpdate": {
        "properties": {
          "key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Key",
            "description": "Nova chave"
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Novo nome"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Nova descri√ß√£o"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Nova categoria"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Novo status"
          }
        },
        "type": "object",
        "title": "FeatureUpdate",
        "description": "Schema para atualiza√ß√£o de feature"
      },
      "FileListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FileResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of files"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of files"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "FileListResponse",
        "description": "Paginated list of files."
      },
      "FileResponse": {
        "properties": {
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "File name"
          },
          "original_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Original Name",
            "description": "Original name"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size",
            "description": "File size in bytes"
          },
          "mime_type": {
            "type": "string",
            "maxLength": 100,
            "title": "Mime Type",
            "description": "MIME type"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "title": "Category",
            "description": "Category"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Public file",
            "default": false
          },
          "tags": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "File ID"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Status"
          },
          "scan_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scan Status",
            "description": "Scan status"
          },
          "access_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Count",
            "description": "Number of accesses"
          },
          "last_accessed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Accessed At",
            "description": "Last access timestamp"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "User ID"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "original_name",
          "file_size",
          "mime_type",
          "category",
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "FileResponse",
        "description": "Response schema for a file - PERFECTLY ALIGNED WITH DATABASE"
      },
      "FileStatus": {
        "type": "string",
        "enum": [
          "active",
          "processing",
          "completed",
          "failed",
          "archived",
          "deleted"
        ],
        "title": "FileStatus",
        "description": "File status - ALIGNED WITH THE DATABASE"
      },
      "FileUpdate": {
        "properties": {
          "filename": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename",
            "description": "File name"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public",
            "description": "Public file"
          },
          "tags": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FileStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status"
          }
        },
        "type": "object",
        "title": "FileUpdate",
        "description": "Schema for file updates - ALIGNED WITH DATABASE"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InsightCategory": {
        "type": "string",
        "enum": [
          "workflow",
          "agent",
          "account",
          "billing",
          "general"
        ],
        "title": "InsightCategory",
        "description": "Enum for the category of insight."
      },
      "InsightPriority": {
        "type": "string",
        "enum": [
          "low",
          "medium",
          "high",
          "critical"
        ],
        "title": "InsightPriority",
        "description": "Enum for the priority of an insight."
      },
      "InsightType": {
        "type": "string",
        "enum": [
          "performance",
          "usage",
          "security",
          "recommendation",
          "alert"
        ],
        "title": "InsightType",
        "description": "Enum for the type of insight."
      },
      "IntegrationType": {
        "type": "string",
        "enum": [
          "api",
          "email",
          "csv_import",
          "web_form",
          "manual"
        ],
        "title": "IntegrationType",
        "description": "Enum for the type of integration."
      },
      "InvoiceStatus": {
        "type": "string",
        "enum": [
          "pending",
          "paid",
          "overdue",
          "cancelled",
          "refunded"
        ],
        "title": "InvoiceStatus",
        "description": "Enum for the status of an invoice."
      },
      "KnowledgeBaseCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome da base de conhecimento"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o da base de conhecimento"
          },
          "kb_type": {
            "type": "string",
            "title": "Kb Type",
            "description": "Tipo da base de conhecimento"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Categoria da base de conhecimento"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Base de conhecimento ativa",
            "default": true
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Base de conhecimento p√∫blica",
            "default": false
          },
          "indexing_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Indexing Config",
            "description": "Configura√ß√£o de indexa√ß√£o"
          },
          "search_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Config",
            "description": "Configura√ß√£o de busca"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "ID do usu√°rio criador"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "ID do workspace"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Dados adicionais"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags da base de conhecimento"
          }
        },
        "type": "object",
        "required": [
          "name",
          "kb_type",
          "category",
          "tenant_id",
          "user_id"
        ],
        "title": "KnowledgeBaseCreate",
        "description": "Schema para cria√ß√£o de KnowledgeBase"
      },
      "KnowledgeBaseExport": {
        "properties": {
          "kb_id": {
            "type": "string",
            "format": "uuid",
            "title": "Kb Id",
            "description": "ID da base de conhecimento"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "description": "Formato da exporta√ß√£o"
          },
          "include_metadata": {
            "type": "boolean",
            "title": "Include Metadata",
            "description": "Incluir metadata",
            "default": true
          },
          "include_embeddings": {
            "type": "boolean",
            "title": "Include Embeddings",
            "description": "Incluir embeddings",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "kb_id",
          "format"
        ],
        "title": "KnowledgeBaseExport",
        "description": "Schema para exporta√ß√£o de KnowledgeBase"
      },
      "KnowledgeBaseIndexing": {
        "properties": {
          "kb_id": {
            "type": "string",
            "format": "uuid",
            "title": "Kb Id",
            "description": "ID da base de conhecimento"
          },
          "force_reindex": {
            "type": "boolean",
            "title": "Force Reindex",
            "description": "For√ßar reindexa√ß√£o",
            "default": false
          },
          "batch_size": {
            "type": "integer",
            "title": "Batch Size",
            "description": "Tamanho do lote",
            "default": 100
          }
        },
        "type": "object",
        "required": [
          "kb_id"
        ],
        "title": "KnowledgeBaseIndexing",
        "description": "Schema para indexa√ß√£o da KnowledgeBase"
      },
      "KnowledgeBaseList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de bases de conhecimento"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de bases de conhecimento"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual",
            "default": 1
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "KnowledgeBaseList",
        "description": "Schema para lista de KnowledgeBase"
      },
      "KnowledgeBaseResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome da base de conhecimento"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o da base de conhecimento"
          },
          "kb_type": {
            "type": "string",
            "title": "Kb Type",
            "description": "Tipo da base de conhecimento"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Categoria da base de conhecimento"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Base de conhecimento ativa",
            "default": true
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Base de conhecimento p√∫blica",
            "default": false
          },
          "indexing_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Indexing Config",
            "description": "Configura√ß√£o de indexa√ß√£o"
          },
          "search_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Config",
            "description": "Configura√ß√£o de busca"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "ID do usu√°rio criador"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "ID do workspace"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Dados adicionais"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags da base de conhecimento"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID √∫nico da base de conhecimento"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Data de atualiza√ß√£o"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name",
            "description": "Nome do usu√°rio criador"
          },
          "workspace_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Name",
            "description": "Nome do workspace"
          },
          "documents_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documents Count",
            "description": "N√∫mero de documentos"
          },
          "total_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Size Bytes",
            "description": "Tamanho total em bytes"
          },
          "last_indexed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Indexed At",
            "description": "√öltima indexa√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "name",
          "kb_type",
          "category",
          "tenant_id",
          "user_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "KnowledgeBaseResponse",
        "description": "Schema para resposta de KnowledgeBase"
      },
      "KnowledgeBaseSearch": {
        "properties": {
          "kb_id": {
            "type": "string",
            "format": "uuid",
            "title": "Kb Id",
            "description": "ID da base de conhecimento"
          },
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Consulta de busca"
          },
          "search_type": {
            "type": "string",
            "title": "Search Type",
            "description": "Tipo de busca",
            "default": "semantic"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Limite de resultados",
            "default": 10
          },
          "min_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Score",
            "description": "Score m√≠nimo"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "Filtros de busca"
          }
        },
        "type": "object",
        "required": [
          "kb_id",
          "query"
        ],
        "title": "KnowledgeBaseSearch",
        "description": "Schema para busca na KnowledgeBase"
      },
      "KnowledgeBaseStatistics": {
        "properties": {
          "total_knowledge_bases": {
            "type": "integer",
            "title": "Total Knowledge Bases",
            "description": "Total de bases de conhecimento"
          },
          "active_knowledge_bases": {
            "type": "integer",
            "title": "Active Knowledge Bases",
            "description": "Bases de conhecimento ativas"
          },
          "public_knowledge_bases": {
            "type": "integer",
            "title": "Public Knowledge Bases",
            "description": "Bases de conhecimento p√∫blicas"
          },
          "by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Type",
            "description": "Por tipo"
          },
          "by_category": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Category",
            "description": "Por categoria"
          },
          "total_documents": {
            "type": "integer",
            "title": "Total Documents",
            "description": "Total de documentos"
          },
          "total_size_bytes": {
            "type": "integer",
            "title": "Total Size Bytes",
            "description": "Tamanho total em bytes"
          },
          "total_searches": {
            "type": "integer",
            "title": "Total Searches",
            "description": "Total de buscas"
          },
          "average_search_time_ms": {
            "type": "number",
            "title": "Average Search Time Ms",
            "description": "Tempo m√©dio de busca"
          }
        },
        "type": "object",
        "required": [
          "total_knowledge_bases",
          "active_knowledge_bases",
          "public_knowledge_bases",
          "by_type",
          "by_category",
          "total_documents",
          "total_size_bytes",
          "total_searches",
          "average_search_time_ms"
        ],
        "title": "KnowledgeBaseStatistics",
        "description": "Schema para estat√≠sticas de KnowledgeBase"
      },
      "KnowledgeBaseUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Nome da base de conhecimento"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o da base de conhecimento"
          },
          "kb_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kb Type",
            "description": "Tipo da base de conhecimento"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Categoria da base de conhecimento"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Base de conhecimento ativa"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public",
            "description": "Base de conhecimento p√∫blica"
          },
          "indexing_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Indexing Config",
            "description": "Configura√ß√£o de indexa√ß√£o"
          },
          "search_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Config",
            "description": "Configura√ß√£o de busca"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Dados adicionais"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags da base de conhecimento"
          }
        },
        "type": "object",
        "title": "KnowledgeBaseUpdate",
        "description": "Schema para atualiza√ß√£o de KnowledgeBase"
      },
      "LLMConversationCreate": {
        "properties": {
          "llm_id": {
            "type": "string",
            "format": "uuid",
            "title": "Llm Id",
            "description": "ID do LLM"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "T√≠tulo da conversa"
          },
          "system_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Prompt",
            "description": "Prompt do sistema"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "description": "Temperatura para gera√ß√£o",
            "default": 0.7
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "description": "M√°ximo de tokens na resposta"
          }
        },
        "type": "object",
        "required": [
          "llm_id"
        ],
        "title": "LLMConversationCreate",
        "description": "Schema para cria√ß√£o de conversa com LLM."
      },
      "LLMConversationListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LLMConversationResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de conversas"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de itens"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Itens por p√°gina"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Se h√° pr√≥xima p√°gina"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Se h√° p√°gina anterior"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "per_page",
          "has_next",
          "has_prev"
        ],
        "title": "LLMConversationListResponse",
        "description": "Schema de resposta para lista de conversas com LLM."
      },
      "LLMConversationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID √∫nico da conversa"
          },
          "llm_id": {
            "type": "string",
            "format": "uuid",
            "title": "Llm Id",
            "description": "ID do LLM"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "ID do usu√°rio"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "T√≠tulo da conversa"
          },
          "system_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Prompt",
            "description": "Prompt do sistema"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "description": "Temperatura para gera√ß√£o",
            "default": 0.7
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "description": "M√°ximo de tokens na resposta"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Data de atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "id",
          "llm_id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "LLMConversationResponse",
        "description": "Schema de resposta para conversa com LLM."
      },
      "LLMCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome do modelo"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Provedor do modelo"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version",
            "description": "Vers√£o do modelo no provedor"
          },
          "cost_per_token_input": {
            "type": "number",
            "title": "Cost Per Token Input",
            "description": "Custo por token de entrada",
            "default": 0.0
          },
          "cost_per_token_output": {
            "type": "number",
            "title": "Cost Per Token Output",
            "description": "Custo por token de sa√≠da",
            "default": 0.0
          },
          "max_tokens_supported": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens Supported",
            "description": "M√°ximo de tokens suportados"
          },
          "supports_function_calling": {
            "type": "boolean",
            "title": "Supports Function Calling",
            "description": "Suporta function calling",
            "default": false
          },
          "supports_vision": {
            "type": "boolean",
            "title": "Supports Vision",
            "description": "Suporta vis√£o",
            "default": false
          },
          "supports_streaming": {
            "type": "boolean",
            "title": "Supports Streaming",
            "description": "Suporta streaming",
            "default": true
          },
          "context_window": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Window",
            "description": "Tamanho do contexto em tokens"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se o modelo est√° ativo",
            "default": true
          },
          "llm_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Metadata",
            "description": "Metadados do LLM"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status do LLM",
            "default": "active"
          },
          "health_status": {
            "type": "string",
            "title": "Health Status",
            "description": "Status de sa√∫de do LLM",
            "default": "healthy"
          },
          "response_time_avg_ms": {
            "type": "integer",
            "title": "Response Time Avg Ms",
            "description": "Tempo m√©dio de resposta em ms",
            "default": 0
          },
          "availability_percentage": {
            "type": "number",
            "title": "Availability Percentage",
            "description": "Percentual de disponibilidade",
            "default": 99.9
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider"
        ],
        "title": "LLMCreate",
        "description": "Schema para cria√ß√£o de LLM - ALINHADO COM O BANCO."
      },
      "LLMListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LLMResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de LLMs"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de itens"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Itens por p√°gina"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Se h√° pr√≥xima p√°gina"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Se h√° p√°gina anterior"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "per_page",
          "has_next",
          "has_prev"
        ],
        "title": "LLMListResponse",
        "description": "Schema de resposta para lista de LLMs."
      },
      "LLMMessageCreate": {
        "properties": {
          "conversation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Conversation Id",
            "description": "ID da conversa"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Papel da mensagem (user/assistant)"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Conte√∫do da mensagem"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadados da mensagem"
          }
        },
        "type": "object",
        "required": [
          "conversation_id",
          "role",
          "content"
        ],
        "title": "LLMMessageCreate",
        "description": "Schema para cria√ß√£o de mensagem em conversa com LLM."
      },
      "LLMMessageListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LLMMessageResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de mensagens"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de itens"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Itens por p√°gina"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Se h√° pr√≥xima p√°gina"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Se h√° p√°gina anterior"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "per_page",
          "has_next",
          "has_prev"
        ],
        "title": "LLMMessageListResponse",
        "description": "Schema de resposta para lista de mensagens em conversa com LLM."
      },
      "LLMMessageResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID √∫nico da mensagem"
          },
          "conversation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Conversation Id",
            "description": "ID da conversa"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Papel da mensagem (user/assistant)"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Conte√∫do da mensagem"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadados da mensagem"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "id",
          "conversation_id",
          "role",
          "content",
          "created_at"
        ],
        "title": "LLMMessageResponse",
        "description": "Schema de resposta para mensagem em conversa com LLM."
      },
      "LLMResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID √∫nico do modelo"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome do modelo"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Provedor do modelo"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version",
            "description": "Vers√£o do modelo no provedor"
          },
          "cost_per_token_input": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Token Input",
            "description": "Custo por token de entrada"
          },
          "cost_per_token_output": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Token Output",
            "description": "Custo por token de sa√≠da"
          },
          "max_tokens_supported": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens Supported",
            "description": "M√°ximo de tokens suportados"
          },
          "supports_function_calling": {
            "type": "boolean",
            "title": "Supports Function Calling",
            "description": "Suporta function calling"
          },
          "supports_vision": {
            "type": "boolean",
            "title": "Supports Vision",
            "description": "Suporta vis√£o"
          },
          "supports_streaming": {
            "type": "boolean",
            "title": "Supports Streaming",
            "description": "Suporta streaming"
          },
          "context_window": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Window",
            "description": "Tamanho do contexto em tokens"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se o modelo est√° ativo"
          },
          "llm_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Metadata",
            "description": "Metadados do LLM"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status do LLM"
          },
          "health_status": {
            "type": "string",
            "title": "Health Status",
            "description": "Status de sa√∫de do LLM"
          },
          "response_time_avg_ms": {
            "type": "integer",
            "title": "Response Time Avg Ms",
            "description": "Tempo m√©dio de resposta em ms"
          },
          "availability_percentage": {
            "type": "number",
            "title": "Availability Percentage",
            "description": "Percentual de disponibilidade"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Data de atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "provider",
          "supports_function_calling",
          "supports_vision",
          "supports_streaming",
          "is_active",
          "status",
          "health_status",
          "response_time_avg_ms",
          "availability_percentage",
          "created_at",
          "updated_at"
        ],
        "title": "LLMResponse",
        "description": "Schema de resposta para LLM - ALINHADO COM O BANCO."
      },
      "LLMUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Nome do modelo"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version",
            "description": "Vers√£o do modelo no provedor"
          },
          "cost_per_token_input": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Token Input",
            "description": "Custo por token de entrada"
          },
          "cost_per_token_output": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Token Output",
            "description": "Custo por token de sa√≠da"
          },
          "max_tokens_supported": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens Supported",
            "description": "M√°ximo de tokens suportados"
          },
          "supports_function_calling": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supports Function Calling",
            "description": "Suporta function calling"
          },
          "supports_vision": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supports Vision",
            "description": "Suporta vis√£o"
          },
          "supports_streaming": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supports Streaming",
            "description": "Suporta streaming"
          },
          "context_window": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Window",
            "description": "Tamanho do contexto em tokens"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Se o modelo est√° ativo"
          },
          "llm_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Metadata",
            "description": "Metadados do LLM"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Status do LLM"
          },
          "health_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Health Status",
            "description": "Status de sa√∫de do LLM"
          },
          "response_time_avg_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Time Avg Ms",
            "description": "Tempo m√©dio de resposta em ms"
          },
          "availability_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Availability Percentage",
            "description": "Percentual de disponibilidade"
          }
        },
        "type": "object",
        "title": "LLMUpdate",
        "description": "Schema para atualiza√ß√£o de LLM - ALINHADO COM O BANCO."
      },
      "LicenseType": {
        "type": "string",
        "enum": [
          "MIT",
          "Apache-2.0",
          "GPL-3.0",
          "BSD-3-Clause",
          "Commercial",
          "Proprietary"
        ],
        "title": "LicenseType"
      },
      "MessageCreate": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Conte√∫do da mensagem"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Role da mensagem (user, assistant, system)"
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id",
            "description": "ID do agente"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadados da mensagem"
          },
          "tokens_used": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens Used",
            "description": "Tokens usados"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost",
            "description": "Custo da mensagem"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "MessageCreate",
        "description": "Schema for creating message"
      },
      "MessageResponse": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Conte√∫do da mensagem"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Role da mensagem (user, assistant, system)"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID da mensagem"
          },
          "conversation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Conversation Id",
            "description": "ID da conversa"
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id",
            "description": "ID do agente"
          },
          "agent_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Name",
            "description": "Nome do agente"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Metadados"
          },
          "tokens_used": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens Used",
            "description": "Tokens usados"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost",
            "description": "Custo da mensagem"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role",
          "id",
          "conversation_id",
          "created_at",
          "updated_at"
        ],
        "title": "MessageResponse",
        "description": "Response schema for message"
      },
      "ModerationAction": {
        "properties": {
          "action": {
            "type": "string",
            "pattern": "^(approve|reject|request_changes)$",
            "title": "Action"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "feedback": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "ModerationAction"
      },
      "NodeCategoryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "The unique name of the node category."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the category."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "An icon identifier or emoji for UI representation."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A hex color code for UI representation (e.g., #FF0000)."
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id",
            "description": "The ID of the parent category, if this is a subcategory."
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "description": "The order in which categories should be displayed within their parent."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Indicates if the category is active and can be used.",
            "default": true
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this category belongs."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NodeCategoryCreate",
        "description": "Schema for creating a new NodeCategory."
      },
      "NodeCategoryListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NodeCategoryResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of node categories for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of node categories."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "NodeCategoryListResponse",
        "description": "Paginated list of NodeCategories."
      },
      "NodeCategoryResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "The unique name of the node category."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the category."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "An icon identifier or emoji for UI representation."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A hex color code for UI representation (e.g., #FF0000)."
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id",
            "description": "The ID of the parent category, if this is a subcategory."
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "description": "The order in which categories should be displayed within their parent."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Indicates if the category is active and can be used.",
            "default": true
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this category belongs."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the category."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the category was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "full_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Path",
            "description": "The full hierarchical path of the category (e.g., 'Root > Parent > Category')."
          },
          "depth_level": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Depth Level",
            "description": "The depth level of the category in the hierarchy (0 for root)."
          },
          "is_root_category": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Root Category",
            "description": "Indicates if this is a root category (has no parent)."
          },
          "is_leaf_category": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Leaf Category",
            "description": "Indicates if this is a leaf category (has no children)."
          },
          "has_nodes": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Nodes",
            "description": "Indicates if this category has any associated nodes."
          },
          "node_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Count",
            "description": "The number of directly associated nodes."
          },
          "total_node_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Node Count",
            "description": "The total number of nodes in this category and its subcategories."
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NodeCategoryResponse",
        "description": "Response schema for a NodeCategory, including database-generated fields and computed properties."
      },
      "NodeCategoryType": {
        "type": "string",
        "enum": [
          "input",
          "output",
          "processing",
          "logic",
          "integration",
          "utility"
        ],
        "title": "NodeCategoryType",
        "description": "Enum for common node category types."
      },
      "NodeCategoryUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "New name for the category."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "New icon."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "New hex color code."
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id",
            "description": "New parent category ID."
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "description": "New sort order."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          }
        },
        "type": "object",
        "title": "NodeCategoryUpdate",
        "description": "Schema for updating an existing NodeCategory. All fields are optional."
      },
      "NodeCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "Node name"
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "title": "Category",
            "description": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "version": {
            "type": "string",
            "maxLength": 50,
            "title": "Version",
            "description": "Version",
            "default": "1.0.0"
          },
          "definition": {
            "additionalProperties": true,
            "type": "object",
            "title": "Definition",
            "description": "Node JSON definition"
          },
          "code_template": {
            "type": "string",
            "title": "Code Template",
            "description": "Code template"
          },
          "input_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Input Schema",
            "description": "Input schema"
          },
          "output_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Schema",
            "description": "Output schema"
          },
          "parameters_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters Schema",
            "description": "Parameters schema"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Color (hex)"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation",
            "description": "Documentation"
          },
          "examples": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples",
            "description": "Examples"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Public node",
            "default": false
          },
          "timeout_seconds": {
            "type": "integer",
            "title": "Timeout Seconds",
            "description": "Timeout in seconds",
            "default": 300
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "description": "Number of retries",
            "default": 3
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "Workspace ID"
          }
        },
        "type": "object",
        "required": [
          "name",
          "category",
          "definition",
          "code_template",
          "input_schema",
          "output_schema"
        ],
        "title": "NodeCreate",
        "description": "Schema for node creation - ALIGNED WITH DATABASE"
      },
      "NodeExecutionCreate": {
        "properties": {
          "node_id": {
            "type": "string",
            "format": "uuid",
            "title": "Node Id",
            "description": "ID do n√≥"
          },
          "workflow_execution_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Execution Id",
            "description": "ID da execu√ß√£o do workflow"
          },
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data",
            "description": "Dados de entrada"
          },
          "output_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Data",
            "description": "Dados de sa√≠da"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status da execu√ß√£o",
            "default": "pending"
          },
          "execution_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Time Ms",
            "description": "Tempo de execu√ß√£o em ms"
          },
          "memory_used_mb": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Used Mb",
            "description": "Mem√≥ria usada em MB"
          },
          "cpu_usage_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Usage Percent",
            "description": "Uso de CPU em %"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Mensagem de erro"
          },
          "error_stack": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Stack",
            "description": "Stack trace do erro"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code",
            "description": "C√≥digo do erro"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID do usu√°rio"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "In√≠cio da execu√ß√£o"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Fim da execu√ß√£o"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Dados adicionais"
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "tenant_id"
        ],
        "title": "NodeExecutionCreate",
        "description": "Schema para cria√ß√£o de NodeExecution"
      },
      "NodeExecutionList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/synapse__schemas__node_execution__NodeExecutionResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de execu√ß√µes"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de execu√ß√µes"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual",
            "default": 1
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "NodeExecutionList",
        "description": "Schema para lista de NodeExecution"
      },
      "NodeExecutionStatsResponse": {
        "properties": {
          "node_id": {
            "type": "string",
            "title": "Node Id",
            "description": "Node ID"
          },
          "total_executions": {
            "type": "integer",
            "title": "Total Executions",
            "description": "Total number of executions"
          },
          "failed_executions": {
            "type": "integer",
            "title": "Failed Executions",
            "description": "Number of failed executions"
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "description": "Success rate percentage"
          },
          "avg_duration_ms": {
            "type": "number",
            "title": "Avg Duration Ms",
            "description": "Average execution duration in milliseconds"
          },
          "total_retries": {
            "type": "integer",
            "title": "Total Retries",
            "description": "Total number of retries across all executions"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count",
            "description": "Total usage count"
          },
          "downloads_count": {
            "type": "integer",
            "title": "Downloads Count",
            "description": "Total downloads count"
          },
          "rating_average": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating Average",
            "description": "Average rating"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count",
            "description": "Number of ratings"
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "total_executions",
          "failed_executions",
          "success_rate",
          "avg_duration_ms",
          "total_retries",
          "usage_count",
          "downloads_count",
          "rating_count"
        ],
        "title": "NodeExecutionStatsResponse",
        "description": "Statistics for node executions."
      },
      "NodeExecutionStatus": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "completed",
          "failed",
          "skipped",
          "retry"
        ],
        "title": "NodeExecutionStatus",
        "description": "Status de execu√ß√£o de um n√≥ espec√≠fico"
      },
      "NodeExecutionStatusCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name",
            "description": "Nome √∫nico do status"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Display Name",
            "description": "Nome para exibi√ß√£o"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o do status"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Cor em formato hex"
          },
          "is_final": {
            "type": "boolean",
            "title": "Is Final",
            "description": "Status final de execu√ß√£o",
            "default": false
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error",
            "description": "Indica erro",
            "default": false
          },
          "is_success": {
            "type": "boolean",
            "title": "Is Success",
            "description": "Indica sucesso",
            "default": false
          },
          "can_retry": {
            "type": "boolean",
            "title": "Can Retry",
            "description": "Permite retry",
            "default": true
          },
          "blocks_workflow": {
            "type": "boolean",
            "title": "Blocks Workflow",
            "description": "Bloqueia o workflow",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Status ativo",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name"
        ],
        "title": "NodeExecutionStatusCreate",
        "description": "Schema para cria√ß√£o de NodeExecutionStatus"
      },
      "NodeExecutionStatusList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NodeExecutionStatusResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de status"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de status"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual",
            "default": 1
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "NodeExecutionStatusList",
        "description": "Schema para lista de NodeExecutionStatus"
      },
      "NodeExecutionStatusResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name",
            "description": "Nome √∫nico do status"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Display Name",
            "description": "Nome para exibi√ß√£o"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o do status"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Cor em formato hex"
          },
          "is_final": {
            "type": "boolean",
            "title": "Is Final",
            "description": "Status final de execu√ß√£o",
            "default": false
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error",
            "description": "Indica erro",
            "default": false
          },
          "is_success": {
            "type": "boolean",
            "title": "Is Success",
            "description": "Indica sucesso",
            "default": false
          },
          "can_retry": {
            "type": "boolean",
            "title": "Can Retry",
            "description": "Permite retry",
            "default": true
          },
          "blocks_workflow": {
            "type": "boolean",
            "title": "Blocks Workflow",
            "description": "Bloqueia o workflow",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Status ativo",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID √∫nico do status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Data de atualiza√ß√£o"
          },
          "is_terminal": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Terminal",
            "description": "√â um status terminal"
          },
          "is_retryable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Retryable",
            "description": "√â poss√≠vel retry"
          },
          "blocks_execution": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocks Execution",
            "description": "Bloqueia execu√ß√£o"
          },
          "usage_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage Count",
            "description": "N√∫mero de execu√ß√µes com este status"
          },
          "success_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Success Rate",
            "description": "Taxa de sucesso"
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NodeExecutionStatusResponse",
        "description": "Schema para resposta de NodeExecutionStatus"
      },
      "NodeExecutionStatusUpdate": {
        "properties": {
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Nome para exibi√ß√£o"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o do status"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Cor em formato hex"
          },
          "is_final": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Final",
            "description": "Status final de execu√ß√£o"
          },
          "is_error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Error",
            "description": "Indica erro"
          },
          "is_success": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Success",
            "description": "Indica sucesso"
          },
          "can_retry": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Retry",
            "description": "Permite retry"
          },
          "blocks_workflow": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocks Workflow",
            "description": "Bloqueia o workflow"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Status ativo"
          }
        },
        "type": "object",
        "title": "NodeExecutionStatusUpdate",
        "description": "Schema para atualiza√ß√£o de NodeExecutionStatus"
      },
      "NodeExecutionUpdate": {
        "properties": {
          "output_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Data",
            "description": "Dados de sa√≠da"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Status da execu√ß√£o"
          },
          "execution_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Time Ms",
            "description": "Tempo de execu√ß√£o em ms"
          },
          "memory_used_mb": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Used Mb",
            "description": "Mem√≥ria usada em MB"
          },
          "cpu_usage_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Usage Percent",
            "description": "Uso de CPU em %"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Mensagem de erro"
          },
          "error_stack": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Stack",
            "description": "Stack trace do erro"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code",
            "description": "C√≥digo do erro"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Fim da execu√ß√£o"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Dados adicionais"
          }
        },
        "type": "object",
        "title": "NodeExecutionUpdate",
        "description": "Schema para atualiza√ß√£o de NodeExecution"
      },
      "NodeInputOutputCardinality": {
        "type": "string",
        "enum": [
          "1",
          "many",
          "none"
        ],
        "title": "NodeInputOutputCardinality",
        "description": "Enum for node input/output cardinality."
      },
      "NodeRatingCreate": {
        "properties": {
          "node_id": {
            "type": "string",
            "format": "uuid",
            "title": "Node Id",
            "description": "The ID of the node being rated."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user who provided the rating."
          },
          "rating": {
            "$ref": "#/components/schemas/RatingValue",
            "description": "The rating value (1-5 stars)."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this rating belongs."
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "user_id",
          "rating"
        ],
        "title": "NodeRatingCreate",
        "description": "Schema for creating a new NodeRating."
      },
      "NodeRatingListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NodeRatingResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of node ratings for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of node ratings."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "NodeRatingListResponse",
        "description": "Paginated list of NodeRatings."
      },
      "NodeRatingResponse": {
        "properties": {
          "node_id": {
            "type": "string",
            "format": "uuid",
            "title": "Node Id",
            "description": "The ID of the node being rated."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user who provided the rating."
          },
          "rating": {
            "$ref": "#/components/schemas/RatingValue",
            "description": "The rating value (1-5 stars)."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this rating belongs."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the rating."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the rating was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "rating_display": {
            "type": "string",
            "title": "Rating Display",
            "description": "Visual representation of the rating.",
            "readOnly": true
          },
          "is_positive": {
            "type": "boolean",
            "title": "Is Positive",
            "description": "Indicates if the rating is considered positive (4-5 stars).",
            "readOnly": true
          },
          "is_negative": {
            "type": "boolean",
            "title": "Is Negative",
            "description": "Indicates if the rating is considered negative (1-2 stars).",
            "readOnly": true
          },
          "is_neutral": {
            "type": "boolean",
            "title": "Is Neutral",
            "description": "Indicates if the rating is considered neutral (3 stars).",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "user_id",
          "rating",
          "id",
          "created_at",
          "updated_at",
          "rating_display",
          "is_positive",
          "is_negative",
          "is_neutral"
        ],
        "title": "NodeRatingResponse",
        "description": "Response schema for a NodeRating, including database-generated fields and computed properties."
      },
      "NodeRatingSummary": {
        "properties": {
          "total_ratings": {
            "type": "integer",
            "title": "Total Ratings",
            "description": "Total number of ratings received."
          },
          "average_rating": {
            "type": "number",
            "title": "Average Rating",
            "description": "Average rating value."
          },
          "rating_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "propertyNames": {
              "$ref": "#/components/schemas/RatingValue"
            },
            "type": "object",
            "title": "Rating Distribution",
            "description": "Count of ratings for each star value."
          },
          "positive_percentage": {
            "type": "number",
            "title": "Positive Percentage",
            "description": "Percentage of positive ratings."
          },
          "negative_percentage": {
            "type": "number",
            "title": "Negative Percentage",
            "description": "Percentage of negative ratings."
          }
        },
        "type": "object",
        "required": [
          "total_ratings",
          "average_rating",
          "rating_distribution",
          "positive_percentage",
          "negative_percentage"
        ],
        "title": "NodeRatingSummary",
        "description": "Schema for aggregated rating summary for a node."
      },
      "NodeRatingTrend": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Date of the trend (YYYY-MM-DD)."
          },
          "average_rating": {
            "type": "number",
            "title": "Average Rating",
            "description": "Average rating for the day."
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count",
            "description": "Number of ratings for the day."
          }
        },
        "type": "object",
        "required": [
          "date",
          "average_rating",
          "rating_count"
        ],
        "title": "NodeRatingTrend",
        "description": "Schema for daily rating trends."
      },
      "NodeRatingUpdate": {
        "properties": {
          "rating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RatingValue"
              },
              {
                "type": "null"
              }
            ],
            "description": "New rating value (1-5 stars)."
          }
        },
        "type": "object",
        "title": "NodeRatingUpdate",
        "description": "Schema for updating an existing NodeRating. All fields are optional."
      },
      "NodeResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "Node name"
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "title": "Category",
            "description": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "version": {
            "type": "string",
            "maxLength": 50,
            "title": "Version",
            "description": "Version",
            "default": "1.0.0"
          },
          "definition": {
            "additionalProperties": true,
            "type": "object",
            "title": "Definition",
            "description": "Node JSON definition"
          },
          "code_template": {
            "type": "string",
            "title": "Code Template",
            "description": "Code template"
          },
          "input_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Input Schema",
            "description": "Input schema"
          },
          "output_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Schema",
            "description": "Output schema"
          },
          "parameters_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters Schema",
            "description": "Parameters schema"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Color (hex)"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation",
            "description": "Documentation"
          },
          "examples": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples",
            "description": "Examples"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Public node",
            "default": false
          },
          "timeout_seconds": {
            "type": "integer",
            "title": "Timeout Seconds",
            "description": "Timeout in seconds",
            "default": 300
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "description": "Number of retries",
            "default": 3
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "Workspace ID"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Node ID"
          },
          "downloads_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Downloads Count",
            "description": "Number of downloads"
          },
          "usage_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage Count",
            "description": "Number of uses"
          },
          "rating_average": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating Average",
            "description": "Average rating"
          },
          "rating_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating Count",
            "description": "Number of ratings"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Status"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "User ID"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "category",
          "definition",
          "code_template",
          "input_schema",
          "output_schema",
          "id",
          "user_id"
        ],
        "title": "NodeResponse",
        "description": "Response schema for a node - PERFECTLY ALIGNED WITH DATABASE"
      },
      "NodeStatusCreate": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NodeStatusName",
            "maxLength": 100,
            "description": "The unique name of the node status."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what the status means."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A hex color code for UI representation."
          },
          "is_final": {
            "type": "boolean",
            "title": "Is Final",
            "description": "Indicates if this is a final status for a node.",
            "default": false
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error",
            "description": "Indicates if this status represents an error state.",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether this status is active and can be assigned to nodes.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "NodeStatusCreate",
        "description": "Schema for creating a new NodeStatus."
      },
      "NodeStatusListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NodeStatusResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of node statuses for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of node statuses."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "NodeStatusListResponse",
        "description": "Paginated list of NodeStatuses."
      },
      "NodeStatusName": {
        "type": "string",
        "enum": [
          "draft",
          "active",
          "inactive",
          "deprecated",
          "archived"
        ],
        "title": "NodeStatusName",
        "description": "Enum for common node status names."
      },
      "NodeStatusResponse": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NodeStatusName",
            "maxLength": 100,
            "description": "The unique name of the node status."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of what the status means."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A hex color code for UI representation."
          },
          "is_final": {
            "type": "boolean",
            "title": "Is Final",
            "description": "Indicates if this is a final status for a node.",
            "default": false
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error",
            "description": "Indicates if this status represents an error state.",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether this status is active and can be assigned to nodes.",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the node status."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the status was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NodeStatusResponse",
        "description": "Response schema for a NodeStatus, including database-generated fields."
      },
      "NodeStatusUpdate": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "New hex color code."
          },
          "is_final": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Final",
            "description": "New final status."
          },
          "is_error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Error",
            "description": "New error state."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          }
        },
        "type": "object",
        "title": "NodeStatusUpdate",
        "description": "Schema for updating an existing NodeStatus. All fields are optional."
      },
      "NodeTemplateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "The name of the node template."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the node template."
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "The category of the node template (e.g., 'data_processing', 'integrations')."
          },
          "code_template": {
            "type": "string",
            "title": "Code Template",
            "description": "The code template for the node."
          },
          "input_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Input Schema",
            "description": "JSON schema defining the expected input for the node."
          },
          "output_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Schema",
            "description": "JSON schema defining the expected output from the node."
          },
          "parameters_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters Schema",
            "description": "JSON schema defining configurable parameters for the node."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "An icon for UI representation."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A color for UI representation."
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation",
            "description": "Documentation for the node template."
          },
          "examples": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples",
            "description": "Examples of how to use the node template."
          },
          "is_system": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is System",
            "description": "Indicates if this is a system-defined template."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether this template is active and can be used."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this template belongs."
          }
        },
        "type": "object",
        "required": [
          "name",
          "code_template",
          "input_schema",
          "output_schema"
        ],
        "title": "NodeTemplateCreate",
        "description": "Schema for creating a new NodeTemplate."
      },
      "NodeTemplateListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NodeTemplateResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of node templates for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of node templates."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "NodeTemplateListResponse",
        "description": "Paginated list of NodeTemplates."
      },
      "NodeTemplateResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "The name of the node template."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the node template."
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "The category of the node template (e.g., 'data_processing', 'integrations')."
          },
          "code_template": {
            "type": "string",
            "title": "Code Template",
            "description": "The code template for the node."
          },
          "input_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Input Schema",
            "description": "JSON schema defining the expected input for the node."
          },
          "output_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Schema",
            "description": "JSON schema defining the expected output from the node."
          },
          "parameters_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters Schema",
            "description": "JSON schema defining configurable parameters for the node."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "An icon for UI representation."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A color for UI representation."
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation",
            "description": "Documentation for the node template."
          },
          "examples": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples",
            "description": "Examples of how to use the node template."
          },
          "is_system": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is System",
            "description": "Indicates if this is a system-defined template."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether this template is active and can be used."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this template belongs."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the node template."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the template was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          }
        },
        "type": "object",
        "required": [
          "name",
          "code_template",
          "input_schema",
          "output_schema",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NodeTemplateResponse",
        "description": "Response schema for a NodeTemplate, including database-generated fields."
      },
      "NodeTemplateUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "New name for the template."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "New category."
          },
          "code_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Template",
            "description": "New code template."
          },
          "input_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Schema",
            "description": "New input schema."
          },
          "output_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Schema",
            "description": "New output schema."
          },
          "parameters_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters Schema",
            "description": "New parameters schema."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "New icon."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "New color."
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation",
            "description": "New documentation."
          },
          "examples": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples",
            "description": "New examples."
          },
          "is_system": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is System",
            "description": "New system status."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          }
        },
        "type": "object",
        "title": "NodeTemplateUpdate",
        "description": "Schema for updating an existing NodeTemplate. All fields are optional."
      },
      "NodeTypeCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "The unique name of the node type."
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name",
            "description": "A human-readable name for the node type."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the node type."
          },
          "category": {
            "$ref": "#/components/schemas/NodeCategoryType",
            "description": "The category of the node type."
          },
          "config_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config Schema",
            "description": "JSON schema defining the configuration properties for this node type."
          },
          "default_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Default Config",
            "description": "Default configuration values for this node type."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "An icon for UI representation."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A hex color code for UI representation."
          },
          "can_have_inputs": {
            "type": "boolean",
            "title": "Can Have Inputs",
            "description": "Indicates if this node type can accept inputs.",
            "default": true
          },
          "can_have_outputs": {
            "type": "boolean",
            "title": "Can Have Outputs",
            "description": "Indicates if this node type can produce outputs.",
            "default": true
          },
          "max_inputs": {
            "$ref": "#/components/schemas/NodeInputOutputCardinality",
            "description": "Maximum number of inputs this node type can have.",
            "default": "many"
          },
          "max_outputs": {
            "$ref": "#/components/schemas/NodeInputOutputCardinality",
            "description": "Maximum number of outputs this node type can have.",
            "default": "many"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether this node type is active and can be used.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name",
          "category"
        ],
        "title": "NodeTypeCreate",
        "description": "Schema for creating a new NodeType."
      },
      "NodeTypeListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NodeTypeResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of node types for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of node types."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "NodeTypeListResponse",
        "description": "Paginated list of NodeTypes."
      },
      "NodeTypeResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "The unique name of the node type."
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name",
            "description": "A human-readable name for the node type."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the node type."
          },
          "category": {
            "$ref": "#/components/schemas/NodeCategoryType",
            "description": "The category of the node type."
          },
          "config_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config Schema",
            "description": "JSON schema defining the configuration properties for this node type."
          },
          "default_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Default Config",
            "description": "Default configuration values for this node type."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "An icon for UI representation."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A hex color code for UI representation."
          },
          "can_have_inputs": {
            "type": "boolean",
            "title": "Can Have Inputs",
            "description": "Indicates if this node type can accept inputs.",
            "default": true
          },
          "can_have_outputs": {
            "type": "boolean",
            "title": "Can Have Outputs",
            "description": "Indicates if this node type can produce outputs.",
            "default": true
          },
          "max_inputs": {
            "$ref": "#/components/schemas/NodeInputOutputCardinality",
            "description": "Maximum number of inputs this node type can have.",
            "default": "many"
          },
          "max_outputs": {
            "$ref": "#/components/schemas/NodeInputOutputCardinality",
            "description": "Maximum number of outputs this node type can have.",
            "default": "many"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether this node type is active and can be used.",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the node type."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the node type was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name",
          "category",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NodeTypeResponse",
        "description": "Response schema for a NodeType, including database-generated fields."
      },
      "NodeTypeUpdate": {
        "properties": {
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "New human-readable name."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NodeCategoryType"
              },
              {
                "type": "null"
              }
            ],
            "description": "New category."
          },
          "config_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Schema",
            "description": "New configuration schema."
          },
          "default_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Config",
            "description": "New default configuration."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "New icon."
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "New hex color code."
          },
          "can_have_inputs": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Have Inputs",
            "description": "New input capability."
          },
          "can_have_outputs": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Have Outputs",
            "description": "New output capability."
          },
          "max_inputs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NodeInputOutputCardinality"
              },
              {
                "type": "null"
              }
            ],
            "description": "New maximum inputs."
          },
          "max_outputs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NodeInputOutputCardinality"
              },
              {
                "type": "null"
              }
            ],
            "description": "New maximum outputs."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          }
        },
        "type": "object",
        "title": "NodeTypeUpdate",
        "description": "Schema for updating an existing NodeType. All fields are optional."
      },
      "NodeUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Node name"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version"
          },
          "definition": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Definition",
            "description": "JSON definition"
          },
          "code_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Template",
            "description": "Code template"
          },
          "input_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Schema",
            "description": "Input schema"
          },
          "output_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Schema",
            "description": "Output schema"
          },
          "parameters_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters Schema",
            "description": "Parameters schema"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Color"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation",
            "description": "Documentation"
          },
          "examples": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples",
            "description": "Examples"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public",
            "description": "Public node"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/synapse__schemas__node__NodeStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status"
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds",
            "description": "Timeout in seconds"
          },
          "retry_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retry Count",
            "description": "Number of retries"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "Workspace ID"
          }
        },
        "type": "object",
        "title": "NodeUpdate",
        "description": "Schema for node updates - ALIGNED WITH DATABASE"
      },
      "NoteType": {
        "type": "string",
        "enum": [
          "note",
          "call_log",
          "meeting_summary"
        ],
        "title": "NoteType",
        "description": "Enum for the type of note."
      },
      "PaginatedResponse_Dict_str__Any__": {
        "properties": {
          "items": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "skip": {
            "type": "integer",
            "title": "Skip",
            "description": "Number of skipped items"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Maximum items per page"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether there are more items"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Whether there are previous items"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "skip",
          "limit",
          "has_next",
          "has_prev"
        ],
        "title": "PaginatedResponse[Dict[str, Any]]"
      },
      "PaginatedResponse_ExecutionResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExecutionResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "skip": {
            "type": "integer",
            "title": "Skip",
            "description": "Number of skipped items"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Maximum items per page"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether there are more items"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Whether there are previous items"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "skip",
          "limit",
          "has_next",
          "has_prev"
        ],
        "title": "PaginatedResponse[ExecutionResponse]"
      },
      "PaginatedResponse_NodeExecutionResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/synapse__schemas__workflow_execution__NodeExecutionResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "skip": {
            "type": "integer",
            "title": "Skip",
            "description": "Number of skipped items"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Maximum items per page"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether there are more items"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Whether there are previous items"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "skip",
          "limit",
          "has_next",
          "has_prev"
        ],
        "title": "PaginatedResponse[NodeExecutionResponse]"
      },
      "PaginatedResponse_NodeResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NodeResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of items"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "skip": {
            "type": "integer",
            "title": "Skip",
            "description": "Number of skipped items"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Maximum items per page"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether there are more items"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Whether there are previous items"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "skip",
          "limit",
          "has_next",
          "has_prev"
        ],
        "title": "PaginatedResponse[NodeResponse]"
      },
      "PasswordResetConfirm": {
        "properties": {
          "token": {
            "type": "string",
            "maxLength": 500,
            "title": "Token",
            "description": "Token de reset"
          },
          "new_password": {
            "type": "string",
            "maxLength": 255,
            "minLength": 8,
            "title": "New Password",
            "description": "Nova senha"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "PasswordResetConfirm",
        "description": "Schema para confirma√ß√£o de reset de senha - ALINHADO COM password_reset_tokens TABLE"
      },
      "PasswordResetRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Email para reset"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "PasswordResetRequest",
        "description": "Schema para solicita√ß√£o de reset de senha - ALINHADO COM password_reset_tokens TABLE"
      },
      "PaymentCustomerActivateDeactivate": {
        "properties": {
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether to activate or deactivate the customer"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Reason for the status change"
          }
        },
        "type": "object",
        "required": [
          "is_active"
        ],
        "title": "PaymentCustomerActivateDeactivate",
        "description": "Schema for activating or deactivating a payment customer."
      },
      "PaymentCustomerBase": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Provider Id",
            "description": "Payment provider ID"
          },
          "external_customer_id": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "External Customer Id",
            "description": "External customer ID from payment provider"
          },
          "customer_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Data",
            "description": "Customer data from payment provider"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the customer is active",
            "default": true
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Optional link to specific user"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "provider_id",
          "external_customer_id"
        ],
        "title": "PaymentCustomerBase",
        "description": "Base schema for PaymentCustomer attributes."
      },
      "PaymentCustomerCreate": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Provider Id",
            "description": "ID do provedor"
          },
          "external_customer_id": {
            "type": "string",
            "title": "External Customer Id",
            "description": "ID externo do customer"
          },
          "customer_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Data",
            "description": "Dados do customer"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se est√° ativo",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "provider_id",
          "external_customer_id"
        ],
        "title": "PaymentCustomerCreate",
        "description": "Schema para cria√ß√£o de customer de pagamento"
      },
      "PaymentCustomerCreateSimple": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Provider Id",
            "description": "Payment provider ID"
          },
          "external_customer_id": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "External Customer Id",
            "description": "External customer ID from payment provider"
          },
          "customer_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Email",
            "description": "Customer email"
          },
          "customer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Name",
            "description": "Customer name"
          },
          "customer_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Phone",
            "description": "Customer phone"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Optional link to specific user"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "provider_id",
          "external_customer_id"
        ],
        "title": "PaymentCustomerCreateSimple",
        "description": "Simple schema for creating a payment customer."
      },
      "PaymentCustomerListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/synapse__schemas__payment_customer__PaymentCustomerResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of payment customers"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of customers"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "PaymentCustomerListResponse",
        "description": "Paginated list of payment customers."
      },
      "PaymentCustomerSearch": {
        "properties": {
          "external_customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Customer Id",
            "description": "External customer ID to search for"
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id",
            "description": "Payment provider ID to filter by"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "Tenant ID to filter by"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Filter by active status"
          },
          "customer_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Email",
            "description": "Customer email to search for"
          }
        },
        "type": "object",
        "title": "PaymentCustomerSearch",
        "description": "Schema for searching payment customers."
      },
      "PaymentCustomerSummary": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Customer ID"
          },
          "external_customer_id": {
            "type": "string",
            "title": "External Customer Id",
            "description": "External customer ID"
          },
          "customer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Name",
            "description": "Customer name"
          },
          "customer_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Email",
            "description": "Customer email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the customer is active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "payment_methods_count": {
            "type": "integer",
            "title": "Payment Methods Count",
            "description": "Number of payment methods",
            "default": 0
          },
          "total_spent": {
            "type": "number",
            "title": "Total Spent",
            "description": "Total amount spent",
            "default": 0.0
          },
          "subscription_count": {
            "type": "integer",
            "title": "Subscription Count",
            "description": "Number of active subscriptions",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "external_customer_id",
          "is_active",
          "created_at"
        ],
        "title": "PaymentCustomerSummary",
        "description": "Summary schema for payment customer."
      },
      "PaymentCustomerUpdate": {
        "properties": {
          "external_customer_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "External Customer Id",
            "description": "External customer ID from payment provider"
          },
          "customer_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Data",
            "description": "Customer data from payment provider"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether the customer is active"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Optional link to specific user"
          }
        },
        "type": "object",
        "title": "PaymentCustomerUpdate",
        "description": "Schema for updating a payment customer."
      },
      "PaymentCustomerUpdateData": {
        "properties": {
          "customer_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Customer Data",
            "description": "New customer data to merge with existing data"
          },
          "replace": {
            "type": "boolean",
            "title": "Replace",
            "description": "Whether to replace all data or merge with existing",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "customer_data"
        ],
        "title": "PaymentCustomerUpdateData",
        "description": "Schema for updating customer data."
      },
      "PaymentMethodCreate": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Tipo do m√©todo"
          },
          "external_method_id": {
            "type": "string",
            "title": "External Method Id",
            "description": "ID externo do m√©todo"
          },
          "provider_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Data",
            "description": "Dados do provedor"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Se √© padr√£o",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se est√° ativo",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "type",
          "external_method_id"
        ],
        "title": "PaymentMethodCreate",
        "description": "Schema para cria√ß√£o de m√©todo de pagamento"
      },
      "PaymentMethodListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PaymentMethodResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de m√©todos"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de registros"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "pages",
          "size"
        ],
        "title": "PaymentMethodListResponse",
        "description": "Schema de resposta para listagem de m√©todos de pagamento"
      },
      "PaymentMethodResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID do m√©todo"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Tipo"
          },
          "external_method_id": {
            "type": "string",
            "title": "External Method Id",
            "description": "ID externo"
          },
          "provider_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Data",
            "description": "Dados do provedor"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default",
            "description": "Se √© padr√£o"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se est√° ativo"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "type",
          "external_method_id",
          "is_default",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "PaymentMethodResponse",
        "description": "Schema de resposta para m√©todo de pagamento"
      },
      "PaymentMethodUpdate": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Tipo do m√©todo"
          },
          "external_method_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Method Id",
            "description": "ID externo"
          },
          "provider_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Data",
            "description": "Dados do provedor"
          },
          "is_default": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Default",
            "description": "Se √© padr√£o"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Se est√° ativo"
          }
        },
        "type": "object",
        "title": "PaymentMethodUpdate",
        "description": "Schema para atualiza√ß√£o de m√©todo de pagamento"
      },
      "PaymentProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome do provedor"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "Nome de exibi√ß√£o"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se est√° ativo",
            "default": true
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "Configura√ß√£o"
          },
          "webhook_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Secret",
            "description": "Segredo do webhook"
          },
          "api_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Version",
            "description": "Vers√£o da API"
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name"
        ],
        "title": "PaymentProviderCreate",
        "description": "Schema para cria√ß√£o de provedor de pagamento"
      },
      "PaymentProviderResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID do provedor"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "Nome de exibi√ß√£o"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se est√° ativo"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "Configura√ß√£o"
          },
          "webhook_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Secret",
            "description": "Segredo do webhook"
          },
          "api_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Version",
            "description": "Vers√£o da API"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "ID do tenant"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "display_name",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "PaymentProviderResponse",
        "description": "Schema de resposta para provedor de pagamento"
      },
      "PlanCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the plan."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the plan."
          },
          "plan_code": {
            "type": "string",
            "title": "Plan Code",
            "description": "A unique code for the plan."
          },
          "monthly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Monthly Price",
            "description": "The monthly price of the plan."
          },
          "yearly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Price",
            "description": "The yearly price of the plan."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Indicates if the plan is currently active.",
            "default": true
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Indicates if the plan is visible to the public.",
            "default": true
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured",
            "description": "Indicates if the plan is featured on the pricing page.",
            "default": false
          },
          "user_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "User Limit",
            "description": "The maximum number of users allowed on this plan."
          },
          "workspace_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Limit",
            "description": "The maximum number of workspaces allowed on this plan."
          },
          "agent_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Limit",
            "description": "The maximum number of agents allowed on this plan."
          },
          "storage_limit_gb": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Limit Gb",
            "description": "The maximum storage allowed in GB."
          },
          "features_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Features Config",
            "description": "A dictionary defining the features included in this plan."
          },
          "trial_days": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Trial Days",
            "description": "The number of trial days offered with this plan."
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata for the plan."
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A hex color code for UI representation."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "An icon for UI representation."
          }
        },
        "type": "object",
        "required": [
          "name",
          "plan_code",
          "monthly_price"
        ],
        "title": "PlanCreate",
        "description": "Schema for creating a new Plan."
      },
      "PlanFeatureCreate": {
        "properties": {
          "feature_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feature Id",
            "description": "ID da feature"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Se est√° habilitada",
            "default": true
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "Configura√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "feature_id"
        ],
        "title": "PlanFeatureCreate",
        "description": "Schema para cria√ß√£o de feature de plano"
      },
      "PlanFeatureListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PlanFeatureResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de features do plano"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de registros"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "pages",
          "size"
        ],
        "title": "PlanFeatureListResponse",
        "description": "Schema de resposta para listagem de features do plano"
      },
      "PlanFeatureResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID da plan feature"
          },
          "plan_id": {
            "type": "string",
            "format": "uuid",
            "title": "Plan Id",
            "description": "ID do plano"
          },
          "feature_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feature Id",
            "description": "ID da feature"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Se est√° habilitada"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config",
            "description": "Configura√ß√£o"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          },
          "feature_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Name",
            "description": "Nome da feature"
          },
          "feature_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Key",
            "description": "Chave da feature"
          }
        },
        "type": "object",
        "required": [
          "id",
          "plan_id",
          "feature_id",
          "is_enabled",
          "config",
          "created_at",
          "updated_at"
        ],
        "title": "PlanFeatureResponse",
        "description": "Schema de resposta para feature de plano"
      },
      "PlanListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PlanResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of plans for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of plans."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "PlanListResponse",
        "description": "Paginated list of Plans."
      },
      "PlanResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the plan."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the plan."
          },
          "plan_code": {
            "type": "string",
            "title": "Plan Code",
            "description": "A unique code for the plan."
          },
          "monthly_price": {
            "type": "string",
            "title": "Monthly Price",
            "description": "The monthly price of the plan."
          },
          "yearly_price": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Price",
            "description": "The yearly price of the plan."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Indicates if the plan is currently active.",
            "default": true
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Indicates if the plan is visible to the public.",
            "default": true
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured",
            "description": "Indicates if the plan is featured on the pricing page.",
            "default": false
          },
          "user_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "User Limit",
            "description": "The maximum number of users allowed on this plan."
          },
          "workspace_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Limit",
            "description": "The maximum number of workspaces allowed on this plan."
          },
          "agent_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Limit",
            "description": "The maximum number of agents allowed on this plan."
          },
          "storage_limit_gb": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Limit Gb",
            "description": "The maximum storage allowed in GB."
          },
          "features_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Features Config",
            "description": "A dictionary defining the features included in this plan."
          },
          "trial_days": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Trial Days",
            "description": "The number of trial days offered with this plan."
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata for the plan."
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "A hex color code for UI representation."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "An icon for UI representation."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the plan."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the plan was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "subscribers_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscribers Count",
            "description": "The number of active subscribers to this plan."
          },
          "revenue_monthly": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revenue Monthly",
            "description": "Estimated monthly revenue from this plan."
          },
          "revenue_yearly": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revenue Yearly",
            "description": "Estimated yearly revenue from this plan."
          },
          "features": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "description": "A list of detailed features included in this plan."
          }
        },
        "type": "object",
        "required": [
          "name",
          "plan_code",
          "monthly_price",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "PlanResponse",
        "description": "Response schema for a Plan, including database-generated fields and related data."
      },
      "PlanUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "New name for the plan."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          },
          "monthly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Price",
            "description": "New monthly price."
          },
          "yearly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Price",
            "description": "New yearly price."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public",
            "description": "New public status."
          },
          "is_featured": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Featured",
            "description": "New featured status."
          },
          "user_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "User Limit",
            "description": "New user limit."
          },
          "workspace_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Limit",
            "description": "New workspace limit."
          },
          "agent_limit": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Limit",
            "description": "New agent limit."
          },
          "storage_limit_gb": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Limit Gb",
            "description": "New storage limit."
          },
          "features_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features Config",
            "description": "New features configuration."
          },
          "trial_days": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Trial Days",
            "description": "New trial days."
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "New metadata."
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "New color."
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "New icon."
          }
        },
        "type": "object",
        "title": "PlanUpdate",
        "description": "Schema for updating an existing Plan. All fields are optional."
      },
      "PurchaseCreate": {
        "properties": {
          "component_id": {
            "type": "integer",
            "title": "Component Id"
          },
          "payment_method": {
            "type": "string",
            "maxLength": 50,
            "title": "Payment Method"
          },
          "payment_provider": {
            "type": "string",
            "maxLength": 50,
            "title": "Payment Provider"
          }
        },
        "type": "object",
        "required": [
          "component_id",
          "payment_method",
          "payment_provider"
        ],
        "title": "PurchaseCreate"
      },
      "PurchaseResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "component_id": {
            "type": "string",
            "title": "Component Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "payment_method": {
            "type": "string",
            "title": "Payment Method"
          },
          "transaction_id": {
            "type": "string",
            "title": "Transaction Id"
          },
          "provider_transaction_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Transaction Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "license_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "component_id",
          "user_id",
          "amount",
          "currency",
          "payment_method",
          "transaction_id",
          "status",
          "created_at"
        ],
        "title": "PurchaseResponse"
      },
      "RBACPermissionCreate": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Chave da permiss√£o"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Categoria"
          },
          "resource": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource",
            "description": "Recurso"
          },
          "action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action",
            "description": "A√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "RBACPermissionCreate",
        "description": "Schema para cria√ß√£o de permission RBAC"
      },
      "RBACPermissionListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RBACPermissionResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de permiss√µes"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de registros"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "pages",
          "size"
        ],
        "title": "RBACPermissionListResponse",
        "description": "Schema de resposta para listagem de permissions RBAC"
      },
      "RBACPermissionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID da permiss√£o"
          },
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Chave"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Categoria"
          },
          "resource": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource",
            "description": "Recurso"
          },
          "action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action",
            "description": "A√ß√£o"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "ID do tenant"
          }
        },
        "type": "object",
        "required": [
          "id",
          "key",
          "created_at",
          "updated_at"
        ],
        "title": "RBACPermissionResponse",
        "description": "Schema de resposta para permission RBAC"
      },
      "RBACRoleCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome do role"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o"
          },
          "is_system": {
            "type": "boolean",
            "title": "Is System",
            "description": "Se √© um role do sistema",
            "default": false
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadados"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "RBACRoleCreate",
        "description": "Schema para cria√ß√£o de role RBAC"
      },
      "RBACRoleListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RBACRoleResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de roles"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de registros"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "pages",
          "size"
        ],
        "title": "RBACRoleListResponse",
        "description": "Schema de resposta para listagem de roles RBAC"
      },
      "RBACRoleResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID do role"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o"
          },
          "is_system": {
            "type": "boolean",
            "title": "Is System",
            "description": "Se √© do sistema"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Metadados"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "ID do tenant"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "is_system",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "title": "RBACRoleResponse",
        "description": "Schema de resposta para role RBAC"
      },
      "RBACRoleUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Nome"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadados"
          }
        },
        "type": "object",
        "title": "RBACRoleUpdate",
        "description": "Schema para atualiza√ß√£o de role RBAC"
      },
      "RatingCreate": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "review": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Review"
          },
          "ease_of_use": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ease Of Use"
          },
          "documentation_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Quality"
          },
          "performance": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Performance"
          },
          "reliability": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Reliability"
          },
          "support_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Quality"
          },
          "version_used": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Used"
          },
          "use_case": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Case"
          },
          "experience_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(beginner|intermediate|advanced|expert)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experience Level"
          },
          "component_id": {
            "type": "integer",
            "title": "Component Id"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "component_id"
        ],
        "title": "RatingCreate"
      },
      "RatingResponse": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "review": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Review"
          },
          "ease_of_use": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ease Of Use"
          },
          "documentation_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Quality"
          },
          "performance": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Performance"
          },
          "reliability": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Reliability"
          },
          "support_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Quality"
          },
          "version_used": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Used"
          },
          "use_case": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Case"
          },
          "experience_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(beginner|intermediate|advanced|expert)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experience Level"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "component_id": {
            "type": "string",
            "title": "Component Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "is_verified_purchase": {
            "type": "boolean",
            "title": "Is Verified Purchase",
            "default": false
          },
          "helpful_count": {
            "type": "integer",
            "title": "Helpful Count",
            "default": 0
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "id",
          "component_id",
          "user_id",
          "user_name",
          "created_at",
          "updated_at"
        ],
        "title": "RatingResponse"
      },
      "RatingStats": {
        "properties": {
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "total_ratings": {
            "type": "integer",
            "title": "Total Ratings"
          },
          "rating_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Rating Distribution"
          },
          "aspects": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Aspects"
          }
        },
        "type": "object",
        "required": [
          "average_rating",
          "total_ratings",
          "rating_distribution",
          "aspects"
        ],
        "title": "RatingStats"
      },
      "RatingValue": {
        "type": "integer",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "title": "RatingValue",
        "description": "Enum for possible rating values (1-5 stars)."
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "maxLength": 500,
            "title": "Refresh Token",
            "description": "Token de refresh"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest",
        "description": "Schema para solicita√ß√£o de refresh token - ALINHADO COM refresh_tokens TABLE"
      },
      "ReviewCreate": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "ease_of_use": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ease Of Use"
          },
          "documentation_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Quality"
          },
          "performance": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Performance"
          },
          "value_for_money": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Value For Money"
          },
          "template_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Template Id"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "template_id"
        ],
        "title": "ReviewCreate",
        "description": "Schema para cria√ß√£o de review"
      },
      "ReviewResponse": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "ease_of_use": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ease Of Use"
          },
          "documentation_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Quality"
          },
          "performance": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Performance"
          },
          "value_for_money": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Value For Money"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "template_id": {
            "type": "string",
            "format": "uuid",
            "title": "Template Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "is_verified_purchase": {
            "type": "boolean",
            "title": "Is Verified Purchase"
          },
          "is_helpful_count": {
            "type": "integer",
            "title": "Is Helpful Count"
          },
          "version_reviewed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Reviewed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          },
          "user_avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Avatar"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "id",
          "template_id",
          "user_id",
          "is_verified_purchase",
          "is_helpful_count",
          "created_at",
          "updated_at"
        ],
        "title": "ReviewResponse",
        "description": "Schema de resposta para review"
      },
      "SubscriptionCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user who owns the subscription."
          },
          "plan_id": {
            "type": "string",
            "format": "uuid",
            "title": "Plan Id",
            "description": "The ID of the plan subscribed to."
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus",
            "description": "The current status of the subscription."
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "The date when the subscription started."
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "The date when the subscription is set to end."
          },
          "next_billing_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Billing Date",
            "description": "The next date the subscription will be billed."
          },
          "payment_provider_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider Id",
            "description": "The ID of the payment provider used for this subscription."
          },
          "external_subscription_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Subscription Id",
            "description": "The ID of the subscription in the external payment provider system."
          },
          "monthly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Price",
            "description": "The monthly price of the subscription."
          },
          "yearly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Price",
            "description": "The yearly price of the subscription."
          },
          "current_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Price",
            "description": "The current effective price of the subscription."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Indicates if the subscription is currently active.",
            "default": true
          },
          "auto_renew": {
            "type": "boolean",
            "title": "Auto Renew",
            "description": "Indicates if the subscription will automatically renew.",
            "default": true
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata for the subscription."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which this subscription belongs."
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "plan_id",
          "status",
          "start_date",
          "tenant_id"
        ],
        "title": "SubscriptionCreate",
        "description": "Schema for creating a new Subscription."
      },
      "SubscriptionListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of subscriptions for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of subscriptions."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "SubscriptionListResponse",
        "description": "Paginated list of Subscriptions."
      },
      "SubscriptionResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user who owns the subscription."
          },
          "plan_id": {
            "type": "string",
            "format": "uuid",
            "title": "Plan Id",
            "description": "The ID of the plan subscribed to."
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus",
            "description": "The current status of the subscription."
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date",
            "description": "The date when the subscription started."
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "The date when the subscription is set to end."
          },
          "next_billing_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Billing Date",
            "description": "The next date the subscription will be billed."
          },
          "payment_provider_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider Id",
            "description": "The ID of the payment provider used for this subscription."
          },
          "external_subscription_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Subscription Id",
            "description": "The ID of the subscription in the external payment provider system."
          },
          "monthly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Price",
            "description": "The monthly price of the subscription."
          },
          "yearly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Price",
            "description": "The yearly price of the subscription."
          },
          "current_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Price",
            "description": "The current effective price of the subscription."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Indicates if the subscription is currently active.",
            "default": true
          },
          "auto_renew": {
            "type": "boolean",
            "title": "Auto Renew",
            "description": "Indicates if the subscription will automatically renew.",
            "default": true
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata for the subscription."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which this subscription belongs."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the subscription."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the subscription was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name",
            "description": "The name of the user."
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "The email of the user."
          },
          "plan_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan Name",
            "description": "The name of the subscribed plan."
          },
          "plan_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan Description",
            "description": "The description of the subscribed plan."
          },
          "is_expired": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Expired",
            "description": "Indicates if the subscription has expired."
          },
          "days_until_expiry": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Until Expiry",
            "description": "Number of days until the subscription expires (negative if expired)."
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "plan_id",
          "status",
          "start_date",
          "tenant_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "SubscriptionResponse",
        "description": "Response schema for a Subscription, including database-generated fields and related data."
      },
      "SubscriptionStatus": {
        "type": "string",
        "enum": [
          "active",
          "cancelled",
          "expired",
          "past_due",
          "trialing",
          "pending"
        ],
        "title": "SubscriptionStatus",
        "description": "Enum for the status of a subscription."
      },
      "SubscriptionUpdate": {
        "properties": {
          "plan_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan Id",
            "description": "New plan ID."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubscriptionStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "New status for the subscription."
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "New end date."
          },
          "next_billing_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Billing Date",
            "description": "New next billing date."
          },
          "payment_provider_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider Id",
            "description": "New payment provider ID."
          },
          "external_subscription_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Subscription Id",
            "description": "New external subscription ID."
          },
          "monthly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Price",
            "description": "New monthly price."
          },
          "yearly_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Yearly Price",
            "description": "New yearly price."
          },
          "current_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Price",
            "description": "New current price."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          },
          "auto_renew": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Renew",
            "description": "New auto-renew status."
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "New metadata."
          }
        },
        "type": "object",
        "title": "SubscriptionUpdate",
        "description": "Schema for updating an existing Subscription. All fields are optional."
      },
      "TagCreateSchema": {
        "properties": {
          "target_type": {
            "type": "string",
            "title": "Target Type",
            "description": "Tipo do alvo (conversation, message, user, workspace)"
          },
          "target_id": {
            "type": "string",
            "format": "uuid",
            "title": "Target Id",
            "description": "ID do alvo"
          },
          "tag_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Tag Name",
            "description": "Nome da tag"
          },
          "tag_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Value",
            "description": "Valor da tag (opcional)"
          },
          "tag_category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Category",
            "description": "Categoria da tag"
          },
          "tag_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Metadata",
            "description": "Metadata adicional"
          }
        },
        "type": "object",
        "required": [
          "target_type",
          "target_id",
          "tag_name"
        ],
        "title": "TagCreateSchema",
        "description": "Schema para cria√ß√£o de tags"
      },
      "TagResponseSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "target_type": {
            "type": "string",
            "title": "Target Type"
          },
          "target_id": {
            "type": "string",
            "format": "uuid",
            "title": "Target Id"
          },
          "tag_name": {
            "type": "string",
            "title": "Tag Name"
          },
          "tag_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Value"
          },
          "tag_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Category"
          },
          "is_system_tag": {
            "type": "boolean",
            "title": "Is System Tag"
          },
          "is_user_tag": {
            "type": "boolean",
            "title": "Is User Tag"
          },
          "created_by_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By User Id"
          },
          "auto_generated": {
            "type": "boolean",
            "title": "Auto Generated"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "is_high_confidence": {
            "type": "boolean",
            "title": "Is High Confidence"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "tag_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "target_type",
          "target_id",
          "tag_name",
          "tag_value",
          "tag_category",
          "is_system_tag",
          "is_user_tag",
          "created_by_user_id",
          "auto_generated",
          "confidence_score",
          "is_high_confidence",
          "display_name",
          "tag_metadata",
          "created_at"
        ],
        "title": "TagResponseSchema",
        "description": "Schema para resposta de tags"
      },
      "TemplateCategory": {
        "type": "string",
        "enum": [
          "automation",
          "data_processing",
          "integration",
          "analytics",
          "custom"
        ],
        "title": "TemplateCategory",
        "description": "Categoria do template"
      },
      "TemplateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "license_type": {
            "$ref": "#/components/schemas/TemplateLicense",
            "default": "mit"
          },
          "price": {
            "type": "number",
            "maximum": 9999.99,
            "minimum": 0.0,
            "title": "Price",
            "default": 0.0
          },
          "workflow_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Workflow Data",
            "description": "Estrutura completa do workflow"
          },
          "nodes_data": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "minItems": 1,
            "title": "Nodes Data",
            "description": "Dados dos n√≥s"
          },
          "connections_data": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connections Data"
          },
          "required_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Variables"
          },
          "optional_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional Variables"
          },
          "default_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Config"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 86400.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "complexity_level": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Complexity Level",
            "default": 1
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "industries": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Industries"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "setup_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Setup Instructions"
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "workflow_data",
          "nodes_data"
        ],
        "title": "TemplateCreate",
        "description": "Schema para cria√ß√£o de template"
      },
      "TemplateDetailResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "license_type": {
            "$ref": "#/components/schemas/TemplateLicense",
            "default": "mit"
          },
          "price": {
            "type": "number",
            "maximum": 9999.99,
            "minimum": 0.0,
            "title": "Price",
            "default": 0.0
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "author_id": {
            "type": "string",
            "format": "uuid",
            "title": "Author Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "status": {
            "$ref": "#/components/schemas/TemplateStatus"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "compatibility_version": {
            "type": "string",
            "title": "Compatibility Version"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "complexity_level": {
            "type": "integer",
            "title": "Complexity Level"
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count"
          },
          "view_count": {
            "type": "integer",
            "title": "View Count"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "industries": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Industries"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "preview_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Images"
          },
          "demo_video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Video Url"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "setup_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Setup Instructions"
          },
          "support_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Email"
          },
          "repository_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repository Url"
          },
          "documentation_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "workflow_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Workflow Data"
          },
          "nodes_data": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Nodes Data"
          },
          "connections_data": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connections Data"
          },
          "required_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Variables"
          },
          "optional_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional Variables"
          },
          "default_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Config"
          },
          "changelog": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changelog"
          },
          "author_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Name"
          },
          "author_avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Avatar"
          },
          "recent_downloads": {
            "type": "integer",
            "title": "Recent Downloads",
            "default": 0
          },
          "recent_usage": {
            "type": "integer",
            "title": "Recent Usage",
            "default": 0
          },
          "is_favorited": {
            "type": "boolean",
            "title": "Is Favorited",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "id",
          "author_id",
          "tenant_id",
          "status",
          "is_public",
          "is_featured",
          "is_verified",
          "version",
          "compatibility_version",
          "complexity_level",
          "download_count",
          "usage_count",
          "rating_average",
          "rating_count",
          "view_count",
          "created_at",
          "updated_at",
          "workflow_data",
          "nodes_data"
        ],
        "title": "TemplateDetailResponse",
        "description": "Schema de resposta detalhada para template"
      },
      "TemplateInstall": {
        "properties": {
          "template_id": {
            "type": "string",
            "format": "uuid",
            "title": "Template Id",
            "gt": 0
          },
          "workflow_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Name"
          },
          "custom_variables": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Variables"
          },
          "modify_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modify Config"
          }
        },
        "type": "object",
        "required": [
          "template_id"
        ],
        "title": "TemplateInstall",
        "description": "Schema para instala√ß√£o de template"
      },
      "TemplateInstallResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "workflow_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Id"
          },
          "workflow_name": {
            "type": "string",
            "title": "Workflow Name"
          },
          "template_id": {
            "type": "integer",
            "title": "Template Id"
          },
          "template_name": {
            "type": "string",
            "title": "Template Name"
          },
          "modifications_applied": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Modifications Applied"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "success",
          "workflow_name",
          "template_id",
          "template_name",
          "modifications_applied",
          "warnings",
          "errors"
        ],
        "title": "TemplateInstallResponse",
        "description": "Schema de resposta para instala√ß√£o"
      },
      "TemplateLicense": {
        "type": "string",
        "enum": [
          "mit",
          "apache",
          "gpl",
          "proprietary",
          "custom"
        ],
        "title": "TemplateLicense",
        "description": "Licen√ßa do template"
      },
      "TemplateListResponse": {
        "properties": {
          "templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Templates"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "templates",
          "total",
          "page",
          "per_page",
          "pages",
          "has_next",
          "has_prev"
        ],
        "title": "TemplateListResponse",
        "description": "Schema para lista de templates"
      },
      "TemplateResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "license_type": {
            "$ref": "#/components/schemas/TemplateLicense",
            "default": "mit"
          },
          "price": {
            "type": "number",
            "maximum": 9999.99,
            "minimum": 0.0,
            "title": "Price",
            "default": 0.0
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "author_id": {
            "type": "string",
            "format": "uuid",
            "title": "Author Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "status": {
            "$ref": "#/components/schemas/TemplateStatus"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "compatibility_version": {
            "type": "string",
            "title": "Compatibility Version"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "complexity_level": {
            "type": "integer",
            "title": "Complexity Level"
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count"
          },
          "view_count": {
            "type": "integer",
            "title": "View Count"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "industries": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Industries"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "preview_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Images"
          },
          "demo_video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Video Url"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "setup_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Setup Instructions"
          },
          "support_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Email"
          },
          "repository_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repository Url"
          },
          "documentation_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "id",
          "author_id",
          "tenant_id",
          "status",
          "is_public",
          "is_featured",
          "is_verified",
          "version",
          "compatibility_version",
          "complexity_level",
          "download_count",
          "usage_count",
          "rating_average",
          "rating_count",
          "view_count",
          "created_at",
          "updated_at"
        ],
        "title": "TemplateResponse",
        "description": "Schema de resposta para template"
      },
      "TemplateStats": {
        "properties": {
          "total_templates": {
            "type": "integer",
            "title": "Total Templates"
          },
          "published_templates": {
            "type": "integer",
            "title": "Published Templates"
          },
          "featured_templates": {
            "type": "integer",
            "title": "Featured Templates"
          },
          "verified_templates": {
            "type": "integer",
            "title": "Verified Templates"
          },
          "free_templates": {
            "type": "integer",
            "title": "Free Templates"
          },
          "premium_templates": {
            "type": "integer",
            "title": "Premium Templates"
          },
          "total_downloads": {
            "type": "integer",
            "title": "Total Downloads"
          },
          "total_reviews": {
            "type": "integer",
            "title": "Total Reviews"
          },
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "categories_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Categories Distribution"
          },
          "top_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Top Templates"
          },
          "recent_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Recent Templates"
          }
        },
        "type": "object",
        "required": [
          "total_templates",
          "published_templates",
          "featured_templates",
          "verified_templates",
          "free_templates",
          "premium_templates",
          "total_downloads",
          "total_reviews",
          "average_rating",
          "categories_distribution",
          "top_templates",
          "recent_templates"
        ],
        "title": "TemplateStats",
        "description": "Estat√≠sticas de templates"
      },
      "TemplateStatus": {
        "type": "string",
        "enum": [
          "draft",
          "published",
          "archived",
          "under_review"
        ],
        "title": "TemplateStatus",
        "description": "Status do template"
      },
      "TemplateUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateCategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "license_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateLicense"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 9999.99,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "workflow_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Data"
          },
          "nodes_data": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes Data"
          },
          "connections_data": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connections Data"
          },
          "required_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Variables"
          },
          "optional_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional Variables"
          },
          "default_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Config"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d+\\.\\d+\\.\\d+$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 86400.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "complexity_level": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Complexity Level"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "industries": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Industries"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "preview_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                "type": "array",
                "maxItems": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Images"
          },
          "demo_video_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Video Url"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "setup_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Setup Instructions"
          },
          "support_email": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^[^@]+@[^@]+\\.[^@]+$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Email"
          },
          "repository_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repository Url"
          },
          "documentation_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Url"
          }
        },
        "type": "object",
        "title": "TemplateUpdate",
        "description": "Schema para atualiza√ß√£o de template"
      },
      "TenantCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Nome do tenant"
          },
          "slug": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "title": "Slug",
            "description": "Slug √∫nico do tenant"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain",
            "description": "Dom√≠nio personalizado"
          },
          "status": {
            "$ref": "#/components/schemas/TenantStatus",
            "description": "Status do tenant",
            "default": "active"
          },
          "theme": {
            "$ref": "#/components/schemas/TenantTheme",
            "description": "Tema da interface",
            "default": "light"
          },
          "default_language": {
            "type": "string",
            "maxLength": 10,
            "title": "Default Language",
            "description": "Idioma padr√£o",
            "default": "en"
          },
          "timezone": {
            "type": "string",
            "maxLength": 50,
            "title": "Timezone",
            "description": "Fuso hor√°rio padr√£o",
            "default": "UTC"
          },
          "mfa_required": {
            "type": "boolean",
            "title": "Mfa Required",
            "description": "Se MFA √© obrigat√≥rio",
            "default": false
          },
          "session_timeout": {
            "type": "integer",
            "maximum": 86400.0,
            "minimum": 300.0,
            "title": "Session Timeout",
            "description": "Timeout da sess√£o em segundos",
            "default": 3600
          },
          "ip_whitelist": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ip Whitelist",
            "description": "Lista de IPs permitidos"
          },
          "max_storage_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Storage Mb",
            "description": "Limite de armazenamento em MB"
          },
          "max_workspaces": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Workspaces",
            "description": "Limite de workspaces"
          },
          "max_api_calls_per_day": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Api Calls Per Day",
            "description": "Limite de chamadas API por dia"
          },
          "max_members_per_workspace": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Members Per Workspace",
            "description": "Limite de membros por workspace"
          },
          "enabled_features": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Enabled Features",
            "description": "Features habilitadas"
          },
          "plan_id": {
            "type": "string",
            "format": "uuid",
            "title": "Plan Id",
            "description": "ID do plano do tenant"
          }
        },
        "type": "object",
        "required": [
          "name",
          "slug",
          "plan_id"
        ],
        "title": "TenantCreate",
        "description": "Schema para cria√ß√£o de tenants"
      },
      "TenantFeatureCreate": {
        "properties": {
          "feature_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feature Id",
            "description": "ID da feature"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Se est√° habilitada",
            "default": true
          },
          "usage_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage Count",
            "description": "Contagem de uso",
            "default": 0
          },
          "limit_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit Value",
            "description": "Limite de valor"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "Configura√ß√£o"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Data de expira√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "feature_id"
        ],
        "title": "TenantFeatureCreate",
        "description": "Schema para cria√ß√£o de feature de tenant"
      },
      "TenantFeatureListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TenantFeatureResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de features do tenant"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de registros"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "pages",
          "size"
        ],
        "title": "TenantFeatureListResponse",
        "description": "Schema de resposta para listagem de features do tenant"
      },
      "TenantFeatureResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID da tenant feature"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "feature_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feature Id",
            "description": "ID da feature"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Se est√° habilitada"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count",
            "description": "Contagem de uso"
          },
          "limit_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit Value",
            "description": "Limite de valor"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config",
            "description": "Configura√ß√£o"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Data de expira√ß√£o"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          },
          "feature_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Name",
            "description": "Nome da feature"
          },
          "feature_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Key",
            "description": "Chave da feature"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "feature_id",
          "is_enabled",
          "usage_count",
          "config",
          "created_at",
          "updated_at"
        ],
        "title": "TenantFeatureResponse",
        "description": "Schema de resposta para feature de tenant"
      },
      "TenantListResponse": {
        "properties": {
          "tenants": {
            "items": {
              "$ref": "#/components/schemas/TenantResponse"
            },
            "type": "array",
            "title": "Tenants",
            "description": "Lista de tenants"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de tenants"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          }
        },
        "type": "object",
        "required": [
          "tenants",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "TenantListResponse",
        "description": "Schema para listagem de tenants"
      },
      "TenantResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Nome do tenant"
          },
          "slug": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "title": "Slug",
            "description": "Slug √∫nico do tenant"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain",
            "description": "Dom√≠nio personalizado"
          },
          "status": {
            "$ref": "#/components/schemas/TenantStatus",
            "description": "Status do tenant",
            "default": "active"
          },
          "theme": {
            "$ref": "#/components/schemas/TenantTheme",
            "description": "Tema da interface",
            "default": "light"
          },
          "default_language": {
            "type": "string",
            "maxLength": 10,
            "title": "Default Language",
            "description": "Idioma padr√£o",
            "default": "en"
          },
          "timezone": {
            "type": "string",
            "maxLength": 50,
            "title": "Timezone",
            "description": "Fuso hor√°rio padr√£o",
            "default": "UTC"
          },
          "mfa_required": {
            "type": "boolean",
            "title": "Mfa Required",
            "description": "Se MFA √© obrigat√≥rio",
            "default": false
          },
          "session_timeout": {
            "type": "integer",
            "maximum": 86400.0,
            "minimum": 300.0,
            "title": "Session Timeout",
            "description": "Timeout da sess√£o em segundos",
            "default": 3600
          },
          "ip_whitelist": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ip Whitelist",
            "description": "Lista de IPs permitidos"
          },
          "max_storage_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Storage Mb",
            "description": "Limite de armazenamento em MB"
          },
          "max_workspaces": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Workspaces",
            "description": "Limite de workspaces"
          },
          "max_api_calls_per_day": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Api Calls Per Day",
            "description": "Limite de chamadas API por dia"
          },
          "max_members_per_workspace": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Members Per Workspace",
            "description": "Limite de membros por workspace"
          },
          "enabled_features": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Enabled Features",
            "description": "Features habilitadas"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID √∫nico do tenant"
          },
          "plan_id": {
            "type": "string",
            "format": "uuid",
            "title": "Plan Id",
            "description": "ID do plano"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "name",
          "slug",
          "id",
          "plan_id",
          "created_at",
          "updated_at"
        ],
        "title": "TenantResponse",
        "description": "Schema de resposta para tenants - ALINHADO COM tenants TABLE"
      },
      "TenantStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "suspended",
          "trial",
          "expired"
        ],
        "title": "TenantStatus",
        "description": "Status do tenant - ALINHADO COM O BANCO"
      },
      "TenantTheme": {
        "type": "string",
        "enum": [
          "light",
          "dark",
          "auto"
        ],
        "title": "TenantTheme",
        "description": "Temas dispon√≠veis para tenants"
      },
      "TenantUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Novo nome"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain",
            "description": "Novo dom√≠nio"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TenantStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Novo status"
          },
          "plan_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan Id",
            "description": "Novo plano"
          },
          "theme": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TenantTheme"
              },
              {
                "type": "null"
              }
            ],
            "description": "Novo tema"
          },
          "default_language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Language",
            "description": "Novo idioma padr√£o"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Novo fuso hor√°rio"
          },
          "mfa_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mfa Required",
            "description": "Novo status MFA"
          },
          "session_timeout": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 86400.0,
                "minimum": 300.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Timeout",
            "description": "Novo timeout"
          },
          "ip_whitelist": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Whitelist",
            "description": "Nova whitelist de IPs"
          },
          "max_storage_mb": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Storage Mb",
            "description": "Novo limite de storage"
          },
          "max_workspaces": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Workspaces",
            "description": "Novo limite de workspaces"
          },
          "max_api_calls_per_day": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Api Calls Per Day",
            "description": "Novo limite de API calls"
          },
          "max_members_per_workspace": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Members Per Workspace",
            "description": "Novo limite de membros"
          },
          "enabled_features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled Features",
            "description": "Novas features habilitadas"
          }
        },
        "type": "object",
        "title": "TenantUpdate",
        "description": "Schema para atualiza√ß√£o de tenants"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email",
            "description": "Email do usu√°rio"
          },
          "username": {
            "type": "string",
            "maxLength": 255,
            "minLength": 3,
            "title": "Username",
            "description": "Username"
          },
          "full_name": {
            "type": "string",
            "maxLength": 200,
            "minLength": 2,
            "title": "Full Name",
            "description": "Nome completo"
          },
          "password": {
            "type": "string",
            "maxLength": 255,
            "minLength": 8,
            "title": "Password",
            "description": "Senha do usu√°rio (m√≠nimo 8 caracteres)"
          },
          "confirm_password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirm Password",
            "description": "Confirma√ß√£o da senha"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "URL da imagem de perfil"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "Biografia do usu√°rio"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "terms_accepted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Accepted",
            "description": "Aceite dos termos de uso",
            "default": false
          },
          "marketing_consent": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Marketing Consent",
            "description": "Consentimento para marketing",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "full_name",
          "password"
        ],
        "title": "UserCreate",
        "description": "Schema para cria√ß√£o de novos usu√°rios\nALINHADO COM users TABLE + valida√ß√µes de neg√≥cio"
      },
      "UserInsightCreate": {
        "properties": {
          "insight_type": {
            "$ref": "#/components/schemas/InsightType",
            "description": "The type of the insight."
          },
          "category": {
            "$ref": "#/components/schemas/InsightCategory",
            "description": "The category of the insight."
          },
          "priority": {
            "$ref": "#/components/schemas/InsightPriority",
            "description": "The priority level of the insight."
          },
          "title": {
            "type": "string",
            "maxLength": 200,
            "title": "Title",
            "description": "A concise title for the insight."
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "A detailed description of the insight."
          },
          "recommendation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommendation",
            "description": "Actionable recommendation based on the insight."
          },
          "supporting_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supporting Data",
            "description": "Additional data supporting the insight."
          },
          "confidence_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Confidence Score",
            "description": "The confidence score of the insight (0-1)."
          },
          "suggested_action": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Action",
            "description": "A short suggested action for the user."
          },
          "action_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Url",
            "description": "A URL related to the suggested action."
          },
          "action_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Data",
            "description": "Additional data for the suggested action."
          },
          "is_read": {
            "type": "boolean",
            "title": "Is Read",
            "description": "Indicates if the user has read the insight.",
            "default": false
          },
          "is_dismissed": {
            "type": "boolean",
            "title": "Is Dismissed",
            "description": "Indicates if the user has dismissed the insight.",
            "default": false
          },
          "is_acted_upon": {
            "type": "boolean",
            "title": "Is Acted Upon",
            "description": "Indicates if the user has acted upon the insight.",
            "default": false
          },
          "user_feedback": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "User Feedback",
            "description": "User feedback on the insight (e.g., 'helpful', 'not_helpful')."
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "The date and time when the insight expires."
          },
          "is_evergreen": {
            "type": "boolean",
            "title": "Is Evergreen",
            "description": "Indicates if the insight is evergreen (does not expire).",
            "default": false
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user to whom the insight belongs."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this insight belongs."
          }
        },
        "type": "object",
        "required": [
          "insight_type",
          "category",
          "priority",
          "title",
          "description",
          "confidence_score",
          "user_id"
        ],
        "title": "UserInsightCreate",
        "description": "Schema for creating a new UserInsight."
      },
      "UserInsightListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UserInsightResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of user insights for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of user insights."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "UserInsightListResponse",
        "description": "Paginated list of UserInsights."
      },
      "UserInsightResponse": {
        "properties": {
          "insight_type": {
            "$ref": "#/components/schemas/InsightType",
            "description": "The type of the insight."
          },
          "category": {
            "$ref": "#/components/schemas/InsightCategory",
            "description": "The category of the insight."
          },
          "priority": {
            "$ref": "#/components/schemas/InsightPriority",
            "description": "The priority level of the insight."
          },
          "title": {
            "type": "string",
            "maxLength": 200,
            "title": "Title",
            "description": "A concise title for the insight."
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "A detailed description of the insight."
          },
          "recommendation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommendation",
            "description": "Actionable recommendation based on the insight."
          },
          "supporting_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supporting Data",
            "description": "Additional data supporting the insight."
          },
          "confidence_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Confidence Score",
            "description": "The confidence score of the insight (0-1)."
          },
          "suggested_action": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Action",
            "description": "A short suggested action for the user."
          },
          "action_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Url",
            "description": "A URL related to the suggested action."
          },
          "action_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Data",
            "description": "Additional data for the suggested action."
          },
          "is_read": {
            "type": "boolean",
            "title": "Is Read",
            "description": "Indicates if the user has read the insight.",
            "default": false
          },
          "is_dismissed": {
            "type": "boolean",
            "title": "Is Dismissed",
            "description": "Indicates if the user has dismissed the insight.",
            "default": false
          },
          "is_acted_upon": {
            "type": "boolean",
            "title": "Is Acted Upon",
            "description": "Indicates if the user has acted upon the insight.",
            "default": false
          },
          "user_feedback": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "User Feedback",
            "description": "User feedback on the insight (e.g., 'helpful', 'not_helpful')."
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "The date and time when the insight expires."
          },
          "is_evergreen": {
            "type": "boolean",
            "title": "Is Evergreen",
            "description": "Indicates if the insight is evergreen (does not expire).",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the insight."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user to whom the insight belongs."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this insight belongs."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the insight was created."
          },
          "read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At",
            "description": "Timestamp of when the insight was read."
          },
          "acted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Acted At",
            "description": "Timestamp of when the insight was acted upon."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          }
        },
        "type": "object",
        "required": [
          "insight_type",
          "category",
          "priority",
          "title",
          "description",
          "confidence_score",
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "UserInsightResponse",
        "description": "Response schema for a UserInsight, including database-generated fields."
      },
      "UserInsightUpdate": {
        "properties": {
          "priority": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InsightPriority"
              },
              {
                "type": "null"
              }
            ],
            "description": "New priority level."
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "New title."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          },
          "recommendation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommendation",
            "description": "New recommendation."
          },
          "supporting_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supporting Data",
            "description": "New supporting data."
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score",
            "description": "New confidence score."
          },
          "suggested_action": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Action",
            "description": "New suggested action."
          },
          "action_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Url",
            "description": "New action URL."
          },
          "action_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Data",
            "description": "New action data."
          },
          "is_read": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Read",
            "description": "New read status."
          },
          "is_dismissed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Dismissed",
            "description": "New dismissed status."
          },
          "is_acted_upon": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Acted Upon",
            "description": "New acted upon status."
          },
          "user_feedback": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "User Feedback",
            "description": "New user feedback."
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "New expiration date."
          },
          "is_evergreen": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Evergreen",
            "description": "New evergreen status."
          }
        },
        "type": "object",
        "title": "UserInsightUpdate",
        "description": "Schema for updating an existing UserInsight. All fields are optional."
      },
      "UserListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of users"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of users"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total number of pages"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "pages",
          "size"
        ],
        "title": "UserListResponse",
        "description": "Paginated list of users."
      },
      "UserResponse": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email",
            "description": "Unique user email"
          },
          "username": {
            "type": "string",
            "maxLength": 255,
            "minLength": 3,
            "title": "Username",
            "description": "Unique username"
          },
          "full_name": {
            "type": "string",
            "maxLength": 200,
            "minLength": 2,
            "title": "Full Name",
            "description": "Full name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the user is active",
            "default": true
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "description": "Whether the email has been verified",
            "default": false
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "description": "Whether the user is an administrator",
            "default": false
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus",
            "description": "User status",
            "default": "active"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "User biography"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "URL of the profile image"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Additional metadata"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "User ID"
          },
          "last_login_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login At",
            "description": "Last login timestamp"
          },
          "login_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Login Count",
            "description": "Total login count"
          },
          "failed_login_attempts": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed Login Attempts",
            "description": "Failed login attempts"
          },
          "account_locked_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Locked Until",
            "description": "Account locked until timestamp"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "full_name",
          "id"
        ],
        "title": "UserResponse",
        "description": "Response schema for a user - PERFECTLY ALIGNED WITH DATABASE (excluding sensitive fields)"
      },
      "UserStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "draft",
          "error",
          "deleted"
        ],
        "title": "UserStatus",
        "description": "User status - ALIGNED WITH THE DATABASE"
      },
      "UserTemplateStats": {
        "properties": {
          "created_templates": {
            "type": "integer",
            "title": "Created Templates"
          },
          "published_templates": {
            "type": "integer",
            "title": "Published Templates"
          },
          "total_downloads": {
            "type": "integer",
            "title": "Total Downloads"
          },
          "total_reviews": {
            "type": "integer",
            "title": "Total Reviews"
          },
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "favorite_templates": {
            "type": "integer",
            "title": "Favorite Templates"
          },
          "template_collections": {
            "type": "integer",
            "title": "Template Collections"
          },
          "total_earnings": {
            "type": "number",
            "title": "Total Earnings"
          }
        },
        "type": "object",
        "required": [
          "created_templates",
          "published_templates",
          "total_downloads",
          "total_reviews",
          "average_rating",
          "favorite_templates",
          "template_collections",
          "total_earnings"
        ],
        "title": "UserTemplateStats",
        "description": "Estat√≠sticas de templates do usu√°rio"
      },
      "UserTenantRoleListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/synapse__schemas__user_tenant_role__UserTenantRoleResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of user-tenant role assignments for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of assignments."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "UserTenantRoleListResponse",
        "description": "Paginated list of UserTenantRole assignments."
      },
      "UserTenantRoleUpdate": {
        "properties": {
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id",
            "description": "New RBAC role ID."
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "New expiration timestamp."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          },
          "conditions": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conditions",
            "description": "New conditions."
          }
        },
        "type": "object",
        "title": "UserTenantRoleUpdate",
        "description": "Schema for updating an existing UserTenantRole assignment. All fields are optional."
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Unique user email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Unique username"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name",
            "description": "Full name"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether the user is active"
          },
          "is_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Verified",
            "description": "Whether the email has been verified"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser",
            "description": "Whether the user is an administrator"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "User status"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "User biography"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url",
            "description": "URL of the profile image"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata"
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "Schema for user updates - ALIGNED WITH DATABASE"
      },
      "UserVariableCreate": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "title": "Key",
            "description": "The unique key of the user variable."
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "The value of the user variable."
          },
          "is_secret": {
            "type": "boolean",
            "title": "Is Secret",
            "description": "Indicates if the variable contains sensitive information.",
            "default": false
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "A category for organizing the variable."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the variable."
          },
          "is_encrypted": {
            "type": "boolean",
            "title": "Is Encrypted",
            "description": "Indicates if the variable's value is encrypted.",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the variable is active and can be used.",
            "default": true
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user who owns this variable."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this variable belongs."
          }
        },
        "type": "object",
        "required": [
          "key",
          "value",
          "user_id"
        ],
        "title": "UserVariableCreate",
        "description": "Schema for creating a new UserVariable."
      },
      "UserVariableListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UserVariableResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of user variables for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of user variables."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "UserVariableListResponse",
        "description": "Paginated list of UserVariables."
      },
      "UserVariableResponse": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "title": "Key",
            "description": "The unique key of the user variable."
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "The value of the user variable."
          },
          "is_secret": {
            "type": "boolean",
            "title": "Is Secret",
            "description": "Indicates if the variable contains sensitive information.",
            "default": false
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "A category for organizing the variable."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A detailed description of the variable."
          },
          "is_encrypted": {
            "type": "boolean",
            "title": "Is Encrypted",
            "description": "Indicates if the variable's value is encrypted.",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the variable is active and can be used.",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the user variable."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user who owns this variable."
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id",
            "description": "The tenant to which this variable belongs."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the variable was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "display_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Value",
            "description": "Masked value for secrets."
          }
        },
        "type": "object",
        "required": [
          "key",
          "value",
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "UserVariableResponse",
        "description": "Response schema for a UserVariable, including database-generated fields."
      },
      "UserVariableUpdate": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "New value for the variable."
          },
          "is_secret": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Secret",
            "description": "New secret status."
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "New category."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "New description."
          },
          "is_encrypted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Encrypted",
            "description": "New encryption status."
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "New active status."
          }
        },
        "type": "object",
        "title": "UserVariableUpdate",
        "description": "Schema for updating an existing UserVariable. All fields are optional."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WidgetConfig": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Id"
          },
          "type": {
            "type": "string",
            "pattern": "^(metric_chart|event_timeline|user_funnel|kpi_card|heatmap|table)$",
            "title": "Type"
          },
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Title"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "position": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Position",
            "description": "x, y, width, height"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "title",
          "config",
          "position"
        ],
        "title": "WidgetConfig"
      },
      "WidgetType": {
        "type": "string",
        "enum": [
          "chart",
          "table",
          "metric",
          "text",
          "image",
          "iframe"
        ],
        "title": "WidgetType",
        "description": "Enum for widget types"
      },
      "WorkflowCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "definition": {
            "additionalProperties": true,
            "type": "object",
            "title": "Definition"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "WorkflowCreate"
      },
      "WorkflowExecutionCreate": {
        "properties": {
          "workflow_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workflow Id",
            "description": "ID do workflow"
          },
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data",
            "description": "Dados de entrada"
          }
        },
        "type": "object",
        "required": [
          "workflow_id"
        ],
        "title": "WorkflowExecutionCreate",
        "description": "Schema para cria√ß√£o de execu√ß√£o de workflow"
      },
      "WorkflowExecutionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workflow Id"
          },
          "workflow_name": {
            "type": "string",
            "title": "Workflow Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "progress": {
            "type": "integer",
            "title": "Progress"
          },
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data"
          },
          "output_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Data"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workflow_id",
          "workflow_name",
          "status",
          "progress",
          "input_data",
          "output_data",
          "error_message",
          "started_at",
          "completed_at",
          "created_at",
          "updated_at"
        ],
        "title": "WorkflowExecutionResponse"
      },
      "WorkflowExecutionWithNodesResponse": {
        "properties": {
          "execution": {
            "$ref": "#/components/schemas/ExecutionResponse"
          },
          "node_executions": {
            "items": {
              "$ref": "#/components/schemas/synapse__schemas__workflow_execution__NodeExecutionResponse"
            },
            "type": "array",
            "title": "Node Executions",
            "default": []
          },
          "total_node_executions": {
            "type": "integer",
            "title": "Total Node Executions",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "execution"
        ],
        "title": "WorkflowExecutionWithNodesResponse",
        "description": "Response schema for workflow execution with node executions included"
      },
      "WorkflowResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "ID do novo workspace"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "definition": {
            "additionalProperties": true,
            "type": "object",
            "title": "Definition"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "downloads_count": {
            "type": "integer",
            "title": "Downloads Count"
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count"
          },
          "execution_count": {
            "type": "integer",
            "title": "Execution Count"
          },
          "last_executed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Executed At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "user_id",
          "tenant_id",
          "version",
          "status",
          "definition",
          "downloads_count",
          "rating_average",
          "rating_count",
          "execution_count"
        ],
        "title": "WorkflowResponse"
      },
      "WorkflowStatus": {
        "type": "string",
        "enum": [
          "draft",
          "active",
          "inactive",
          "archived",
          "error"
        ],
        "title": "WorkflowStatus",
        "description": "Status do workflow"
      },
      "WorkflowUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "definition": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Definition"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "WorkflowUpdate"
      },
      "WorkspaceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "Workspace name"
          },
          "slug": {
            "type": "string",
            "maxLength": 120,
            "title": "Slug",
            "description": "Unique slug"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "description": "Avatar URL"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Color (hex)"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Public workspace",
            "default": false
          },
          "is_template": {
            "type": "boolean",
            "title": "Is Template",
            "description": "Is a template",
            "default": false
          },
          "allow_guest_access": {
            "type": "boolean",
            "title": "Allow Guest Access",
            "description": "Allows guest access",
            "default": false
          },
          "require_approval": {
            "type": "boolean",
            "title": "Require Approval",
            "description": "Requires approval",
            "default": true
          },
          "max_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Members",
            "description": "Maximum members"
          },
          "max_projects": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Projects",
            "description": "Maximum projects"
          },
          "max_storage_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Storage Mb",
            "description": "Maximum storage in MB"
          },
          "enable_real_time_editing": {
            "type": "boolean",
            "title": "Enable Real Time Editing",
            "description": "Real-time editing",
            "default": true
          },
          "enable_comments": {
            "type": "boolean",
            "title": "Enable Comments",
            "description": "Comments",
            "default": true
          },
          "enable_chat": {
            "type": "boolean",
            "title": "Enable Chat",
            "description": "Chat",
            "default": true
          },
          "enable_video_calls": {
            "type": "boolean",
            "title": "Enable Video Calls",
            "description": "Video calls",
            "default": true
          },
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "description": "Email notifications",
            "default": true
          },
          "push_notifications": {
            "type": "boolean",
            "title": "Push Notifications",
            "description": "Push notifications",
            "default": false
          },
          "type": {
            "$ref": "#/components/schemas/WorkspaceType",
            "description": "Workspace type",
            "default": "individual"
          }
        },
        "type": "object",
        "required": [
          "name",
          "slug"
        ],
        "title": "WorkspaceCreate",
        "description": "Schema for workspace creation - ALIGNED WITH DATABASE"
      },
      "WorkspaceFeatureCreate": {
        "properties": {
          "feature_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feature Id",
            "description": "ID da feature"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Se est√° habilitada",
            "default": true
          },
          "usage_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage Count",
            "description": "Contagem de uso",
            "default": 0
          },
          "limit_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit Value",
            "description": "Limite de valor"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "Configura√ß√£o"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Data de expira√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "feature_id"
        ],
        "title": "WorkspaceFeatureCreate",
        "description": "Schema para cria√ß√£o de feature de workspace"
      },
      "WorkspaceFeatureListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceFeatureResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de features do workspace"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de registros"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "pages",
          "size"
        ],
        "title": "WorkspaceFeatureListResponse",
        "description": "Schema de resposta para listagem de features do workspace"
      },
      "WorkspaceFeatureResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID da workspace feature"
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id",
            "description": "ID do workspace"
          },
          "feature_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feature Id",
            "description": "ID da feature"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Se est√° habilitada"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count",
            "description": "Contagem de uso"
          },
          "limit_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit Value",
            "description": "Limite de valor"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config",
            "description": "Configura√ß√£o"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Data de expira√ß√£o"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          },
          "feature_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Name",
            "description": "Nome da feature"
          },
          "feature_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Key",
            "description": "Chave da feature"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "feature_id",
          "is_enabled",
          "usage_count",
          "config",
          "created_at",
          "updated_at"
        ],
        "title": "WorkspaceFeatureResponse",
        "description": "Schema de resposta para feature de workspace"
      },
      "WorkspaceListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of workspaces"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of workspaces"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "WorkspaceListResponse",
        "description": "Paginated list of workspaces."
      },
      "WorkspaceMemberCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "ID do usu√°rio a ser adicionado"
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole",
            "description": "Role do membro no workspace"
          },
          "custom_permissions": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Permissions",
            "description": "Permiss√µes customizadas"
          },
          "notification_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Preferences",
            "description": "Prefer√™ncias de notifica√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role"
        ],
        "title": "WorkspaceMemberCreate",
        "description": "Schema para cria√ß√£o de workspace member"
      },
      "WorkspaceMemberListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceMemberResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de membros"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de registros"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "pages",
          "size"
        ],
        "title": "WorkspaceMemberListResponse",
        "description": "Schema de resposta para listagem de membros"
      },
      "WorkspaceMemberResponse": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole",
            "description": "Role do membro no workspace"
          },
          "custom_permissions": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Permissions",
            "description": "Permiss√µes customizadas"
          },
          "notification_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Preferences",
            "description": "Prefer√™ncias de notifica√ß√£o"
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite",
            "description": "Se √© workspace favorito do usu√°rio",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "ID do membro"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id",
            "description": "ID do workspace"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "ID do usu√°rio"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status do membro"
          },
          "last_seen_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Seen At",
            "description": "√öltima vez que foi visto"
          },
          "joined_at": {
            "type": "string",
            "format": "date-time",
            "title": "Joined At",
            "description": "Data de entrada no workspace"
          },
          "left_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left At",
            "description": "Data de sa√≠da do workspace"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name",
            "description": "Nome do usu√°rio"
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "Email do usu√°rio"
          },
          "user_avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Avatar",
            "description": "Avatar do usu√°rio"
          }
        },
        "type": "object",
        "required": [
          "role",
          "id",
          "workspace_id",
          "user_id",
          "status",
          "last_seen_at",
          "joined_at"
        ],
        "title": "WorkspaceMemberResponse",
        "description": "Schema de resposta para workspace member",
        "example": {
          "custom_permissions": {},
          "id": 1,
          "is_favorite": false,
          "joined_at": "2024-12-20T10:00:00Z",
          "last_seen_at": "2024-12-20T15:00:00Z",
          "notification_preferences": {
            "email_notifications": true,
            "push_notifications": false
          },
          "role": "MEMBER",
          "status": "active",
          "user_email": "joao@exemplo.com",
          "user_id": "123e4567-e89b-12d3-a456-426614174001",
          "user_name": "Jo√£o Silva",
          "workspace_id": "123e4567-e89b-12d3-a456-426614174000"
        }
      },
      "WorkspaceResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name",
            "description": "Workspace name"
          },
          "slug": {
            "type": "string",
            "maxLength": 120,
            "title": "Slug",
            "description": "Unique slug"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "description": "Avatar URL"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Color (hex)"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "description": "Public workspace",
            "default": false
          },
          "is_template": {
            "type": "boolean",
            "title": "Is Template",
            "description": "Is a template",
            "default": false
          },
          "allow_guest_access": {
            "type": "boolean",
            "title": "Allow Guest Access",
            "description": "Allows guest access",
            "default": false
          },
          "require_approval": {
            "type": "boolean",
            "title": "Require Approval",
            "description": "Requires approval",
            "default": true
          },
          "max_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Members",
            "description": "Maximum members"
          },
          "max_projects": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Projects",
            "description": "Maximum projects"
          },
          "max_storage_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Storage Mb",
            "description": "Maximum storage in MB"
          },
          "enable_real_time_editing": {
            "type": "boolean",
            "title": "Enable Real Time Editing",
            "description": "Real-time editing",
            "default": true
          },
          "enable_comments": {
            "type": "boolean",
            "title": "Enable Comments",
            "description": "Comments",
            "default": true
          },
          "enable_chat": {
            "type": "boolean",
            "title": "Enable Chat",
            "description": "Chat",
            "default": true
          },
          "enable_video_calls": {
            "type": "boolean",
            "title": "Enable Video Calls",
            "description": "Video calls",
            "default": true
          },
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "description": "Email notifications",
            "default": true
          },
          "push_notifications": {
            "type": "boolean",
            "title": "Push Notifications",
            "description": "Push notifications",
            "default": false
          },
          "type": {
            "$ref": "#/components/schemas/WorkspaceType",
            "description": "Workspace type",
            "default": "individual"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Workspace ID"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id",
            "description": "Owner ID"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "member_count": {
            "type": "integer",
            "title": "Member Count",
            "description": "Number of members"
          },
          "project_count": {
            "type": "integer",
            "title": "Project Count",
            "description": "Number of projects"
          },
          "activity_count": {
            "type": "integer",
            "title": "Activity Count",
            "description": "Number of activities"
          },
          "storage_used_mb": {
            "type": "number",
            "title": "Storage Used Mb",
            "description": "Storage used in MB"
          },
          "api_calls_today": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Calls Today",
            "description": "API calls today"
          },
          "api_calls_this_month": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Calls This Month",
            "description": "API calls this month"
          },
          "last_api_reset_daily": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Api Reset Daily",
            "description": "Last daily API reset"
          },
          "last_api_reset_monthly": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Api Reset Monthly",
            "description": "Last monthly API reset"
          },
          "feature_usage_count": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Usage Count",
            "description": "Feature usage count"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "last_activity_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Activity At",
            "description": "Last activity timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "slug",
          "id",
          "owner_id",
          "tenant_id",
          "member_count",
          "project_count",
          "activity_count",
          "storage_used_mb",
          "status",
          "created_at",
          "updated_at",
          "last_activity_at"
        ],
        "title": "WorkspaceResponse",
        "description": "Response schema for a workspace - PERFECTLY ALIGNED WITH DATABASE"
      },
      "WorkspaceRole": {
        "type": "string",
        "enum": [
          "owner",
          "admin",
          "moderator",
          "member",
          "viewer"
        ],
        "title": "WorkspaceRole",
        "description": "Workspace member roles"
      },
      "WorkspaceStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "suspended",
          "deleted"
        ],
        "title": "WorkspaceStatus",
        "description": "Workspace status - ALIGNED WITH THE DATABASE"
      },
      "WorkspaceType": {
        "type": "string",
        "enum": [
          "individual",
          "collaborative"
        ],
        "title": "WorkspaceType",
        "description": "Workspace type - ALIGNED WITH THE DATABASE"
      },
      "WorkspaceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Workspace name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "description": "Avatar URL"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Color (hex)"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public",
            "description": "Public workspace"
          },
          "is_template": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Template",
            "description": "Is a template"
          },
          "allow_guest_access": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Guest Access",
            "description": "Allows guest access"
          },
          "require_approval": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require Approval",
            "description": "Requires approval"
          },
          "max_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Members",
            "description": "Maximum members"
          },
          "max_projects": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Projects",
            "description": "Maximum projects"
          },
          "max_storage_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Storage Mb",
            "description": "Maximum storage in MB"
          },
          "enable_real_time_editing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Real Time Editing",
            "description": "Real-time editing"
          },
          "enable_comments": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Comments",
            "description": "Comments"
          },
          "enable_chat": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Chat",
            "description": "Chat"
          },
          "enable_video_calls": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Video Calls",
            "description": "Video calls"
          },
          "email_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Notifications",
            "description": "Email notifications"
          },
          "push_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Push Notifications",
            "description": "Push notifications"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkspaceStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status"
          }
        },
        "type": "object",
        "title": "WorkspaceUpdate",
        "description": "Schema for workspace updates - ALIGNED WITH DATABASE"
      },
      "synapse__models__node__NodeStatus": {
        "type": "string",
        "enum": [
          "draft",
          "published",
          "deprecated",
          "private"
        ],
        "title": "NodeStatus",
        "description": "Status poss√≠veis para um node."
      },
      "synapse__schemas__analytics__DashboardLayout": {
        "properties": {
          "columns": {
            "type": "integer",
            "maximum": 24.0,
            "minimum": 1.0,
            "title": "Columns",
            "default": 12
          },
          "row_height": {
            "type": "integer",
            "maximum": 500.0,
            "minimum": 50.0,
            "title": "Row Height",
            "default": 100
          },
          "margin": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 2,
            "minItems": 2,
            "title": "Margin",
            "default": [
              10,
              10
            ]
          }
        },
        "type": "object",
        "title": "DashboardLayout"
      },
      "synapse__schemas__analytics_dashboard__DashboardLayout": {
        "properties": {
          "columns": {
            "type": "integer",
            "title": "Columns",
            "description": "Number of columns",
            "default": 12
          },
          "rows": {
            "type": "integer",
            "title": "Rows",
            "description": "Number of rows",
            "default": 24
          },
          "breakpoints": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Breakpoints",
            "description": "Responsive breakpoints"
          },
          "margins": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Margins",
            "description": "Layout margins"
          },
          "padding": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Padding",
            "description": "Layout padding"
          }
        },
        "type": "object",
        "title": "DashboardLayout",
        "description": "Schema for dashboard layout"
      },
      "synapse__schemas__contact__ContactListResponse": {
        "properties": {
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/ContactResponse"
            },
            "type": "array",
            "title": "Contacts",
            "description": "List of contacts"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of contacts"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Number of contacts per page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total number of pages"
          }
        },
        "type": "object",
        "required": [
          "contacts",
          "total",
          "page",
          "per_page",
          "pages"
        ],
        "title": "ContactListResponse",
        "description": "Schema for contact list response"
      },
      "synapse__schemas__contact_list__ContactListResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Contact list name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Contact list description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "List type (static/dynamic/smart)"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters",
            "description": "List filters"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Contact list ID"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "ContactListResponse",
        "description": "Schema for contact list response"
      },
      "synapse__schemas__invoice__InvoiceCreate": {
        "properties": {
          "invoice_number": {
            "type": "string",
            "title": "Invoice Number",
            "description": "Unique identifier for the invoice."
          },
          "subscription_id": {
            "type": "string",
            "format": "uuid",
            "title": "Subscription Id",
            "description": "The ID of the associated subscription."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user to whom the invoice belongs."
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date",
            "description": "The date the invoice was issued."
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date",
            "description": "The date the invoice is due."
          },
          "subtotal": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Subtotal",
            "description": "The subtotal amount before taxes and discounts."
          },
          "tax_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Tax Amount",
            "description": "The total tax amount.",
            "default": 0
          },
          "discount_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Discount Amount",
            "description": "The total discount amount.",
            "default": 0
          },
          "total_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Total Amount",
            "description": "The total amount of the invoice."
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus",
            "description": "The current status of the invoice.",
            "default": "pending"
          },
          "billing_period_start": {
            "type": "string",
            "format": "date",
            "title": "Billing Period Start",
            "description": "The start date of the billing period."
          },
          "billing_period_end": {
            "type": "string",
            "format": "date",
            "title": "Billing Period End",
            "description": "The end date of the billing period."
          },
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "The ID of the payment method used."
          },
          "payment_provider_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider Id",
            "description": "The ID of the payment provider."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which this invoice belongs."
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata for the invoice."
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Any notes or comments related to the invoice."
          }
        },
        "type": "object",
        "required": [
          "invoice_number",
          "subscription_id",
          "user_id",
          "invoice_date",
          "due_date",
          "subtotal",
          "total_amount",
          "billing_period_start",
          "billing_period_end",
          "tenant_id"
        ],
        "title": "InvoiceCreate",
        "description": "Schema for creating a new Invoice."
      },
      "synapse__schemas__invoice__InvoiceListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/synapse__schemas__invoice__InvoiceResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of invoices for the current page."
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of invoices."
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number."
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Number of items per page."
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "InvoiceListResponse",
        "description": "Paginated list of Invoices."
      },
      "synapse__schemas__invoice__InvoiceResponse": {
        "properties": {
          "invoice_number": {
            "type": "string",
            "title": "Invoice Number",
            "description": "Unique identifier for the invoice."
          },
          "subscription_id": {
            "type": "string",
            "format": "uuid",
            "title": "Subscription Id",
            "description": "The ID of the associated subscription."
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user to whom the invoice belongs."
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date",
            "description": "The date the invoice was issued."
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date",
            "description": "The date the invoice is due."
          },
          "subtotal": {
            "type": "string",
            "title": "Subtotal",
            "description": "The subtotal amount before taxes and discounts."
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount",
            "description": "The total tax amount.",
            "default": 0
          },
          "discount_amount": {
            "type": "string",
            "title": "Discount Amount",
            "description": "The total discount amount.",
            "default": 0
          },
          "total_amount": {
            "type": "string",
            "title": "Total Amount",
            "description": "The total amount of the invoice."
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus",
            "description": "The current status of the invoice.",
            "default": "pending"
          },
          "billing_period_start": {
            "type": "string",
            "format": "date",
            "title": "Billing Period Start",
            "description": "The start date of the billing period."
          },
          "billing_period_end": {
            "type": "string",
            "format": "date",
            "title": "Billing Period End",
            "description": "The end date of the billing period."
          },
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "The ID of the payment method used."
          },
          "payment_provider_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider Id",
            "description": "The ID of the payment provider."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The tenant to which this invoice belongs."
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata for the invoice."
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Any notes or comments related to the invoice."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the invoice."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the invoice was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name",
            "description": "The name of the user."
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "The email of the user."
          },
          "subscription_plan_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscription Plan Name",
            "description": "The name of the subscription plan."
          },
          "paid_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paid At",
            "description": "Timestamp of when the invoice was paid."
          },
          "payment_transaction_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Transaction Id",
            "description": "The ID of the payment transaction."
          },
          "items": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Items",
            "description": "Line items included in the invoice."
          },
          "is_overdue": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Overdue",
            "description": "Indicates if the invoice is overdue."
          },
          "days_until_due": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Until Due",
            "description": "Number of days until the invoice is due (negative if overdue)."
          }
        },
        "type": "object",
        "required": [
          "invoice_number",
          "subscription_id",
          "user_id",
          "invoice_date",
          "due_date",
          "subtotal",
          "total_amount",
          "billing_period_start",
          "billing_period_end",
          "tenant_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "InvoiceResponse",
        "description": "Response schema for an Invoice, including database-generated fields and related data."
      },
      "synapse__schemas__invoice__InvoiceUpdate": {
        "properties": {
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "New due date."
          },
          "subtotal": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtotal",
            "description": "New subtotal amount."
          },
          "tax_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Amount",
            "description": "New tax amount."
          },
          "discount_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Amount",
            "description": "New discount amount."
          },
          "total_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Amount",
            "description": "New total amount."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "New status for the invoice."
          },
          "payment_method_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Id",
            "description": "New payment method ID."
          },
          "payment_provider_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider Id",
            "description": "New payment provider ID."
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "New metadata."
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "New notes."
          }
        },
        "type": "object",
        "title": "InvoiceUpdate",
        "description": "Schema for updating an existing Invoice. All fields are optional."
      },
      "synapse__schemas__marketplace__MarketplaceStats": {
        "properties": {
          "total_components": {
            "type": "integer",
            "title": "Total Components"
          },
          "total_downloads": {
            "type": "integer",
            "title": "Total Downloads"
          },
          "total_revenue": {
            "type": "number",
            "title": "Total Revenue"
          },
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "active_developers": {
            "type": "integer",
            "title": "Active Developers"
          },
          "categories": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Categories"
          }
        },
        "type": "object",
        "required": [
          "total_components",
          "total_downloads",
          "total_revenue",
          "average_rating",
          "active_developers",
          "categories"
        ],
        "title": "MarketplaceStats"
      },
      "synapse__schemas__node__NodeStatus": {
        "type": "string",
        "enum": [
          "draft",
          "published",
          "deprecated",
          "private"
        ],
        "title": "NodeStatus",
        "description": "Possible statuses for a node."
      },
      "synapse__schemas__node_execution__NodeExecutionResponse": {
        "properties": {
          "node_id": {
            "type": "string",
            "format": "uuid",
            "title": "Node Id",
            "description": "ID do n√≥"
          },
          "workflow_execution_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Execution Id",
            "description": "ID da execu√ß√£o do workflow"
          },
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data",
            "description": "Dados de entrada"
          },
          "output_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Data",
            "description": "Dados de sa√≠da"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status da execu√ß√£o",
            "default": "pending"
          },
          "execution_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Time Ms",
            "description": "Tempo de execu√ß√£o em ms"
          },
          "memory_used_mb": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Used Mb",
            "description": "Mem√≥ria usada em MB"
          },
          "cpu_usage_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Usage Percent",
            "description": "Uso de CPU em %"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Mensagem de erro"
          },
          "error_stack": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Stack",
            "description": "Stack trace do erro"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code",
            "description": "C√≥digo do erro"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID do usu√°rio"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "In√≠cio da execu√ß√£o"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Fim da execu√ß√£o"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Dados adicionais"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID √∫nico da execu√ß√£o"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Data de atualiza√ß√£o"
          },
          "node_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Name",
            "description": "Nome do n√≥"
          },
          "node_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Type",
            "description": "Tipo do n√≥"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name",
            "description": "Nome do usu√°rio"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms",
            "description": "Dura√ß√£o da execu√ß√£o em ms"
          },
          "is_completed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Completed",
            "description": "Execu√ß√£o completada"
          },
          "is_failed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Failed",
            "description": "Execu√ß√£o falhou"
          },
          "is_running": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Running",
            "description": "Execu√ß√£o em andamento"
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "tenant_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "NodeExecutionResponse",
        "description": "Schema para resposta de NodeExecution"
      },
      "synapse__schemas__payment__InvoiceCreate": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Valor total"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Moeda"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Data de vencimento"
          },
          "invoice_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Data",
            "description": "Dados da invoice"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "amount",
          "currency"
        ],
        "title": "InvoiceCreate",
        "description": "Schema para cria√ß√£o de invoice"
      },
      "synapse__schemas__payment__InvoiceListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/synapse__schemas__payment__InvoiceResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de invoices"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de registros"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "pages",
          "size"
        ],
        "title": "InvoiceListResponse",
        "description": "Schema de resposta para listagem de invoices"
      },
      "synapse__schemas__payment__InvoiceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID da invoice"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Valor total"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Moeda"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Data de vencimento"
          },
          "invoice_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Data",
            "description": "Dados da invoice"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "amount",
          "currency",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "InvoiceResponse",
        "description": "Schema de resposta para invoice"
      },
      "synapse__schemas__payment__InvoiceUpdate": {
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount",
            "description": "Valor total"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Moeda"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Data de vencimento"
          },
          "invoice_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Data",
            "description": "Dados da invoice"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Status"
          }
        },
        "type": "object",
        "title": "InvoiceUpdate",
        "description": "Schema para atualiza√ß√£o de invoice"
      },
      "synapse__schemas__payment__PaymentCustomerResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID do customer"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Provider Id",
            "description": "ID do provedor"
          },
          "external_customer_id": {
            "type": "string",
            "title": "External Customer Id",
            "description": "ID externo"
          },
          "customer_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Data",
            "description": "Dados do customer"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se est√° ativo"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "provider_id",
          "external_customer_id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "PaymentCustomerResponse",
        "description": "Schema de resposta para customer de pagamento"
      },
      "synapse__schemas__payment_customer__PaymentCustomerResponse": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "provider_id": {
            "type": "string",
            "format": "uuid",
            "title": "Provider Id",
            "description": "Payment provider ID"
          },
          "external_customer_id": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "External Customer Id",
            "description": "External customer ID from payment provider"
          },
          "customer_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Data",
            "description": "Customer data from payment provider"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the customer is active",
            "default": true
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Optional link to specific user"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the customer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the customer was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp when the customer was last updated"
          },
          "customer_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Email",
            "description": "Get customer email from customer data.",
            "readOnly": true
          },
          "customer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Name",
            "description": "Get customer name from customer data.",
            "readOnly": true
          },
          "customer_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Phone",
            "description": "Get customer phone from customer data.",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "provider_id",
          "external_customer_id",
          "id",
          "created_at",
          "updated_at",
          "customer_email",
          "customer_name",
          "customer_phone"
        ],
        "title": "PaymentCustomerResponse",
        "description": "Response schema for payment customer."
      },
      "synapse__schemas__rbac__UserTenantRoleCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "ID do usu√°rio"
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id",
            "description": "ID do role"
          },
          "granted": {
            "type": "boolean",
            "title": "Granted",
            "description": "Se est√° concedido",
            "default": true
          },
          "conditions": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conditions",
            "description": "Condi√ß√µes"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_id"
        ],
        "title": "UserTenantRoleCreate",
        "description": "Schema para cria√ß√£o de role de usu√°rio no tenant"
      },
      "synapse__schemas__rbac__UserTenantRoleResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "ID do user tenant role"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "ID do usu√°rio"
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id",
            "description": "ID do role"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "ID do tenant"
          },
          "granted": {
            "type": "boolean",
            "title": "Granted",
            "description": "Se est√° concedido"
          },
          "conditions": {
            "additionalProperties": true,
            "type": "object",
            "title": "Conditions",
            "description": "Condi√ß√µes"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "√öltima atualiza√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "role_id",
          "tenant_id",
          "granted",
          "conditions",
          "created_at",
          "updated_at"
        ],
        "title": "UserTenantRoleResponse",
        "description": "Schema de resposta para role de usu√°rio no tenant"
      },
      "synapse__schemas__template__MarketplaceStats": {
        "properties": {
          "total_templates": {
            "type": "integer",
            "title": "Total Templates"
          },
          "total_authors": {
            "type": "integer",
            "title": "Total Authors"
          },
          "total_downloads": {
            "type": "integer",
            "title": "Total Downloads"
          },
          "total_reviews": {
            "type": "integer",
            "title": "Total Reviews"
          },
          "featured_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Featured Templates"
          },
          "trending_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Trending Templates"
          },
          "new_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "New Templates"
          },
          "top_categories": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Categories"
          },
          "top_authors": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Authors"
          }
        },
        "type": "object",
        "required": [
          "total_templates",
          "total_authors",
          "total_downloads",
          "total_reviews",
          "featured_templates",
          "trending_templates",
          "new_templates",
          "top_categories",
          "top_authors"
        ],
        "title": "MarketplaceStats",
        "description": "Estat√≠sticas do marketplace"
      },
      "synapse__schemas__user_tenant_role__UserTenantRoleCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The ID of the tenant."
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id",
            "description": "The ID of the RBAC role assigned."
          },
          "granted_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Granted By",
            "description": "The ID of the user who granted this role."
          },
          "granted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Granted At",
            "description": "Timestamp when the role was granted."
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Timestamp when the role assignment expires."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Indicates if the role assignment is currently active.",
            "default": true
          },
          "conditions": {
            "additionalProperties": true,
            "type": "object",
            "title": "Conditions",
            "description": "Additional conditions for the role assignment."
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "tenant_id",
          "role_id"
        ],
        "title": "UserTenantRoleCreate",
        "description": "Schema for creating a new UserTenantRole assignment."
      },
      "synapse__schemas__user_tenant_role__UserTenantRoleResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "The ID of the user."
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id",
            "description": "The ID of the tenant."
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id",
            "description": "The ID of the RBAC role assigned."
          },
          "granted_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Granted By",
            "description": "The ID of the user who granted this role."
          },
          "granted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Granted At",
            "description": "Timestamp when the role was granted."
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Timestamp when the role assignment expires."
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Indicates if the role assignment is currently active.",
            "default": true
          },
          "conditions": {
            "additionalProperties": true,
            "type": "object",
            "title": "Conditions",
            "description": "Additional conditions for the role assignment."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Unique identifier for the role assignment."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp of when the assignment was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp of the last update."
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "The email of the user."
          },
          "tenant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Name",
            "description": "The name of the tenant."
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name",
            "description": "The name of the assigned role."
          },
          "granted_by_user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Granted By User Email",
            "description": "The email of the user who granted the role."
          },
          "is_expired": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Expired",
            "description": "Indicates if the role assignment has expired."
          },
          "days_until_expiry": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Days Until Expiry",
            "description": "Number of days until the role expires (negative if expired)."
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "tenant_id",
          "role_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "UserTenantRoleResponse",
        "description": "Response schema for a UserTenantRole assignment, including database-generated fields and related data."
      },
      "synapse__schemas__workflow_execution__NodeExecutionResponse": {
        "properties": {
          "node_key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Node Key"
          },
          "node_type": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Node Type"
          },
          "node_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Name"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Execution Order"
          },
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data"
          },
          "config_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Data"
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds",
            "default": 300
          },
          "max_retries": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Max Retries",
            "default": 3
          },
          "retry_delay_ms": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Retry Delay Ms",
            "default": 1000
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "execution_id": {
            "type": "string",
            "title": "Execution Id"
          },
          "workflow_execution_id": {
            "type": "integer",
            "title": "Workflow Execution Id"
          },
          "node_id": {
            "type": "integer",
            "title": "Node Id"
          },
          "status": {
            "$ref": "#/components/schemas/NodeExecutionStatus"
          },
          "output_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Data"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "timeout_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout At"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          },
          "execution_log": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Log"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          },
          "debug_info": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Debug Info"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count"
          },
          "dependents": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependents"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "node_key",
          "node_type",
          "execution_order",
          "id",
          "execution_id",
          "workflow_execution_id",
          "node_id",
          "status",
          "retry_count",
          "created_at",
          "updated_at"
        ],
        "title": "NodeExecutionResponse",
        "description": "Schema de resposta para execu√ß√£o de n√≥"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "üîë **Token JWT** - Obtenha um token atrav√©s do endpoint /auth/login ou /auth/docs-login"
      },
      "HTTPBasic": {
        "type": "http",
        "scheme": "basic",
        "description": "üîê **Login Direto** - Digite seu email no campo 'Username' e sua senha no campo 'Password'"
      }
    }
  },
  "tags": [
    {
      "name": "system",
      "description": "‚öôÔ∏è Status do sistema, sa√∫de e informa√ß√µes gerais"
    },
    {
      "name": "authentication",
      "description": "üîê Autentica√ß√£o completa: login, registro, JWT, usu√°rios e permiss√µes"
    },
    {
      "name": "ai",
      "description": "ü§ñ IA completa: LLM, conversas, feedback e integra√ß√µes multimodais"
    },
    {
      "name": "agents",
      "description": "üéØ Agentes completos: configura√ß√µes, ferramentas, modelos, ACL e m√©tricas"
    },
    {
      "name": "workflows",
      "description": "‚öôÔ∏è Workflows completos: cria√ß√£o, n√≥s, execu√ß√µes e automa√ß√£o"
    },
    {
      "name": "analytics",
      "description": "üìä Analytics completo: m√©tricas, dashboards, usage e insights"
    },
    {
      "name": "data",
      "description": "üíæ Dados completos: arquivos, uploads, vari√°veis, tags e workspace"
    },
    {
      "name": "crm",
      "description": "üìû CRM: Contatos, Listas, Campanhas e Intera√ß√µes"
    },
    {
      "name": "enterprise",
      "description": "üè¢ Enterprise completo: RBAC, features, pagamentos e compliance"
    },
    {
      "name": "marketplace",
      "description": "üõí Marketplace: templates, componentes e transa√ß√µes"
    },
    {
      "name": "admin",
      "description": "üë®‚Äçüíº Administra√ß√£o: migra√ß√µes, configura√ß√µes e gest√£o do sistema"
    },
    {
      "name": "deprecated",
      "description": "‚ö†Ô∏è Endpoints legados mantidos para compatibilidade"
    }
  ],
  "security": [
    {
      "HTTPBearer": []
    },
    {
      "HTTPBasic": []
    }
  ]
}