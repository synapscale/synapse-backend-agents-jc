{
  "openapi": "3.1.0",
  "info": {
    "title": "SynapScale Backend API",
    "description": "\n    üöÄ **SynapScale Backend API** - Plataforma de Automa√ß√£o com IA\n    \n    API robusta e escal√°vel para gerenciamento de workflows, agentes AI e automa√ß√µes.\n    **VERS√ÉO OTIMIZADA COM CONFIGURA√á√ÉO CENTRALIZADA**\n    \n    ## Funcionalidades Principais\n    \n    * **üîê Autentica√ß√£o**: Sistema completo de autentica√ß√£o e autoriza√ß√£o\n    * **‚ö° Workflows**: Cria√ß√£o e execu√ß√£o de workflows de automa√ß√£o\n    * **ü§ñ Agentes AI**: Integra√ß√£o com m√∫ltiplos provedores de IA\n    * **üîó Nodes**: Componentes reutiliz√°veis para workflows\n    * **üí¨ Conversas**: Hist√≥rico e gerenciamento de conversas\n    * **üìÅ Arquivos**: Upload e gerenciamento de arquivos\n    \n    ## Seguran√ßa\n    \n    * Autentica√ß√£o JWT robusta\n    * Valida√ß√£o de dados com Pydantic\n    * Rate limiting implementado\n    * CORS configurado adequadamente\n    \n    ## Sistema Centralizado\n    \n    Esta vers√£o implementa sistema de configura√ß√£o centralizada que elimina\n    todas as duplica√ß√µes e melhora a manutenibilidade.\n    \n\n## Error Handling\n\nThis API implements a comprehensive error handling system that provides consistent, structured error responses across all endpoints. All errors follow a standardized format with detailed error information, request tracking, and proper HTTP status codes.\n\n### Error Response Format\n\nAll error responses follow this structure:\n\n```json\n{\n  \"error\": {\n    \"error_code\": \"string\",\n    \"message\": \"string\",\n    \"details\": {},\n    \"timestamp\": \"2024-01-15T10:30:00Z\",\n    \"path\": \"/api/v1/endpoint\",\n    \"method\": \"POST\",\n    \"request_id\": \"req_123e4567-e89b-12d3-a456-426614174000\"\n  }\n}\n```\n\n### Error Codes\n\nThe API uses specific error codes for different error types:\n\n- `VALIDATION_ERROR`: Input validation failures\n- `AUTHENTICATION_FAILED`: Invalid credentials\n- `INSUFFICIENT_PERMISSIONS`: Access denied\n- `RESOURCE_NOT_FOUND`: Resource doesn't exist\n- `RESOURCE_CONFLICT`: Resource conflicts\n- `RATE_LIMIT_EXCEEDED`: Rate limit exceeded\n- `INTERNAL_SERVER_ERROR`: Unexpected server errors\n- `LLM_PROVIDER_ERROR`: External LLM service errors\n\n### Request Tracking\n\nEvery error response includes a unique `request_id` and is also provided in the `X-Request-ID` header for request tracking and debugging.\n\nFor more details, see the [Error Handling Documentation](docs/api/error_handling.md).\n",
    "version": "2.0.0"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Check Endpoint",
        "description": "Verifica√ß√£o de sa√∫de da aplica√ß√£o com detalhes completos",
        "operationId": "health_check_endpoint_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "root"
        ],
        "summary": "Root",
        "description": "Endpoint raiz da API com informa√ß√µes gerais",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "tags": [
          "info"
        ],
        "summary": "Api Info",
        "description": "Informa√ß√µes detalhadas sobre a API e configura√ß√µes p√∫blicas",
        "operationId": "api_info_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/docs-login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "üîê Login para Documenta√ß√£o Swagger",
        "description": "**Endpoint especial para facilitar o login na documenta√ß√£o Swagger**\n    \n    ## üìù Como usar na documenta√ß√£o:\n    \n    ### ‚úÖ M√©todo Recomendado (2 passos):\n    \n    #### Passo 1: Obter Token\n    1. **Clique no bot√£o \"Authorize\"** üîì no topo da documenta√ß√£o\n    2. **No modal de autoriza√ß√£o**:\n       - Encontre a se√ß√£o **\"HTTPBasic\"**\n       - Digite seu **email** no campo \"Username\"\n       - Digite sua **senha** no campo \"Password\"  \n       - Clique em **\"Authorize\"** nesta se√ß√£o\n    3. **Execute este endpoint** (/auth/docs-login) para obter o token JWT\n    \n    #### Passo 2: Usar Token\n    4. **Copie o `access_token`** da resposta\n    5. **No modal de autoriza√ß√£o**:\n       - Encontre a se√ß√£o **\"HTTPBearer\"**\n       - Cole o token no campo \"Value\"\n       - Clique em **\"Authorize\"** nesta se√ß√£o\n    6. **Pronto!** Agora voc√™ pode usar todos os endpoints\n    \n    ## üîÑ Fluxo Alternativo:\n    \n    Use diretamente o endpoint `/auth/login` com form data se preferir.\n    \n    ## ‚ö†Ô∏è Importante:\n    \n    - Use **HTTPBasic** apenas para este endpoint\n    - Use **HTTPBearer** para todos os outros endpoints\n    - O token expira em 30 minutos",
        "operationId": "docs_login_api_v1_auth_docs_login_post",
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inv√°lidas"
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Registrar novo usu√°rio",
        "description": "Registra um novo usu√°rio na plataforma.\n\n- **email**: Email do usu√°rio (√∫nico)\n- **username**: Nome de usu√°rio (√∫nico)\n- **full_name**: Nome completo\n- **password**: Senha forte\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"email\": \"usuario@exemplo.com\",\n  \"username\": \"joao_silva\",\n  \"full_name\": \"Jo√£o Silva\",\n  \"password\": \"SenhaForte123!\"\n}\n```",
        "operationId": "register_user_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Usu√°rio registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login do usu√°rio",
        "description": "Autentica o usu√°rio e retorna tokens de acesso e refresh.\n\n- **username**: Email do usu√°rio\n- **password**: Senha do usu√°rio\n\nExemplo de corpo (x-www-form-urlencoded):\n```\nusername=usuario@exemplo.com&password=SenhaForte123!\n```",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_v1_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tokens de acesso e refresh gerados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Renovar token de acesso",
        "description": "Renova o token de acesso usando um refresh token v√°lido.\n\n- **refresh_token**: Token de atualiza√ß√£o v√°lido\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n```",
        "operationId": "refresh_token_api_v1_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Novo token de acesso gerado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout do usu√°rio",
        "description": "Faz logout do usu√°rio revogando o refresh token informado.\n\n- **refresh_token**: Token de atualiza√ß√£o a ser revogado\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n```",
        "operationId": "logout_api_v1_auth_logout_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Logout Api V1 Auth Logout Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/logout-all": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout de todos os dispositivos",
        "description": "Faz logout de todos os dispositivos revogando todos os refresh tokens do usu√°rio autenticado.\n\nN√£o requer corpo de requisi√ß√£o.",
        "operationId": "logout_all_api_v1_auth_logout_all_post",
        "responses": {
          "200": {
            "description": "Logout de todos os dispositivos realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Logout All Api V1 Auth Logout All Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Obter informa√ß√µes do usu√°rio autenticado",
        "description": "Retorna as informa√ß√µes do usu√°rio atualmente autenticado.\n\nN√£o requer corpo de requisi√ß√£o.",
        "operationId": "get_current_user_info_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Dados do usu√°rio autenticado retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/verify-email": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Verificar email do usu√°rio",
        "description": "Verifica o email do usu√°rio usando o token de verifica√ß√£o enviado por email.\n\n- **token**: Token de verifica√ß√£o recebido por email\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n```",
        "operationId": "verify_email_api_v1_auth_verify_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Email verificado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Verify Email Api V1 Auth Verify Email Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/resend-verification": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Reenviar email de verifica√ß√£o",
        "description": "Reenvia o email de verifica√ß√£o para o usu√°rio autenticado.\n\nN√£o requer corpo de requisi√ß√£o.",
        "operationId": "resend_verification_email_api_v1_auth_resend_verification_post",
        "responses": {
          "200": {
            "description": "Email de verifica√ß√£o reenviado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Resend Verification Email Api V1 Auth Resend Verification Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Solicitar redefini√ß√£o de senha",
        "description": "Solicita redefini√ß√£o de senha para o email informado.\n\n- **email**: Email do usu√°rio\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"email\": \"usuario@exemplo.com\"\n}\n```",
        "operationId": "forgot_password_api_v1_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Instru√ß√µes de redefini√ß√£o enviadas se o email existir",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Forgot Password Api V1 Auth Forgot Password Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Redefinir senha do usu√°rio",
        "description": "Redefine a senha do usu√°rio usando o token de redefini√ß√£o enviado por email.\n\n- **token**: Token de redefini√ß√£o recebido por email\n- **new_password**: Nova senha\n\nExemplo de corpo de requisi√ß√£o:\n```json\n{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"new_password\": \"NovaSenhaForte123!\"\n}\n```",
        "operationId": "reset_password_api_v1_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Senha redefinida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Reset Password Api V1 Auth Reset Password Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Alterar senha do usu√°rio autenticado",
        "description": "Altera a senha do usu√°rio autenticado.\n\n- **current_password**: Senha atual\n- **new_password**: Nova senha\n\nExemplo de corpo (x-www-form-urlencoded):\n```\ncurrent_password=SenhaAtual123!&new_password=NovaSenhaForte123!\n```",
        "operationId": "change_password_api_v1_auth_change_password_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_change_password_api_v1_auth_change_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Senha alterada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Change Password Api V1 Auth Change Password Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/account": {
      "delete": {
        "tags": [
          "authentication"
        ],
        "summary": "Excluir conta do usu√°rio autenticado",
        "description": "Exclui a conta do usu√°rio autenticado.\n\n- **password**: Senha do usu√°rio para confirma√ß√£o\n\nExemplo de corpo (x-www-form-urlencoded):\n```\npassword=SenhaForte123!\n```",
        "operationId": "delete_account_api_v1_auth_account_delete",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_delete_account_api_v1_auth_account_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Conta exclu√≠da com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Delete Account Api V1 Auth Account Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/test-token": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "üß™ Teste de Token JWT",
        "description": "**Endpoint para testar se a autentica√ß√£o JWT est√° funcionando**\n    \n    Use este endpoint para verificar se:\n    - Seu token JWT est√° v√°lido\n    - A autentica√ß√£o est√° funcionando corretamente\n    - O usu√°rio est√° sendo identificado\n    \n    ## üìù Como usar:\n    1. Fa√ßa login com `/auth/docs-login` ou `/auth/login`\n    2. Configure o token Bearer no bot√£o \"Authorize\"\n    3. Execute este endpoint para testar\n    \n    Se estiver funcionando, voc√™ ver√° suas informa√ß√µes de usu√°rio.",
        "operationId": "test_token_api_v1_auth_test_token_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/auth/test-hybrid-auth": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "üß™ Teste de Autentica√ß√£o H√≠brida",
        "description": "**Endpoint para testar se a autentica√ß√£o h√≠brida est√° funcionando**\n    \n    Este endpoint aceita **AMBOS** os m√©todos de autentica√ß√£o:\n    - **HTTPBearer**: Token JWT no header Authorization\n    - **HTTPBasic**: Email/senha diretamente no modal de autoriza√ß√£o\n    \n    ## üìù Como usar:\n    \n    ### Op√ß√£o 1: HTTPBearer (Token JWT)\n    1. Fa√ßa login com `/auth/login` ou `/auth/docs-login`\n    2. No modal \"Authorize\", se√ß√£o **HTTPBearer**:\n       - Cole o token JWT no campo \"Value\"\n       - Clique \"Authorize\"\n    3. Execute este endpoint\n    \n    ### Op√ß√£o 2: HTTPBasic (Email/Senha)\n    1. No modal \"Authorize\", se√ß√£o **HTTPBasic**:\n       - Digite seu **email** no campo \"Username\"\n       - Digite sua **senha** no campo \"Password\"\n       - Clique \"Authorize\"\n    2. Execute este endpoint\n    \n    ## ‚úÖ Resultado:\n    Se funcionando corretamente, voc√™ ver√° suas informa√ß√µes de usu√°rio\n    independente do m√©todo de autentica√ß√£o usado.",
        "operationId": "test_hybrid_authentication_api_v1_auth_test_hybrid_auth_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/user-variables/": {
      "get": {
        "tags": [
          "user-variables"
        ],
        "summary": "Listar vari√°veis do usu√°rio",
        "description": "Lista todas as vari√°veis do usu√°rio com pagina√ß√£o e filtros.",
        "operationId": "get_user_variables_api_v1_user_variables__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "N√∫mero de registros para pular (pagina√ß√£o)",
              "default": 0,
              "title": "Skip"
            },
            "description": "N√∫mero de registros para pular (pagina√ß√£o)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "N√∫mero m√°ximo de registros por p√°gina (pagina√ß√£o)",
              "default": 100,
              "title": "Limit"
            },
            "description": "N√∫mero m√°ximo de registros por p√°gina (pagina√ß√£o)"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Buscar por chave ou descri√ß√£o da vari√°vel",
              "title": "Search"
            },
            "description": "Buscar por chave ou descri√ß√£o da vari√°vel"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status ativo/inativo",
              "title": "Is Active"
            },
            "description": "Filtrar por status ativo/inativo"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por categoria da vari√°vel",
              "title": "Category"
            },
            "description": "Filtrar por categoria da vari√°vel"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Campo para ordena√ß√£o (ex: key, created_at, updated_at)",
              "default": "key",
              "title": "Sort By"
            },
            "description": "Campo para ordena√ß√£o (ex: key, created_at, updated_at)"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(asc|desc)$",
              "description": "Ordem de classifica√ß√£o: ascendente ou descendente",
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Ordem de classifica√ß√£o: ascendente ou descendente"
          },
          {
            "name": "include_values",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Incluir valores das vari√°veis na resposta",
              "default": false,
              "title": "Include Values"
            },
            "description": "Incluir valores das vari√°veis na resposta"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de vari√°veis do usu√°rio retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVariableList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Variable not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-variables"
        ],
        "summary": "Criar nova vari√°vel do usu√°rio",
        "description": "Cria uma nova vari√°vel para o usu√°rio.",
        "operationId": "create_variable_api_v1_user_variables__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVariableCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vari√°vel criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVariableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Variable not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-variables/debug/masking": {
      "get": {
        "tags": [
          "user-variables"
        ],
        "summary": "Test Masking",
        "description": "Endpoint de teste para verificar o mascaramento de valores",
        "operationId": "test_masking_api_v1_user_variables_debug_masking_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Test Masking Api V1 User Variables Debug Masking Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Variable not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/user-variables/{variable_id}": {
      "get": {
        "tags": [
          "user-variables"
        ],
        "summary": "Get Variable",
        "description": "Obt√©m uma vari√°vel espec√≠fica do usu√°rio por ID.",
        "operationId": "get_variable_api_v1_user_variables__variable_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Variable Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVariableWithValue"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Variable not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-variables/api-keys/{provider}": {
      "post": {
        "tags": [
          "user-variables"
        ],
        "summary": "Create User Api Key",
        "description": "Configura uma API key espec√≠fica do usu√°rio para um provedor LLM\n\nUsa a tabela user_variables existente com categoria 'api_keys'",
        "operationId": "create_user_api_key_api_v1_user_variables_api_keys__provider__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVariableCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create User Api Key Api V1 User Variables Api Keys  Provider  Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Variable not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-variables"
        ],
        "summary": "Delete User Api Key",
        "description": "Remove uma API key espec√≠fica do usu√°rio",
        "operationId": "delete_user_api_key_api_v1_user_variables_api_keys__provider__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete User Api Key Api V1 User Variables Api Keys  Provider  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Variable not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-variables/api-keys": {
      "get": {
        "tags": [
          "user-variables"
        ],
        "summary": "List User Api Keys",
        "description": "Lista todas as API keys configuradas pelo usu√°rio\n\nRetorna valores completos sem mascaramento",
        "operationId": "list_user_api_keys_api_v1_user_variables_api_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response List User Api Keys Api V1 User Variables Api Keys Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Variable not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/user-variables/api-keys/providers": {
      "get": {
        "tags": [
          "user-variables"
        ],
        "summary": "Get Supported Providers",
        "description": "Lista todos os provedores LLM suportados",
        "operationId": "get_supported_providers_api_v1_user_variables_api_keys_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get Supported Providers Api V1 User Variables Api Keys Providers Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Variable not found"
          }
        }
      }
    },
    "/api/v1/workflows/": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Listar workflows",
        "description": "Lista workflows do usu√°rio com filtros e pagina√ß√£o.\n\nRetorna workflows pr√≥prios ou p√∫blicos dependendo dos filtros,\ncom suporte a busca textual e pagina√ß√£o.\n\nArgs:\n    page: N√∫mero da p√°gina (1-based)\n    size: N√∫mero de itens por p√°gina\n    category: Categoria espec√≠fica para filtrar\n    is_public: Se True, mostra apenas workflows p√∫blicos\n    search: Termo para buscar em nome e descri√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    WorkflowListResponse: Lista paginada de workflows\n    \nRaises:\n    HTTPException: 400 se par√¢metros inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_workflows_api_v1_workflows__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Itens por p√°gina"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por categoria",
              "title": "Category"
            },
            "description": "Filtrar por categoria"
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar workflows p√∫blicos",
              "title": "Is Public"
            },
            "description": "Filtrar workflows p√∫blicos"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Termo de busca",
              "title": "Search"
            },
            "description": "Termo de busca"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Workflow not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Criar workflow",
        "description": "Cria um novo workflow para o usu√°rio.\n\nCria um workflow com os dados fornecidos e associa\nao usu√°rio autenticado.\n\nArgs:\n    workflow_data: Dados do workflow a ser criado\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    WorkflowResponse: Workflow criado\n    \nRaises:\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_workflow_api_v1_workflows__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Workflow not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}": {
      "get": {
        "tags": [
          "workflows"
        ],
        "summary": "Obter workflow",
        "description": "Obt√©m um workflow espec√≠fico por ID.\n\nRetorna dados completos do workflow se o usu√°rio\ntiver permiss√£o de acesso.\n\nArgs:\n    workflow_id: ID √∫nico do workflow\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    WorkflowResponse: Dados do workflow\n    \nRaises:\n    HTTPException: 404 se workflow n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_workflow_api_v1_workflows__workflow_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Workflow not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflows"
        ],
        "summary": "Atualizar workflow",
        "description": "Atualiza um workflow existente do usu√°rio.\n\nPermite modificar dados do workflow se o usu√°rio\nfor o propriet√°rio.\n\nArgs:\n    workflow_id: ID √∫nico do workflow\n    workflow_data: Dados atualizados do workflow\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    WorkflowResponse: Workflow atualizado\n    \nRaises:\n    HTTPException: 404 se workflow n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "update_workflow_api_v1_workflows__workflow_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Workflow not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflows"
        ],
        "summary": "Deletar workflow",
        "description": "Remove um workflow do usu√°rio.\n\nDeleta permanentemente o workflow se o usu√°rio\nfor o propriet√°rio.\n\nArgs:\n    workflow_id: ID √∫nico do workflow\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se workflow n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "delete_workflow_api_v1_workflows__workflow_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Workflow Api V1 Workflows  Workflow Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Workflow not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}/execute": {
      "post": {
        "tags": [
          "workflows",
          "execution"
        ],
        "summary": "Executar workflow",
        "description": "Executa um workflow com dados de entrada.\n\nCria uma nova execu√ß√£o do workflow com os dados\nfornecidos e inicia o processamento.\n\nArgs:\n    workflow_id: ID √∫nico do workflow\n    execution_data: Dados de entrada para execu√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    WorkflowExecutionResponse: Detalhes da execu√ß√£o criada\n    \nRaises:\n    HTTPException: 404 se workflow n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de execu√ß√£o\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "execute_workflow_api_v1_workflows__workflow_id__execute_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowExecutionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Workflow not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}/executions": {
      "get": {
        "tags": [
          "workflows",
          "execution"
        ],
        "summary": "Listar execu√ß√µes",
        "description": "Lista execu√ß√µes de um workflow espec√≠fico.\n\nRetorna hist√≥rico de execu√ß√µes do workflow\ncom pagina√ß√£o e detalhes de status.\n\nArgs:\n    workflow_id: ID √∫nico do workflow\n    page: N√∫mero da p√°gina\n    size: Itens por p√°gina\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    ExecutionListResponse: Lista paginada de execu√ß√µes\n    \nRaises:\n    HTTPException: 404 se workflow n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_workflow_executions_api_v1_workflows__workflow_id__executions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Itens por p√°gina"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Workflow not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workflows/{workflow_id}/duplicate": {
      "post": {
        "tags": [
          "workflows"
        ],
        "summary": "Duplicar workflow",
        "description": "Cria uma c√≥pia de um workflow existente.\n\nDuplica um workflow p√∫blico ou pr√≥prio, criando\numa nova inst√¢ncia para o usu√°rio.\n\nArgs:\n    workflow_id: ID √∫nico do workflow a ser duplicado\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    WorkflowResponse: Workflow duplicado\n    \nRaises:\n    HTTPException: 404 se workflow n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "duplicate_workflow_api_v1_workflows__workflow_id__duplicate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Workflow not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/": {
      "post": {
        "tags": [
          "executions"
        ],
        "summary": "Criar execu√ß√£o de workflow",
        "description": "Cria uma nova execu√ß√£o de workflow com configura√ß√µes personalizadas.\n\nPermite criar e opcionalmente iniciar uma execu√ß√£o de workflow\ncom dados de entrada, vari√°veis e prioridade espec√≠ficos.\n\nArgs:\n    execution_data: Dados da execu√ß√£o a ser criada\n    start_immediately: Se deve iniciar a execu√ß√£o imediatamente\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    ExecutionResponse: Dados da execu√ß√£o criada\n    \nRaises:\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_execution_api_v1_executions__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "start_immediately",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Iniciar execu√ß√£o imediatamente",
              "default": true,
              "title": "Start Immediately"
            },
            "description": "Iniciar execu√ß√£o imediatamente"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "executions"
        ],
        "summary": "Listar execu√ß√µes do usu√°rio",
        "description": "Lista execu√ß√µes do usu√°rio com filtros avan√ßados e pagina√ß√£o.\n\nPermite filtrar por status, workflows, datas, tags e aplicar\nordena√ß√£o e pagina√ß√£o para navega√ß√£o eficiente.\n\nArgs:\n    status: Lista de status para filtrar (opcional)\n    workflow_ids: IDs de workflows para filtrar (opcional)\n    created_after: Data m√≠nima de cria√ß√£o (opcional)\n    created_before: Data m√°xima de cria√ß√£o (opcional)\n    tags: Tags para filtrar (opcional)\n    limit: Limite de resultados por p√°gina\n    offset: Offset para pagina√ß√£o\n    order_by: Campo para ordena√ß√£o\n    order_direction: Dire√ß√£o da ordena√ß√£o (asc/desc)\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    List[ExecutionResponse]: Lista de execu√ß√µes\n    \nRaises:\n    HTTPException: 400 se filtros inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_executions_api_v1_executions__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          },
          {
            "name": "workflow_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por IDs de workflow",
              "title": "Workflow Ids"
            },
            "description": "Filtrar por IDs de workflow"
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Criado ap√≥s esta data",
              "title": "Created After"
            },
            "description": "Criado ap√≥s esta data"
          },
          {
            "name": "created_before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Criado antes desta data",
              "title": "Created Before"
            },
            "description": "Criado antes desta data"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por tags",
              "title": "Tags"
            },
            "description": "Filtrar por tags"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 50,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(created_at|updated_at|started_at|completed_at|priority)$",
              "description": "Campo para ordena√ß√£o",
              "default": "created_at",
              "title": "Order By"
            },
            "description": "Campo para ordena√ß√£o"
          },
          {
            "name": "order_direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(asc|desc)$",
              "description": "Dire√ß√£o da ordena√ß√£o",
              "default": "desc",
              "title": "Order Direction"
            },
            "description": "Dire√ß√£o da ordena√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExecutionResponse"
                  },
                  "title": "Response List Executions Api V1 Executions  Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/stats": {
      "get": {
        "tags": [
          "executions"
        ],
        "summary": "Estat√≠sticas de execu√ß√£o",
        "description": "Obt√©m estat√≠sticas completas de execu√ß√£o do usu√°rio.\n\nRetorna m√©tricas agregadas incluindo contadores, taxas de sucesso,\ndura√ß√µes m√©dias e tend√™ncias de performance.\n\nArgs:\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    ExecutionStats: Estat√≠sticas de execu√ß√£o\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_execution_statistics_api_v1_executions_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/executions/{execution_id}": {
      "get": {
        "tags": [
          "executions"
        ],
        "summary": "Obter execu√ß√£o espec√≠fica",
        "description": "Obt√©m detalhes completos de uma execu√ß√£o espec√≠fica.\n\nRetorna informa√ß√µes detalhadas sobre status, progresso,\ndados de entrada/sa√≠da e m√©tricas da execu√ß√£o.\n\nArgs:\n    execution_id: ID √∫nico da execu√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    ExecutionResponse: Dados completos da execu√ß√£o\n    \nRaises:\n    HTTPException: 404 se execu√ß√£o n√£o encontrada\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_execution_api_v1_executions__execution_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{execution_id}/control": {
      "post": {
        "tags": [
          "executions-control"
        ],
        "summary": "Controlar execu√ß√£o",
        "description": "Controla uma execu√ß√£o atrav√©s de a√ß√µes espec√≠ficas.\n\nPermite executar a√ß√µes de controle como iniciar, pausar, resumir,\ncancelar ou reiniciar uma execu√ß√£o espec√≠fica.\n\nArgs:\n    execution_id: ID √∫nico da execu√ß√£o\n    control: Configura√ß√£o da a√ß√£o de controle\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    Dict[str, Any]: Resultado da a√ß√£o de controle\n    \nRaises:\n    HTTPException: 404 se execu√ß√£o n√£o encontrada\n    HTTPException: 400 se a√ß√£o inv√°lida ou n√£o permitida\n    HTTPException: 403 se sem permiss√£o de controle\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "control_execution_api_v1_executions__execution_id__control_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionControl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Control Execution Api V1 Executions  Execution Id  Control Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/batch": {
      "post": {
        "tags": [
          "executions-control"
        ],
        "summary": "Controle em lote de execu√ß√µes",
        "description": "Executa a√ß√µes de controle em m√∫ltiplas execu√ß√µes simultaneamente.\n\nPermite aplicar a mesma a√ß√£o (cancelar, pausar, etc.) em\nv√°rias execu√ß√µes de uma s√≥ vez para opera√ß√µes em lote.\n\nArgs:\n    batch: Configura√ß√£o da opera√ß√£o em lote\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    Dict[str, Any]: Resultado das opera√ß√µes em lote\n    \nRaises:\n    HTTPException: 400 se configura√ß√£o inv√°lida\n    HTTPException: 403 se sem permiss√£o para algumas execu√ß√µes\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "batch_control_executions_api_v1_executions_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionBatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Batch Control Executions Api V1 Executions Batch Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/executions/{execution_id}/nodes": {
      "get": {
        "tags": [
          "executions",
          "nodes"
        ],
        "summary": "Obter n√≥s da execu√ß√£o",
        "description": "Obt√©m informa√ß√µes de execu√ß√£o de todos os n√≥s de uma execu√ß√£o.\n\nRetorna status, dados de entrada/sa√≠da, dura√ß√£o e\nm√©tricas para cada n√≥ executado no workflow.\n\nArgs:\n    execution_id: ID √∫nico da execu√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    List[NodeExecutionResponse]: Lista de execu√ß√µes de n√≥s\n    \nRaises:\n    HTTPException: 404 se execu√ß√£o n√£o encontrada\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_execution_nodes_api_v1_executions__execution_id__nodes_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodeExecutionResponse"
                  },
                  "title": "Response Get Execution Nodes Api V1 Executions  Execution Id  Nodes Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{execution_id}/logs": {
      "get": {
        "tags": [
          "executions-monitoring"
        ],
        "summary": "Obter logs da execu√ß√£o",
        "description": "Obt√©m logs completos de uma execu√ß√£o e seus n√≥s.\n\nRetorna logs estruturados da execu√ß√£o principal e\nopcionalmente de todos os n√≥s executados.\n\nArgs:\n    execution_id: ID √∫nico da execu√ß√£o\n    include_nodes: Se deve incluir logs dos n√≥s individuais\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    Dict[str, Any]: Logs estruturados da execu√ß√£o\n    \nRaises:\n    HTTPException: 404 se execu√ß√£o n√£o encontrada\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_execution_logs_api_v1_executions__execution_id__logs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          },
          {
            "name": "include_nodes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Incluir logs dos n√≥s",
              "default": true,
              "title": "Include Nodes"
            },
            "description": "Incluir logs dos n√≥s"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Execution Logs Api V1 Executions  Execution Id  Logs Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/{execution_id}/metrics": {
      "get": {
        "tags": [
          "executions"
        ],
        "summary": "Obter m√©tricas da execu√ß√£o",
        "description": "Obt√©m m√©tricas detalhadas de performance de uma execu√ß√£o.\n\nRetorna m√©tricas de tempo, mem√≥ria, CPU e outras m√©tricas\nde performance coletadas durante a execu√ß√£o.\n\nArgs:\n    execution_id: ID √∫nico da execu√ß√£o\n    metric_types: Tipos espec√≠ficos de m√©tricas para filtrar\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    Dict[str, Any]: M√©tricas de performance da execu√ß√£o\n    \nRaises:\n    HTTPException: 404 se execu√ß√£o n√£o encontrada\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_execution_metrics_api_v1_executions__execution_id__metrics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          },
          {
            "name": "metric_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por tipos de m√©trica",
              "title": "Metric Types"
            },
            "description": "Filtrar por tipos de m√©trica"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Execution Metrics Api V1 Executions  Execution Id  Metrics Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/validate-workflow": {
      "post": {
        "tags": [
          "executions"
        ],
        "summary": "Validar workflow para execu√ß√£o",
        "description": "Valida se um workflow est√° pronto para execu√ß√£o.\n\nVerifica configura√ß√µes, depend√™ncias, vari√°veis obrigat√≥rias\ne recursos necess√°rios antes de iniciar uma execu√ß√£o.\n\nArgs:\n    workflow_id: ID do workflow a ser validado\n    variables: Vari√°veis personalizadas para valida√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    WorkflowValidation: Resultado da valida√ß√£o com detalhes\n    \nRaises:\n    HTTPException: 404 se workflow n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "validate_workflow_for_execution_api_v1_executions_validate_workflow_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workflow Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Variables"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowValidation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/executions/queue/status": {
      "get": {
        "tags": [
          "executions-monitoring"
        ],
        "summary": "Status da fila de execu√ß√£o",
        "description": "Obt√©m status detalhado da fila de execu√ß√£o do usu√°rio.\n\nRetorna informa√ß√µes sobre execu√ß√µes pendentes, em andamento,\nposi√ß√£o na fila e estimativas de tempo.\n\nArgs:\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, Any]: Status completo da fila de execu√ß√£o\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_queue_status_api_v1_executions_queue_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Queue Status Api V1 Executions Queue Status Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/executions/admin/engine-status": {
      "get": {
        "tags": [
          "executions",
          "admin"
        ],
        "summary": "Status do engine de execu√ß√£o",
        "description": "Obt√©m status detalhado do engine de execu√ß√£o (admin only).\n\nRetorna informa√ß√µes sobre performance, sa√∫de, recursos\ne estat√≠sticas operacionais do engine.\n\nArgs:\n    current_user: Usu√°rio autenticado (deve ser admin)\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    Dict[str, Any]: Status completo do engine\n    \nRaises:\n    HTTPException: 403 se n√£o for admin\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_engine_status_api_v1_executions_admin_engine_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Engine Status Api V1 Executions Admin Engine Status Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/executions/admin/engine/start": {
      "post": {
        "tags": [
          "executions",
          "admin"
        ],
        "summary": "Iniciar engine de execu√ß√£o",
        "description": "Inicia o engine de execu√ß√£o de workflows (admin only).\n\nAtiva o engine para processar execu√ß√µes pendentes\ne aceitar novas solicita√ß√µes de execu√ß√£o.\n\nArgs:\n    current_user: Usu√°rio autenticado (deve ser admin)\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    Dict[str, Any]: Resultado da opera√ß√£o de inicializa√ß√£o\n    \nRaises:\n    HTTPException: 403 se n√£o for admin\n    HTTPException: 400 se engine j√° estiver rodando\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "start_engine_api_v1_executions_admin_engine_start_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Start Engine Api V1 Executions Admin Engine Start Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/executions/admin/engine/stop": {
      "post": {
        "tags": [
          "executions",
          "admin"
        ],
        "summary": "Parar engine de execu√ß√£o",
        "description": "Para o engine de execu√ß√£o de workflows (admin only).\n\nInterrompe o processamento de novas execu√ß√µes e\nfinaliza execu√ß√µes em andamento de forma segura.\n\nArgs:\n    current_user: Usu√°rio autenticado (deve ser admin)\n    service: Servi√ßo de execu√ß√£o\n    \nReturns:\n    Dict[str, Any]: Resultado da opera√ß√£o de parada\n    \nRaises:\n    HTTPException: 403 se n√£o for admin\n    HTTPException: 400 se engine j√° estiver parado\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "stop_engine_api_v1_executions_admin_engine_stop_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Stop Engine Api V1 Executions Admin Engine Stop Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Execution not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/templates/": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Criar template",
        "description": "Cria um novo template de workflow no marketplace.\n\nPermite aos usu√°rios criar templates personalizados a partir\nde workflows existentes ou do zero, com metadados completos.\n\nArgs:\n    template_data: Dados do template a ser criado\n    workflow_id: ID do workflow base (opcional)\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    TemplateResponse: Template criado com detalhes\n    \nRaises:\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 403 se sem permiss√£o\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_template_api_v1_templates__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID do workflow base",
              "title": "Workflow Id"
            },
            "description": "ID do workflow base"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Buscar templates",
        "description": "Busca templates no marketplace com filtros avan√ßados.\n\nPermite busca textual combinada com m√∫ltiplos filtros\nincluindo categoria, pre√ßo, rating, complexidade e mais.\n\nArgs:\n    search: Termo de busca em nome e descri√ß√£o\n    category: Lista de categorias para filtrar\n    tags: Lista de tags para filtrar\n    license_type: Tipos de licen√ßa (free, premium, etc.)\n    price_min: Pre√ßo m√≠nimo para filtrar\n    price_max: Pre√ßo m√°ximo para filtrar\n    rating_min: Rating m√≠nimo (0-5)\n    complexity_min: Complexidade m√≠nima (1-5)\n    complexity_max: Complexidade m√°xima (1-5)\n    is_featured: Filtrar apenas templates em destaque\n    is_verified: Filtrar apenas templates verificados\n    author_id: ID do autor espec√≠fico\n    industries: Lista de ind√∫strias\n    use_cases: Lista de casos de uso\n    page: N√∫mero da p√°gina\n    per_page: Itens por p√°gina\n    sort_by: Campo para ordena√ß√£o\n    sort_order: Ordem de ordena√ß√£o (asc/desc)\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado (opcional)\n    \nReturns:\n    TemplateListResponse: Lista paginada de templates\n    \nRaises:\n    HTTPException: 400 se filtros inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "search_templates_api_v1_templates__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Termo de busca",
              "title": "Search"
            },
            "description": "Termo de busca"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Categorias",
              "title": "Category"
            },
            "description": "Categorias"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tags",
              "title": "Tags"
            },
            "description": "Tags"
          },
          {
            "name": "license_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tipos de licen√ßa",
              "title": "License Type"
            },
            "description": "Tipos de licen√ßa"
          },
          {
            "name": "price_min",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pre√ßo m√≠nimo",
              "title": "Price Min"
            },
            "description": "Pre√ßo m√≠nimo"
          },
          {
            "name": "price_max",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pre√ßo m√°ximo",
              "title": "Price Max"
            },
            "description": "Pre√ßo m√°ximo"
          },
          {
            "name": "rating_min",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 5,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Rating m√≠nimo",
              "title": "Rating Min"
            },
            "description": "Rating m√≠nimo"
          },
          {
            "name": "complexity_min",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 5,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Complexidade m√≠nima",
              "title": "Complexity Min"
            },
            "description": "Complexidade m√≠nima"
          },
          {
            "name": "complexity_max",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 5,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Complexidade m√°xima",
              "title": "Complexity Max"
            },
            "description": "Complexidade m√°xima"
          },
          {
            "name": "is_featured",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Apenas em destaque",
              "title": "Is Featured"
            },
            "description": "Apenas em destaque"
          },
          {
            "name": "is_verified",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Apenas verificados",
              "title": "Is Verified"
            },
            "description": "Apenas verificados"
          },
          {
            "name": "author_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID do autor",
              "title": "Author Id"
            },
            "description": "ID do autor"
          },
          {
            "name": "industries",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Ind√∫strias",
              "title": "Industries"
            },
            "description": "Ind√∫strias"
          },
          {
            "name": "use_cases",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Casos de uso",
              "title": "Use Cases"
            },
            "description": "Casos de uso"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "P√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "P√°gina"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 20,
              "title": "Per Page"
            },
            "description": "Itens por p√°gina"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Campo de ordena√ß√£o",
              "default": "created_at",
              "title": "Sort By"
            },
            "description": "Campo de ordena√ß√£o"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(asc|desc)$",
              "description": "Ordem",
              "default": "desc",
              "title": "Sort Order"
            },
            "description": "Ordem"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/stats": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Estat√≠sticas de templates",
        "description": "Obt√©m estat√≠sticas gerais de templates do marketplace.\n\nRetorna m√©tricas agregadas incluindo totais, m√©dias,\ntemplates populares e estat√≠sticas de engajamento.\n\nArgs:\n    db: Sess√£o do banco de dados\n    \nReturns:\n    TemplateStats: Estat√≠sticas completas do marketplace\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_template_stats_api_v1_templates_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          }
        }
      }
    },
    "/api/v1/templates/marketplace": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Estat√≠sticas do marketplace",
        "description": "Obt√©m estat√≠sticas espec√≠ficas do marketplace de templates.\n\nRetorna dados curados para exibi√ß√£o no marketplace\nincluindo destaques, tend√™ncias e rankings.\n\nArgs:\n    db: Sess√£o do banco de dados\n    \nReturns:\n    MarketplaceStats: Estat√≠sticas do marketplace\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_marketplace_stats_api_v1_templates_marketplace_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__template__MarketplaceStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          }
        }
      }
    },
    "/api/v1/templates/my-stats": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Minhas estat√≠sticas",
        "description": "Obt√©m estat√≠sticas de templates do usu√°rio autenticado.\n\nRetorna m√©tricas pessoais incluindo templates criados,\ndownloads, reviews e performance.\n\nArgs:\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    UserTemplateStats: Estat√≠sticas pessoais do usu√°rio\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_user_template_stats_api_v1_templates_my_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTemplateStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/templates/{template_id}": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Obter template",
        "description": "Obt√©m detalhes completos de um template espec√≠fico.\n\nRetorna informa√ß√µes detalhadas incluindo metadados,\nreviews, estat√≠sticas e dados de compatibilidade.\n\nArgs:\n    template_id: ID √∫nico do template\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado (opcional)\n    \nReturns:\n    TemplateDetailResponse: Detalhes completos do template\n    \nRaises:\n    HTTPException: 404 se template n√£o encontrado\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_template_api_v1_templates__template_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "templates"
        ],
        "summary": "Atualizar template",
        "description": "Atualiza um template existente do usu√°rio.\n\nPermite modificar metadados, descri√ß√£o, configura√ß√µes\ne outros dados de templates pr√≥prios.\n\nArgs:\n    template_id: ID √∫nico do template\n    template_data: Dados atualizados do template\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    TemplateResponse: Template atualizado\n    \nRaises:\n    HTTPException: 404 se template n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "update_template_api_v1_templates__template_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "templates"
        ],
        "summary": "Deletar template",
        "operationId": "delete_template_api_v1_templates__template_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/{template_id}/publish": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Publicar template",
        "description": "Publica um template no marketplace p√∫blico.\n\nSubmete o template para revis√£o e publica√ß√£o,\ntornando-o dispon√≠vel para outros usu√°rios.\n\nArgs:\n    template_id: ID √∫nico do template\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, Any]: Status da publica√ß√£o\n    \nRaises:\n    HTTPException: 404 se template n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 400 se template inv√°lido para publica√ß√£o\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "publish_template_api_v1_templates__template_id__publish_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Publish Template Api V1 Templates  Template Id  Publish Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/{template_id}/download": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Download de template",
        "description": "Registra e processa download de um template.\n\nSuporta diferentes tipos de download incluindo\nvers√£o completa, preview e demo.\n\nArgs:\n    template_id: ID √∫nico do template\n    download_type: Tipo de download (full, preview, demo)\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, Any]: Informa√ß√µes do download\n    \nRaises:\n    HTTPException: 404 se template n√£o encontrado\n    HTTPException: 403 se sem permiss√£o para download\n    HTTPException: 400 se tipo de download inv√°lido\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "download_template_api_v1_templates__template_id__download_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          },
          {
            "name": "download_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(full|preview|demo)$",
              "description": "Tipo de download",
              "default": "full",
              "title": "Download Type"
            },
            "description": "Tipo de download"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Download Template Api V1 Templates  Template Id  Download Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/install": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Instalar template",
        "description": "Instala um template como workflow do usu√°rio.\n\nCria um novo workflow baseado no template,\naplicando configura√ß√µes e customiza√ß√µes.\n\nArgs:\n    install_data: Dados de instala√ß√£o do template\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    TemplateInstallResponse: Resultado da instala√ß√£o\n    \nRaises:\n    HTTPException: 404 se template n√£o encontrado\n    HTTPException: 400 se dados de instala√ß√£o inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "install_template_api_v1_templates_install_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateInstall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateInstallResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/templates/favorites": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Adicionar favorito",
        "description": "Adiciona um template aos favoritos do usu√°rio.\n\nPermite marcar templates como favoritos para\nacesso r√°pido e organiza√ß√£o pessoal.\n\nArgs:\n    favorite_data: Dados do favorito\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    FavoriteResponse: Favorito criado\n    \nRaises:\n    HTTPException: 404 se template n√£o encontrado\n    HTTPException: 409 se j√° est√° nos favoritos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "add_to_favorites_api_v1_templates_favorites_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoriteCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/templates/favorites/my": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Meus favoritos",
        "description": "Obt√©m lista de templates favoritos do usu√°rio.\n\nRetorna templates marcados como favoritos\ncom pagina√ß√£o e informa√ß√µes detalhadas.\n\nArgs:\n    page: N√∫mero da p√°gina\n    per_page: Itens por p√°gina\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    List[FavoriteResponse]: Lista de favoritos\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_my_favorites_api_v1_templates_favorites_my_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "P√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "P√°gina"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 20,
              "title": "Per Page"
            },
            "description": "Itens por p√°gina"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FavoriteResponse"
                  },
                  "title": "Response Get My Favorites Api V1 Templates Favorites My Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/{template_id}/reviews": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Criar review",
        "description": "Cria uma avalia√ß√£o para um template.\n\nPermite usu√°rios avaliarem templates com nota\ne coment√°rios detalhados.\n\nArgs:\n    template_id: ID √∫nico do template\n    review_data: Dados da avalia√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, Any]: Resultado da cria√ß√£o da review\n    \nRaises:\n    HTTPException: 404 se template n√£o encontrado\n    HTTPException: 409 se usu√°rio j√° avaliou\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_review_api_v1_templates__template_id__reviews_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Review Api V1 Templates  Template Id  Reviews Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Obter reviews",
        "description": "Obt√©m avalia√ß√µes de um template espec√≠fico.\n\nRetorna lista paginada de reviews com detalhes\ndos usu√°rios e estat√≠sticas agregadas.\n\nArgs:\n    template_id: ID √∫nico do template\n    page: N√∫mero da p√°gina\n    per_page: Itens por p√°gina\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[ReviewResponse]: Lista de avalia√ß√µes\n    \nRaises:\n    HTTPException: 404 se template n√£o encontrado\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_template_reviews_api_v1_templates__template_id__reviews_get",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "P√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "P√°gina"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 20,
              "title": "Per Page"
            },
            "description": "Itens por p√°gina"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponse"
                  },
                  "title": "Response Get Template Reviews Api V1 Templates  Template Id  Reviews Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/collections": {
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Criar cole√ß√£o",
        "description": "Cria uma nova cole√ß√£o de templates.\n\nPermite organizar templates em cole√ß√µes tem√°ticas\npara melhor curadoria e descoberta.\n\nArgs:\n    collection_data: Dados da cole√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, Any]: Resultado da cria√ß√£o da cole√ß√£o\n    \nRaises:\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_collection_api_v1_templates_collections_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Collection Api V1 Templates Collections Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Listar cole√ß√µes",
        "description": "Obt√©m lista de cole√ß√µes p√∫blicas de templates.\n\nRetorna cole√ß√µes curadas dispon√≠veis no marketplace\ncom informa√ß√µes de templates inclu√≠dos.\n\nArgs:\n    page: N√∫mero da p√°gina\n    per_page: Itens por p√°gina\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[CollectionResponse]: Lista de cole√ß√µes\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_collections_api_v1_templates_collections_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "P√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "P√°gina"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 20,
              "title": "Per Page"
            },
            "description": "Itens por p√°gina"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionResponse"
                  },
                  "title": "Response Get Collections Api V1 Templates Collections Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Listar nodes",
        "description": "Lista nodes dispon√≠veis com filtros e pagina√ß√£o.\n\nRetorna nodes pr√≥prios ou p√∫blicos dependendo dos filtros,\nordenados por popularidade (downloads).\n\nArgs:\n    page: N√∫mero da p√°gina (1-based)\n    size: N√∫mero de itens por p√°gina\n    type: Tipo espec√≠fico de node para filtrar\n    category: Categoria espec√≠fica para filtrar\n    is_public: Se True, mostra apenas nodes p√∫blicos\n    search: Termo para buscar em nome e descri√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    NodeListResponse: Lista paginada de nodes\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_nodes_api_v1_nodes__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Itens por p√°gina"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por tipo de node",
              "title": "Type"
            },
            "description": "Filtrar por tipo de node"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por categoria",
              "title": "Category"
            },
            "description": "Filtrar por categoria"
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar nodes p√∫blicos",
              "title": "Is Public"
            },
            "description": "Filtrar nodes p√∫blicos"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Termo de busca",
              "title": "Search"
            },
            "description": "Termo de busca"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Node not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "nodes"
        ],
        "summary": "Criar node",
        "description": "Cria um novo node personalizado.\n\nPermite criar nodes customizados com l√≥gica espec√≠fica\npara uso em workflows.\n\nArgs:\n    node_data: Dados do node a ser criado\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    NodeResponse: Node criado\n    \nRaises:\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_node_api_v1_nodes__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Node not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/{node_id}": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Obter node",
        "description": "Obt√©m um node espec√≠fico por ID.\n\nRetorna dados completos do node se o usu√°rio\ntiver permiss√£o de acesso.\n\nArgs:\n    node_id: ID √∫nico do node\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    NodeResponse: Dados do node\n    \nRaises:\n    HTTPException: 404 se node n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_node_api_v1_nodes__node_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Node not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "nodes"
        ],
        "summary": "Atualizar node",
        "description": "Atualiza um node existente do usu√°rio.\n\nPermite modificar propriedades do node se o usu√°rio\nfor o propriet√°rio.\n\nArgs:\n    node_id: ID √∫nico do node\n    node_data: Dados atualizados do node\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    NodeResponse: Node atualizado\n    \nRaises:\n    HTTPException: 404 se node n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "update_node_api_v1_nodes__node_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Node not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "nodes"
        ],
        "summary": "Deletar node",
        "description": "Remove um node do usu√°rio.\n\nDeleta permanentemente o node se o usu√°rio\nfor o propriet√°rio.\n\nArgs:\n    node_id: ID √∫nico do node\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se node n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "delete_node_api_v1_nodes__node_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Node Api V1 Nodes  Node Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Node not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/{node_id}/download": {
      "post": {
        "tags": [
          "nodes-download"
        ],
        "summary": "Download/instalar node",
        "description": "Faz download/instala√ß√£o de um node p√∫blico.\n\nRegistra download e incrementa contador de popularidade\npara nodes p√∫blicos dispon√≠veis.\n\nArgs:\n    node_id: ID √∫nico do node\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, Any]: Informa√ß√µes do download\n    \nRaises:\n    HTTPException: 404 se node n√£o encontrado ou n√£o p√∫blico\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "download_node_api_v1_nodes__node_id__download_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Download Node Api V1 Nodes  Node Id  Download Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Node not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/{node_id}/rate": {
      "post": {
        "tags": [
          "nodes-rating"
        ],
        "summary": "Avaliar node",
        "description": "Avalia um node p√∫blico com nota de 1 a 5.\n\nPermite usu√°rios avaliarem nodes p√∫blicos para\nmelhorar a descoberta e qualidade.\n\nArgs:\n    node_id: ID √∫nico do node\n    rating: Nota de 1 a 5\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, Any]: Resultado da avalia√ß√£o\n    \nRaises:\n    HTTPException: 404 se node n√£o encontrado ou n√£o p√∫blico\n    HTTPException: 400 se rating inv√°lido\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "rate_node_api_v1_nodes__node_id__rate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Node Id"
            }
          },
          {
            "name": "rating",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 5,
              "minimum": 1,
              "description": "Avalia√ß√£o de 1 a 5",
              "title": "Rating"
            },
            "description": "Avalia√ß√£o de 1 a 5"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Rate Node Api V1 Nodes  Node Id  Rate Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Node not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nodes/categories/": {
      "get": {
        "tags": [
          "nodes-categories"
        ],
        "summary": "Listar categorias",
        "description": "Lista todas as categorias de nodes dispon√≠veis.\n\nRetorna lista √∫nica de categorias existentes\nno sistema para facilitar filtros.\n\nArgs:\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[str]: Lista de categorias √∫nicas\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_node_categories_api_v1_nodes_categories__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Node Categories Api V1 Nodes Categories  Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Node not found"
          }
        }
      }
    },
    "/api/v1/nodes/types/": {
      "get": {
        "tags": [
          "nodes-types"
        ],
        "summary": "Listar tipos",
        "description": "Lista todos os tipos de nodes dispon√≠veis.\n\nRetorna lista √∫nica de tipos existentes\nno sistema para facilitar filtros.\n\nArgs:\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[str]: Lista de tipos √∫nicos\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_node_types_api_v1_nodes_types__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Node Types Api V1 Nodes Types  Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Node not found"
          }
        }
      }
    },
    "/api/v1/agents/": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Listar agentes",
        "description": "Lista todos os agentes do usu√°rio com filtros e pagina√ß√£o.\n\nRetorna agentes ordenados por atividade recente,\ncom op√ß√µes de filtro por tipo e busca textual.\n\nArgs:\n    page: N√∫mero da p√°gina (1-based)\n    size: N√∫mero de itens por p√°gina\n    agent_type: Tipo espec√≠fico de agente para filtrar\n    search: Termo para buscar em nome e descri√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    AgentListResponse: Lista paginada de agentes\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_agents_api_v1_agents__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Itens por p√°gina"
          },
          {
            "name": "agent_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por tipo de agente",
              "title": "Agent Type"
            },
            "description": "Filtrar por tipo de agente"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Termo de busca",
              "title": "Search"
            },
            "description": "Termo de busca"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Criar agente",
        "description": "Cria um novo agente de IA personalizado.\n\nPermite criar agentes com configura√ß√µes espec√≠ficas\nde personalidade e modelo de linguagem.\n\nArgs:\n    agent_data: Dados do agente a ser criado\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    AgentResponse: Agente criado\n    \nRaises:\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_agent_api_v1_agents__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Obter agente",
        "description": "Obt√©m um agente espec√≠fico por ID.\n\nRetorna dados completos do agente se o usu√°rio\nfor o propriet√°rio.\n\nArgs:\n    agent_id: ID √∫nico do agente\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    AgentResponse: Dados do agente\n    \nRaises:\n    HTTPException: 404 se agente n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_agent_api_v1_agents__agent_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "agents"
        ],
        "summary": "Atualizar agente",
        "description": "Atualiza um agente existente.\n\nPermite modificar configura√ß√µes do agente se o usu√°rio\nfor o propriet√°rio.\n\nArgs:\n    agent_id: ID √∫nico do agente\n    agent_data: Dados atualizados do agente\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    AgentResponse: Agente atualizado\n    \nRaises:\n    HTTPException: 404 se agente n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "update_agent_api_v1_agents__agent_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "agents"
        ],
        "summary": "Deletar agente",
        "description": "Remove um agente do usu√°rio.\n\nDeleta permanentemente o agente se o usu√°rio\nfor o propriet√°rio.\n\nArgs:\n    agent_id: ID √∫nico do agente\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se agente n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio  \n    HTTPException: 500 se erro interno do servidor",
        "operationId": "delete_agent_api_v1_agents__agent_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Agent Api V1 Agents  Agent Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}/activate": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Ativar agente",
        "description": "Ativa um agente para uso em conversa√ß√µes.\n\nColoca o agente em estado ativo, permitindo\nseu uso em chats e workflows.\n\nArgs:\n    agent_id: ID √∫nico do agente\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se agente n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 400 se j√° estiver ativo\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "activate_agent_api_v1_agents__agent_id__activate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Activate Agent Api V1 Agents  Agent Id  Activate Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}/deactivate": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Desativar agente",
        "description": "Desativa um agente temporariamente.\n\nColoca o agente em estado inativo, impedindo\nseu uso at√© ser reativado.\n\nArgs:\n    agent_id: ID √∫nico do agente\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se agente n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 400 se j√° estiver inativo\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "deactivate_agent_api_v1_agents__agent_id__deactivate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Deactivate Agent Api V1 Agents  Agent Id  Deactivate Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}/stats": {
      "get": {
        "tags": [
          "agents",
          "statistics"
        ],
        "summary": "Estat√≠sticas do agente",
        "description": "Obt√©m estat√≠sticas de uso de um agente.\n\nRetorna m√©tricas de performance e uso do agente,\nincluindo conversas, mensagens e avalia√ß√µes.\n\nArgs:\n    agent_id: ID √∫nico do agente\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, Any]: Estat√≠sticas do agente\n    \nRaises:\n    HTTPException: 404 se agente n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_agent_stats_api_v1_agents__agent_id__stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Agent Stats Api V1 Agents  Agent Id  Stats Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}/duplicate": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Duplicar agente",
        "description": "Duplica um agente existente.\n\nCria uma c√≥pia do agente com todas as configura√ß√µes,\npermitindo usar como base para novos agentes.\n\nArgs:\n    agent_id: ID √∫nico do agente a ser duplicado\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    AgentResponse: Agente duplicado\n    \nRaises:\n    HTTPException: 404 se agente n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "duplicate_agent_api_v1_agents__agent_id__duplicate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Agent not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llm/generate": {
      "post": {
        "tags": [
          "llm"
        ],
        "summary": "Generate Text",
        "description": "Gera texto usando LLM com API key espec√≠fica do usu√°rio (se dispon√≠vel)\n\nAutomaticamente usa API keys pessoais do usu√°rio quando configuradas,\ncom fallback para API keys globais do sistema.",
        "operationId": "generate_text_api_v1_llm_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMGenerateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/llm/chat": {
      "post": {
        "tags": [
          "llm"
        ],
        "summary": "Chat Completion",
        "description": "Chat completion usando API key espec√≠fica do usu√°rio (se dispon√≠vel)\n\nAutomaticamente usa API keys pessoais do usu√°rio quando configuradas,\ncom fallback para API keys globais do sistema.",
        "operationId": "chat_completion_api_v1_llm_chat_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/llm/test-tags": {
      "get": {
        "tags": [
          "llm-tokens"
        ],
        "summary": "Teste de tags",
        "description": "Endpoint de teste para verificar tags",
        "operationId": "test_tags_api_v1_llm_test_tags_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          }
        }
      }
    },
    "/api/v1/llm/count-tokens": {
      "post": {
        "tags": [
          "llm-tokens"
        ],
        "summary": "Contar tokens de texto",
        "description": "Endpoint de teste para verificar tags",
        "operationId": "test_tags_api_v1_llm_count_tokens_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountTokensResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          }
        }
      }
    },
    "/api/v1/llm/count-tokens-original": {
      "post": {
        "tags": [
          "llm-tokens"
        ],
        "summary": "Contar tokens de texto",
        "description": "Conta o n√∫mero de tokens em um texto usando o tokenizador do provedor especificado.\n\n## Fun√ß√£o\nEste endpoint calcula quantos tokens existem em um texto, usando o mesmo tokenizador\nque o modelo de LLM utilizaria. Isso √© √∫til para estimar custos e verificar limites.\n\n## Quando Usar\n- Antes de enviar textos muito longos para verificar se est√£o dentro dos limites do modelo\n- Para estimar custos de uso de APIs de LLM que cobram por token\n- Para otimizar prompts e garantir que caibam no contexto do modelo\n\nArgs:\n    text: Texto para contar tokens\n    provider: Provedor de LLM para tokeniza√ß√£o\n    model: Modelo espec√≠fico para tokeniza√ß√£o\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    CountTokensResponse: N√∫mero de tokens e metadados\n    \nRaises:\n    HTTPException: 400 se par√¢metros inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "count_tokens_api_v1_llm_count_tokens_original_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Texto para contar os tokens",
              "title": "Text"
            },
            "description": "Texto para contar os tokens",
            "example": "Este √© um exemplo de texto para contar tokens."
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ProviderEnum"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Provedor LLM a ser usado para a contagem",
              "title": "Provider"
            },
            "description": "Provedor LLM a ser usado para a contagem",
            "example": "openai"
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Modelo espec√≠fico a ser usado para a contagem",
              "title": "Model"
            },
            "description": "Modelo espec√≠fico a ser usado para a contagem",
            "example": "gpt-4o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountTokensResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llm/models": {
      "get": {
        "tags": [
          "llm"
        ],
        "summary": "Listar modelos",
        "description": "Lista todos os modelos de LLM dispon√≠veis na plataforma.\n\nRetorna uma lista de modelos com informa√ß√µes sobre\ncapacidades e limites de cada um.\n\nArgs:\n    provider: Filtrar por provedor espec√≠fico\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    ListModelsResponse: Lista de modelos dispon√≠veis\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_models_api_v1_llm_models_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ProviderEnum"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por provedor espec√≠fico",
              "title": "Provider"
            },
            "description": "Filtrar por provedor espec√≠fico",
            "example": "openai"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListModelsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llm/providers": {
      "get": {
        "tags": [
          "llm-providers"
        ],
        "summary": "Listar provedores",
        "description": "Lista todos os provedores de LLM dispon√≠veis na plataforma.\n\nRetorna informa√ß√µes sobre cada provedor incluindo\nstatus de disponibilidade e modelos suportados.\n\nReturns:\n    ListProvidersResponse: Lista de provedores dispon√≠veis\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_providers_api_v1_llm_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListProvidersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          }
        }
      }
    },
    "/api/v1/llm/{provider}/generate": {
      "post": {
        "tags": [
          "llm"
        ],
        "summary": "Gerar texto com provedor espec√≠fico",
        "description": "Gera texto usando um provedor espec√≠fico de LLM.\n\nEste endpoint for√ßa o uso de um provedor espec√≠fico,\n√∫til quando voc√™ precisa de recursos exclusivos de um modelo.\n\nArgs:\n    provider: Provedor espec√≠fico a ser usado\n    prompt: Texto de entrada para gera√ß√£o\n    model: Modelo espec√≠fico do provedor\n    max_tokens: Limite m√°ximo de tokens\n    temperature: Controle de aleatoriedade\n    presence_penalty: Penalidade de presen√ßa (OpenAI)\n    frequency_penalty: Penalidade de frequ√™ncia (OpenAI)\n    top_p: Probabilidade acumulada para amostragem\n    top_k: N√∫mero de tokens mais prov√°veis\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    GenerateTextResponse: Texto gerado e metadados\n    \nRaises:\n    HTTPException: 400 se par√¢metros inv√°lidos\n    HTTPException: 404 se provedor n√£o encontrado\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "generate_text_with_provider_api_v1_llm__provider__generate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProviderEnum",
              "description": "Nome do provedor"
            },
            "description": "Nome do provedor",
            "example": "openai"
          },
          {
            "name": "prompt",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Texto de entrada para o modelo processar",
              "title": "Prompt"
            },
            "description": "Texto de entrada para o modelo processar",
            "example": "Explique o conceito de machine learning em termos simples."
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Modelo espec√≠fico do provedor",
              "title": "Model"
            },
            "description": "Modelo espec√≠fico do provedor",
            "example": "gpt-4o"
          },
          {
            "name": "max_tokens",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 8192,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limite m√°ximo de tokens na resposta",
              "default": 1000,
              "title": "Max Tokens"
            },
            "description": "Limite m√°ximo de tokens na resposta",
            "example": 500
          },
          {
            "name": "temperature",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 1.0,
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Controle de aleatoriedade (0.0-1.0)",
              "default": 0.7,
              "title": "Temperature"
            },
            "description": "Controle de aleatoriedade (0.0-1.0)",
            "example": 0.7
          },
          {
            "name": "presence_penalty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 2.0,
                  "minimum": -2.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Penalidade de presen√ßa (apenas OpenAI)",
              "title": "Presence Penalty"
            },
            "description": "Penalidade de presen√ßa (apenas OpenAI)",
            "example": 0.2
          },
          {
            "name": "frequency_penalty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 2.0,
                  "minimum": -2.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Penalidade de frequ√™ncia (apenas OpenAI)",
              "title": "Frequency Penalty"
            },
            "description": "Penalidade de frequ√™ncia (apenas OpenAI)",
            "example": 0.3
          },
          {
            "name": "top_p",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 1.0,
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Probabilidade acumulada para amostragem de n√∫cleo (0.0-1.0)",
              "title": "Top P"
            },
            "description": "Probabilidade acumulada para amostragem de n√∫cleo (0.0-1.0)",
            "example": 0.95
          },
          {
            "name": "top_k",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "N√∫mero de tokens mais prov√°veis a considerar",
              "title": "Top K"
            },
            "description": "N√∫mero de tokens mais prov√°veis a considerar",
            "example": 40
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTextResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llm/{provider}/count-tokens": {
      "post": {
        "tags": [
          "llm-tokens"
        ],
        "summary": "Contar tokens com provedor espec√≠fico",
        "description": "Conta tokens usando o tokenizador de um provedor espec√≠fico.\n\n√ötil quando voc√™ precisa da contagem exata de tokens\npara um provedor/modelo espec√≠fico.\n\nArgs:\n    provider: Provedor espec√≠fico para tokeniza√ß√£o\n    text: Texto para contar tokens\n    model: Modelo espec√≠fico para tokeniza√ß√£o\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    CountTokensResponse: N√∫mero de tokens e metadados\n    \nRaises:\n    HTTPException: 400 se par√¢metros inv√°lidos\n    HTTPException: 404 se provedor n√£o encontrado\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "count_tokens_with_provider_api_v1_llm__provider__count_tokens_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProviderEnum",
              "description": "Nome do provedor"
            },
            "description": "Nome do provedor",
            "example": "openai"
          },
          {
            "name": "text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Texto para contar os tokens",
              "title": "Text"
            },
            "description": "Texto para contar os tokens",
            "example": "Este √© um exemplo de texto para contar tokens."
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Modelo espec√≠fico a ser usado para a contagem",
              "title": "Model"
            },
            "description": "Modelo espec√≠fico a ser usado para a contagem",
            "example": "gpt-4o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountTokensResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/llm/{provider}/models": {
      "get": {
        "tags": [
          "llm"
        ],
        "summary": "Listar modelos de provedor espec√≠fico",
        "description": "Lista todos os modelos dispon√≠veis para um provedor espec√≠fico.\n\nRetorna informa√ß√µes detalhadas sobre modelos de um\nprovedor espec√≠fico, incluindo capacidades e limita√ß√µes.\n\nArgs:\n    provider: Provedor espec√≠fico\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    ListModelsResponse: Lista de modelos do provedor\n    \nRaises:\n    HTTPException: 404 se provedor n√£o encontrado\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_models_for_provider_api_v1_llm__provider__models_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProviderEnum",
              "description": "Nome do provedor"
            },
            "description": "Nome do provedor",
            "example": "openai"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListModelsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/": {
      "get": {
        "tags": [
          "conversations"
        ],
        "summary": "Listar conversas",
        "description": "Lista todas as conversa√ß√µes do usu√°rio com pagina√ß√£o.\n\nRetorna conversa√ß√µes ordenadas pela √∫ltima mensagem,\ncom op√ß√£o de filtrar por agent espec√≠fico.\n\nArgs:\n    page: N√∫mero da p√°gina (1-based)\n    size: N√∫mero de itens por p√°gina\n    agent_id: ID do agent para filtrar conversa√ß√µes\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    ConversationListResponse: Lista paginada de conversa√ß√µes\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_conversations_api_v1_conversations__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 20,
              "title": "Size"
            },
            "description": "Itens por p√°gina"
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por agent espec√≠fico",
              "title": "Agent Id"
            },
            "description": "Filtrar por agent espec√≠fico"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "conversations"
        ],
        "summary": "Criar conversa√ß√£o",
        "description": "Cria uma nova conversa√ß√£o para o usu√°rio.\n\nPermite iniciar uma conversa com um agent espec√≠fico\nou criar uma conversa√ß√£o geral.\n\nArgs:\n    conversation_data: Dados da conversa√ß√£o a ser criada\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    ConversationResponse: Conversa√ß√£o criada\n    \nRaises:\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_conversation_api_v1_conversations__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}": {
      "get": {
        "tags": [
          "conversations"
        ],
        "summary": "Obter conversa√ß√£o",
        "description": "Obt√©m uma conversa√ß√£o espec√≠fica do usu√°rio.\n\nRetorna dados completos da conversa√ß√£o se o usu√°rio\nfor o propriet√°rio.\n\nArgs:\n    conversation_id: ID √∫nico da conversa√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    ConversationResponse: Dados da conversa√ß√£o\n    \nRaises:\n    HTTPException: 404 se conversa√ß√£o n√£o encontrada\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_conversation_api_v1_conversations__conversation_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "conversations"
        ],
        "summary": "Deletar conversa√ß√£o",
        "description": "Remove uma conversa√ß√£o e todas suas mensagens.\n\nDeleta permanentemente a conversa√ß√£o e mensagens\nassociadas se o usu√°rio for o propriet√°rio.\n\nArgs:\n    conversation_id: ID √∫nico da conversa√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se conversa√ß√£o n√£o encontrada\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "delete_conversation_api_v1_conversations__conversation_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Conversation Api V1 Conversations  Conversation Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}/messages": {
      "get": {
        "tags": [
          "conversations"
        ],
        "summary": "Listar mensagens",
        "description": "Lista todas as mensagens de uma conversa√ß√£o.\n\nRetorna mensagens ordenadas cronologicamente\ncom pagina√ß√£o eficiente.\n\nArgs:\n    conversation_id: ID √∫nico da conversa√ß√£o\n    page: N√∫mero da p√°gina (1-based)\n    size: N√∫mero de itens por p√°gina\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    MessageListResponse: Lista paginada de mensagens\n    \nRaises:\n    HTTPException: 404 se conversa√ß√£o n√£o encontrada\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_messages_api_v1_conversations__conversation_id__messages_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Conversation Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 50,
              "title": "Size"
            },
            "description": "Itens por p√°gina"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "conversations"
        ],
        "summary": "Enviar mensagem",
        "description": "Envia uma mensagem em uma conversa√ß√£o.\n\nProcessa a mensagem do usu√°rio e, se h√° um agent\nconfigurado, gera resposta automaticamente.\n\nArgs:\n    conversation_id: ID √∫nico da conversa√ß√£o\n    message_data: Dados da mensagem a ser enviada\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    MessageResponse: Mensagem enviada\n    \nRaises:\n    HTTPException: 404 se conversa√ß√£o n√£o encontrada\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "send_message_api_v1_conversations__conversation_id__messages_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}/title": {
      "put": {
        "tags": [
          "conversations"
        ],
        "summary": "Atualizar t√≠tulo",
        "description": "Atualiza o t√≠tulo de uma conversa√ß√£o.\n\nPermite personalizar o nome da conversa√ß√£o\npara melhor organiza√ß√£o.\n\nArgs:\n    conversation_id: ID √∫nico da conversa√ß√£o\n    title: Novo t√≠tulo para a conversa√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se conversa√ß√£o n√£o encontrada\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 400 se t√≠tulo inv√°lido\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "update_conversation_title_api_v1_conversations__conversation_id__title_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Conversation Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Novo t√≠tulo da conversa√ß√£o",
              "title": "Title"
            },
            "description": "Novo t√≠tulo da conversa√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Update Conversation Title Api V1 Conversations  Conversation Id  Title Put"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}/archive": {
      "post": {
        "tags": [
          "conversations"
        ],
        "summary": "Arquivar conversa√ß√£o",
        "description": "Arquiva uma conversa√ß√£o para organiza√ß√£o.\n\nMove a conversa√ß√£o para o estado arquivado,\nremovendo-a da lista principal.\n\nArgs:\n    conversation_id: ID √∫nico da conversa√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se conversa√ß√£o n√£o encontrada\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 400 se j√° arquivada\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "archive_conversation_api_v1_conversations__conversation_id__archive_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Archive Conversation Api V1 Conversations  Conversation Id  Archive Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}/unarchive": {
      "post": {
        "tags": [
          "conversations"
        ],
        "summary": "Desarquivar conversa√ß√£o",
        "description": "Desarquiva uma conversa√ß√£o arquivada.\n\nRetorna a conversa√ß√£o para o estado ativo,\ntornando-a vis√≠vel na lista principal.\n\nArgs:\n    conversation_id: ID √∫nico da conversa√ß√£o\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se conversa√ß√£o n√£o encontrada\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 400 se n√£o estiver arquivada\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "unarchive_conversation_api_v1_conversations__conversation_id__unarchive_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Unarchive Conversation Api V1 Conversations  Conversation Id  Unarchive Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Conversation not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/upload": {
      "post": {
        "tags": [
          "files"
        ],
        "summary": "Upload de arquivo",
        "description": "Realiza o upload de um arquivo para o servidor.\n\n## Fun√ß√£o\nEste endpoint permite enviar arquivos para o servidor, categorizando-os\npara facilitar a organiza√ß√£o e recupera√ß√£o posterior.\n\n## Quando Usar\n- Quando precisar armazenar arquivos no servidor\n- Para enviar documentos, imagens ou outros tipos de arquivos\n- Quando precisar associar arquivos a categorias espec√≠ficas\n\n## Par√¢metros Importantes\n- **category**: Categoria do arquivo (ex: \"imagem\", \"documento\", \"audio\")\n- **file**: O arquivo a ser enviado\n\n## Resultado Esperado\nRetorna um objeto JSON contendo:\n- ID √∫nico do arquivo enviado\n- Nome original do arquivo\n- Tamanho em bytes\n- Tipo MIME\n- URL para download\n- Timestamp de upload\n- Categoria associada\n\n## Exemplo de Uso\n```python\nimport requests\n\nurl = \"https://api.synapscale.com/api/v1/files/upload\"\nheaders = {\"Authorization\": \"Bearer seu_token\"}\n\n# Preparar o arquivo e categoria\nfiles = {\"file\": open(\"documento.pdf\", \"rb\")}\ndata = {\"category\": \"documento\"}\n\nresponse = requests.post(url, files=files, data=data, headers=headers)\nprint(f\"Arquivo enviado com ID: {response.json()['id']}\")\n```\n\nArgs:\n    category: Categoria para classificar o arquivo\n    file: Arquivo a ser enviado\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    _rate_limit: Middleware de rate limiting\n    \nReturns:\n    FileUploadResponse: Resposta com dados do arquivo enviado\n    \nRaises:\n    HTTPException: 400 se categoria inv√°lida\n    HTTPException: 413 se arquivo muito grande\n    HTTPException: 415 se tipo de arquivo n√£o suportado\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "upload_file_api_v1_files_upload_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "max_requests",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Max Requests"
            }
          },
          {
            "name": "window_seconds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 60,
              "title": "Window Seconds"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_api_v1_files_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "413": {
            "description": "File too large"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Listar arquivos",
        "description": "Lista os arquivos do usu√°rio com pagina√ß√£o e filtro por categoria.\n\n## Fun√ß√£o\nEste endpoint retorna uma lista paginada dos arquivos do usu√°rio atual,\ncom op√ß√£o de filtrar por categoria espec√≠fica.\n\n## Quando Usar\n- Para visualizar todos os arquivos enviados pelo usu√°rio\n- Quando precisar listar arquivos de uma categoria espec√≠fica\n- Para implementar uma interface de gerenciamento de arquivos\n\n## Par√¢metros Importantes\n- **page**: N√∫mero da p√°gina para pagina√ß√£o (come√ßa em 1)\n- **size**: Quantidade de itens por p√°gina (entre 1 e 100)\n- **category**: Filtrar por categoria espec√≠fica (opcional)\n\n## Resultado Esperado\nRetorna um objeto JSON contendo:\n- Lista de arquivos com seus metadados\n- Informa√ß√µes de pagina√ß√£o (p√°gina atual, total de p√°ginas)\n- Total de arquivos encontrados\n\n## Exemplo de Uso\n```python\nimport requests\n\nurl = \"https://api.synapscale.com/api/v1/files/\"\nheaders = {\"Authorization\": \"Bearer seu_token\"}\n\n# Listar todos os arquivos (primeira p√°gina, 10 itens por p√°gina)\nresponse = requests.get(url, headers=headers)\n\n# Ou filtrar por categoria e p√°gina espec√≠fica\nparams = {\"category\": \"imagem\", \"page\": 2, \"size\": 20}\nresponse = requests.get(url, params=params, headers=headers)\n\nfor file in response.json()[\"items\"]:\n    print(f\"{file['filename']} - {file['category']} - {file['size']} bytes\")\n```\n\nArgs:\n    page: N√∫mero da p√°gina (1-based)\n    size: N√∫mero de itens por p√°gina\n    category: Categoria para filtrar arquivos\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    FileListResponse: Lista paginada de arquivos\n    \nRaises:\n    HTTPException: 400 se categoria inv√°lida\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "list_files_api_v1_files__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "N√∫mero da p√°gina",
              "default": 1,
              "title": "Page"
            },
            "description": "N√∫mero da p√°gina"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Itens por p√°gina",
              "default": 10,
              "title": "Size"
            },
            "description": "Itens por p√°gina"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por categoria",
              "title": "Category"
            },
            "description": "Filtrar por categoria"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "413": {
            "description": "File too large"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Obter arquivo",
        "description": "Obt√©m informa√ß√µes detalhadas sobre um arquivo espec√≠fico.\n\n## Fun√ß√£o\nEste endpoint retorna metadados detalhados sobre um arquivo espec√≠fico,\nidentificado pelo seu ID √∫nico.\n\n## Quando Usar\n- Quando precisar verificar detalhes de um arquivo espec√≠fico\n- Para obter metadados como tamanho, tipo e data de upload\n- Antes de fazer o download, para verificar se √© o arquivo correto\n\n## Par√¢metros Importantes\n- **file_id**: ID √∫nico do arquivo (UUID)\n\n## Resultado Esperado\nRetorna um objeto JSON contendo:\n- ID do arquivo\n- Nome original do arquivo\n- Tamanho em bytes\n- Tipo MIME\n- URL para download\n- Timestamp de upload\n- Categoria associada\n\n## Exemplo de Uso\n```python\nimport requests\n\nfile_id = \"550e8400-e29b-41d4-a716-446655440000\"  # Exemplo de UUID\nurl = f\"https://api.synapscale.com/api/v1/files/{file_id}\"\nheaders = {\"Authorization\": \"Bearer seu_token\"}\n\nresponse = requests.get(url, headers=headers)\nfile_info = response.json()\n\nprint(f\"Nome: {file_info['filename']}\")\nprint(f\"Tipo: {file_info['mime_type']}\")\nprint(f\"Tamanho: {file_info['size']} bytes\")\nprint(f\"URL de download: {file_info['download_url']}\")\n```\n\nArgs:\n    file_id: ID √∫nico do arquivo\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    FileResponse: Dados do arquivo\n    \nRaises:\n    HTTPException: 404 se arquivo n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_file_api_v1_files__file_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "413": {
            "description": "File too large"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "files"
        ],
        "summary": "Deletar arquivo",
        "description": "Remove permanentemente um arquivo do servidor.\n\n## Fun√ß√£o\nEste endpoint exclui um arquivo espec√≠fico do servidor, identificado pelo seu ID √∫nico.\nA opera√ß√£o √© permanente e n√£o pode ser desfeita.\n\n## Quando Usar\n- Quando precisar remover arquivos desnecess√°rios\n- Para liberar espa√ßo de armazenamento\n- Para implementar funcionalidade de exclus√£o em uma interface de gerenciamento\n\n## Par√¢metros Importantes\n- **file_id**: ID √∫nico do arquivo (UUID)\n\n## Resultado Esperado\nRetorna um objeto JSON contendo:\n- Mensagem de confirma√ß√£o da exclus√£o\n\n## Exemplo de Uso\n```python\nimport requests\n\nfile_id = \"550e8400-e29b-41d4-a716-446655440000\"  # Exemplo de UUID\nurl = f\"https://api.synapscale.com/api/v1/files/{file_id}\"\nheaders = {\"Authorization\": \"Bearer seu_token\"}\n\nresponse = requests.delete(url, headers=headers)\n\nif response.status_code == 200:\n    print(\"Arquivo exclu√≠do com sucesso!\")\nelse:\n    print(f\"Erro ao excluir arquivo: {response.json()['detail']}\")\n```\n\nArgs:\n    file_id: ID √∫nico do arquivo\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    Dict[str, str]: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se arquivo n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "delete_file_api_v1_files__file_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete File Api V1 Files  File Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "413": {
            "description": "File too large"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/files/{file_id}/download": {
      "get": {
        "tags": [
          "files"
        ],
        "summary": "Download de arquivo",
        "description": "Gera um link de download para um arquivo espec√≠fico.\n\n## Fun√ß√£o\nEste endpoint gera um URL tempor√°rio para download direto de um arquivo,\nidentificado pelo seu ID √∫nico.\n\n## Quando Usar\n- Quando precisar baixar um arquivo espec√≠fico\n- Para compartilhar um link de download tempor√°rio\n- Para implementar funcionalidade de download em uma interface\n\n## Par√¢metros Importantes\n- **file_id**: ID √∫nico do arquivo (UUID)\n\n## Resultado Esperado\nRetorna um objeto JSON contendo:\n- URL de download direto para o arquivo\n- Tempo de expira√ß√£o do link (se aplic√°vel)\n- Informa√ß√µes b√°sicas do arquivo (nome, tipo, tamanho)\n\n## Exemplo de Uso\n```python\nimport requests\nimport webbrowser\n\nfile_id = \"550e8400-e29b-41d4-a716-446655440000\"  # Exemplo de UUID\nurl = f\"https://api.synapscale.com/api/v1/files/{file_id}/download\"\nheaders = {\"Authorization\": \"Bearer seu_token\"}\n\nresponse = requests.get(url, headers=headers)\ndownload_url = response.json()[\"download_url\"]\n\n# Abrir o link de download no navegador\nwebbrowser.open(download_url)\n\n# Ou baixar diretamente\nfile_content = requests.get(download_url).content\nwith open(response.json()[\"filename\"], \"wb\") as f:\n    f.write(file_content)\n```\n\nArgs:\n    file_id: ID √∫nico do arquivo\n    db: Sess√£o do banco de dados\n    current_user: Usu√°rio autenticado\n    \nReturns:\n    FileDownloadResponse: URL de download e metadados\n    \nRaises:\n    HTTPException: 404 se arquivo n√£o encontrado\n    HTTPException: 403 se n√£o for o propriet√°rio\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "download_file_api_v1_files__file_id__download_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "413": {
            "description": "File too large"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ws/status": {
      "get": {
        "tags": [
          "websockets"
        ],
        "summary": "Status do WebSocket",
        "description": "Obt√©m estat√≠sticas globais das conex√µes WebSocket.\n\nRetorna informa√ß√µes sobre todas as conex√µes WebSocket\nativas no sistema. Dispon√≠vel apenas para admins.\n\nArgs:\n    current_user: Usu√°rio autenticado (admin required)\n    \nReturns:\n    Dict[str, Any]: Estat√≠sticas das conex√µes WebSocket\n    \nRaises:\n    HTTPException: 403 se n√£o for admin\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_websocket_global_stats_api_v1_ws_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Websocket Global Stats Api V1 Ws Status Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "4001": {
            "description": "Invalid token"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/ws/stats/execution/{execution_id}": {
      "get": {
        "tags": [
          "websockets",
          "statistics"
        ],
        "summary": "Estat√≠sticas WebSocket de execu√ß√£o",
        "description": "Obt√©m estat√≠sticas das conex√µes WebSocket de uma execu√ß√£o espec√≠fica.\n\nRetorna informa√ß√µes sobre conex√µes WebSocket ativas\npara uma execu√ß√£o espec√≠fica.\n\nArgs:\n    execution_id: ID da execu√ß√£o\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    Dict[str, Any]: Estat√≠sticas das conex√µes da execu√ß√£o\n    \nRaises:\n    HTTPException: 404 se execu√ß√£o n√£o encontrada\n    HTTPException: 403 se n√£o tiver acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_websocket_execution_stats_api_v1_ws_stats_execution__execution_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Execution Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Websocket Execution Stats Api V1 Ws Stats Execution  Execution Id  Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "4001": {
            "description": "Invalid token"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components": {
      "post": {
        "tags": [
          "marketplace",
          "components"
        ],
        "summary": "Criar componente",
        "description": "Cria um novo componente no marketplace",
        "operationId": "create_component_api_v1_marketplace_components_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketplace",
          "components"
        ],
        "summary": "Buscar componentes",
        "description": "Busca componentes no marketplace",
        "operationId": "search_components_api_v1_marketplace_components_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Termo de busca",
              "title": "Query"
            },
            "description": "Termo de busca"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Categoria do componente",
              "title": "Category"
            },
            "description": "Categoria do componente"
          },
          {
            "name": "component_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tipo do componente",
              "title": "Component Type"
            },
            "description": "Tipo do componente"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tags para filtrar",
              "title": "Tags"
            },
            "description": "Tags para filtrar"
          },
          {
            "name": "is_free",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Apenas componentes gratuitos",
              "title": "Is Free"
            },
            "description": "Apenas componentes gratuitos"
          },
          {
            "name": "min_rating",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 5,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Rating m√≠nimo",
              "title": "Min Rating"
            },
            "description": "Rating m√≠nimo"
          },
          {
            "name": "max_price",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pre√ßo m√°ximo",
              "title": "Max Price"
            },
            "description": "Pre√ßo m√°ximo"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Ordena√ß√£o",
              "default": "popularity",
              "title": "Sort By"
            },
            "description": "Ordena√ß√£o"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentSearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}": {
      "get": {
        "tags": [
          "marketplace",
          "components"
        ],
        "summary": "Obter componente",
        "description": "Obt√©m detalhes de um componente",
        "operationId": "get_component_api_v1_marketplace_components__component_id__get",
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "marketplace",
          "components"
        ],
        "summary": "Atualizar componente",
        "description": "Atualiza um componente",
        "operationId": "update_component_api_v1_marketplace_components__component_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "marketplace",
          "components"
        ],
        "summary": "Deletar componente",
        "description": "Remove um componente",
        "operationId": "delete_component_api_v1_marketplace_components__component_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Component Api V1 Marketplace Components  Component Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}/download": {
      "post": {
        "tags": [
          "marketplace",
          "components"
        ],
        "summary": "Download componente",
        "description": "Faz download de um componente",
        "operationId": "download_component_api_v1_marketplace_components__component_id__download_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Vers√£o espec√≠fica",
              "title": "Version"
            },
            "description": "Vers√£o espec√≠fica"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Download Component Api V1 Marketplace Components  Component Id  Download Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}/install": {
      "post": {
        "tags": [
          "marketplace",
          "components"
        ],
        "summary": "Instalar componente",
        "description": "Instala um componente no workspace",
        "operationId": "install_component_api_v1_marketplace_components__component_id__install_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID do workspace",
              "title": "Workspace Id"
            },
            "description": "ID do workspace"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Install Component Api V1 Marketplace Components  Component Id  Install Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}/ratings": {
      "post": {
        "tags": [
          "marketplace",
          "ratings"
        ],
        "summary": "Criar avalia√ß√£o",
        "description": "Cria uma avalia√ß√£o para um componente",
        "operationId": "create_rating_api_v1_marketplace_components__component_id__ratings_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "marketplace",
          "ratings"
        ],
        "summary": "Listar avalia√ß√µes",
        "description": "Obt√©m avalia√ß√µes de um componente",
        "operationId": "get_component_ratings_api_v1_marketplace_components__component_id__ratings_get",
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(newest|oldest|highest|lowest|helpful)$",
              "default": "newest",
              "title": "Sort By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RatingResponse"
                  },
                  "title": "Response Get Component Ratings Api V1 Marketplace Components  Component Id  Ratings Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}/ratings/stats": {
      "get": {
        "tags": [
          "marketplace-ratings",
          "statistics"
        ],
        "summary": "Obter estat√≠sticas de avalia√ß√µes",
        "description": "Obt√©m estat√≠sticas de avalia√ß√µes",
        "operationId": "get_rating_stats_api_v1_marketplace_components__component_id__ratings_stats_get",
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/ratings/{rating_id}": {
      "put": {
        "tags": [
          "marketplace-ratings"
        ],
        "summary": "Atualizar avalia√ß√£o",
        "description": "Atualiza uma avalia√ß√£o",
        "operationId": "update_rating_api_v1_marketplace_ratings__rating_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "rating_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rating Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatingCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "marketplace-ratings"
        ],
        "summary": "Remover avalia√ß√£o",
        "description": "Remove uma avalia√ß√£o",
        "operationId": "delete_rating_api_v1_marketplace_ratings__rating_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "rating_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rating Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/ratings/{rating_id}/helpful": {
      "post": {
        "tags": [
          "marketplace-ratings"
        ],
        "summary": "Marcar avalia√ß√£o como √∫til",
        "description": "Marca uma avalia√ß√£o como √∫til",
        "operationId": "mark_rating_helpful_api_v1_marketplace_ratings__rating_id__helpful_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "rating_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rating Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}/purchase": {
      "post": {
        "tags": [
          "marketplace-purchases"
        ],
        "summary": "Comprar componente",
        "description": "Compra um componente premium",
        "operationId": "purchase_component_api_v1_marketplace_components__component_id__purchase_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/purchases": {
      "get": {
        "tags": [
          "marketplace-purchases"
        ],
        "summary": "Listar minhas compras",
        "description": "Obt√©m compras do usu√°rio",
        "operationId": "get_user_purchases_api_v1_marketplace_purchases_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseResponse"
                  },
                  "title": "Response Get User Purchases Api V1 Marketplace Purchases Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/purchases/{purchase_id}": {
      "get": {
        "tags": [
          "marketplace-purchases"
        ],
        "summary": "Obter detalhes da compra",
        "description": "Obt√©m detalhes de uma compra",
        "operationId": "get_purchase_api_v1_marketplace_purchases__purchase_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "purchase_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Purchase Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}/versions": {
      "get": {
        "tags": [
          "marketplace-versions"
        ],
        "summary": "Listar vers√µes do componente",
        "description": "Obt√©m vers√µes de um componente",
        "operationId": "get_component_versions_api_v1_marketplace_components__component_id__versions_get",
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentVersionResponse"
                  },
                  "title": "Response Get Component Versions Api V1 Marketplace Components  Component Id  Versions Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "marketplace-versions"
        ],
        "summary": "Criar nova vers√£o do componente",
        "description": "Cria uma nova vers√£o do componente",
        "operationId": "create_component_version_api_v1_marketplace_components__component_id__versions_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_component_version_api_v1_marketplace_components__component_id__versions_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}/favorite": {
      "post": {
        "tags": [
          "marketplace-favorites"
        ],
        "summary": "Adicionar aos favoritos",
        "description": "Adiciona componente aos favoritos",
        "operationId": "favorite_component_api_v1_marketplace_components__component_id__favorite_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "marketplace-favorites"
        ],
        "summary": "Remover dos favoritos",
        "description": "Remove componente dos favoritos",
        "operationId": "unfavorite_component_api_v1_marketplace_components__component_id__favorite_delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/favorites": {
      "get": {
        "tags": [
          "marketplace-favorites"
        ],
        "summary": "Listar favoritos",
        "description": "Lista componentes favoritos do usu√°rio",
        "operationId": "get_user_favorites_api_v1_marketplace_favorites_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentResponse"
                  },
                  "title": "Response Get User Favorites Api V1 Marketplace Favorites Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/stats": {
      "get": {
        "tags": [
          "marketplace",
          "statistics"
        ],
        "summary": "Estat√≠sticas marketplace",
        "description": "Obt√©m estat√≠sticas do marketplace",
        "operationId": "get_marketplace_stats_api_v1_marketplace_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/synapse__schemas__marketplace__MarketplaceStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}/stats": {
      "get": {
        "tags": [
          "marketplace-components",
          "statistics"
        ],
        "summary": "Obter estat√≠sticas do componente",
        "description": "Obt√©m estat√≠sticas de um componente",
        "operationId": "get_component_stats_api_v1_marketplace_components__component_id__stats_get",
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "default": 30,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/my-components/stats": {
      "get": {
        "tags": [
          "marketplace",
          "statistics"
        ],
        "summary": "Obter minhas estat√≠sticas como autor",
        "description": "Obt√©m estat√≠sticas dos componentes do autor",
        "operationId": "get_author_stats_api_v1_marketplace_my_components_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/marketplace/categories": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Obter categorias",
        "description": "Obt√©m categorias dispon√≠veis",
        "operationId": "get_categories_api_v1_marketplace_categories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          }
        }
      }
    },
    "/api/v1/marketplace/tags": {
      "get": {
        "tags": [
          "marketplace"
        ],
        "summary": "Obter tags populares",
        "description": "Obt√©m tags populares",
        "operationId": "get_popular_tags_api_v1_marketplace_tags_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/recommendations": {
      "get": {
        "tags": [
          "marketplace-recommendations"
        ],
        "summary": "Recomenda√ß√µes",
        "description": "Obt√©m recomenda√ß√µes personalizadas para o usu√°rio",
        "operationId": "get_recommendations_api_v1_marketplace_recommendations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentResponse"
                  },
                  "title": "Response Get Recommendations Api V1 Marketplace Recommendations Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/components/{component_id}/similar": {
      "get": {
        "tags": [
          "marketplace-recommendations"
        ],
        "summary": "Obter componentes similares",
        "description": "Obt√©m componentes similares",
        "operationId": "get_similar_components_api_v1_marketplace_components__component_id__similar_get",
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "default": 5,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentResponse"
                  },
                  "title": "Response Get Similar Components Api V1 Marketplace Components  Component Id  Similar Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/admin/moderation": {
      "get": {
        "tags": [
          "marketplace",
          "admin"
        ],
        "summary": "Modera√ß√£o pendente",
        "description": "Lista componentes pendentes de modera√ß√£o",
        "operationId": "get_pending_moderation_api_v1_marketplace_admin_moderation_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentModerationResponse"
                  },
                  "title": "Response Get Pending Moderation Api V1 Marketplace Admin Moderation Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/admin/components/{component_id}/moderate": {
      "post": {
        "tags": [
          "marketplace",
          "admin"
        ],
        "summary": "Moderar componente",
        "description": "Executa a√ß√£o de modera√ß√£o em um componente",
        "operationId": "moderate_component_api_v1_marketplace_admin_components__component_id__moderate_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModerationAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Moderate Component Api V1 Marketplace Admin Components  Component Id  Moderate Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/admin/components/bulk": {
      "post": {
        "tags": [
          "system-bulk"
        ],
        "summary": "Opera√ß√£o em lote com componentes",
        "description": "Opera√ß√£o em lote em componentes",
        "operationId": "bulk_component_operation_api_v1_marketplace_admin_components_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkComponentOperation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkOperationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/marketplace/admin/components/{component_id}/feature": {
      "post": {
        "tags": [
          "marketplace-admin"
        ],
        "summary": "Destacar componente",
        "description": "Destaca ou remove destaque de um componente",
        "operationId": "feature_component_api_v1_marketplace_admin_components__component_id__feature_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Component Id"
            }
          },
          {
            "name": "featured",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Featured"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/admin/reports/revenue": {
      "get": {
        "tags": [
          "analytics-reports"
        ],
        "summary": "Relat√≥rio de receitas",
        "description": "Relat√≥rio de receita",
        "operationId": "get_revenue_report_api_v1_marketplace_admin_reports_revenue_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de in√≠cio",
              "title": "Start Date"
            },
            "description": "Data de in√≠cio"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de fim",
              "title": "End Date"
            },
            "description": "Data de fim"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/admin/reports/downloads": {
      "get": {
        "tags": [
          "analytics-reports"
        ],
        "summary": "Relat√≥rio de downloads",
        "description": "Relat√≥rio de downloads",
        "operationId": "get_downloads_report_api_v1_marketplace_admin_reports_downloads_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de in√≠cio",
              "title": "Start Date"
            },
            "description": "Data de in√≠cio"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de fim",
              "title": "End Date"
            },
            "description": "Data de fim"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketplace/admin/reports/top-components": {
      "get": {
        "tags": [
          "analytics-reports"
        ],
        "summary": "Relat√≥rio de top componentes",
        "description": "Relat√≥rio de top componentes",
        "operationId": "get_top_components_report_api_v1_marketplace_admin_reports_top_components_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(downloads|revenue|rating)$",
              "default": "downloads",
              "title": "Metric"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Component not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Criar workspace",
        "description": "Cria um novo workspace para o usu√°rio autenticado",
        "operationId": "create_workspace_api_v1_workspaces__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Workspace Api V1 Workspaces  Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Listar workspaces",
        "description": "Obt√©m todos os workspaces do usu√°rio autenticado, com pagina√ß√£o",
        "operationId": "get_user_workspaces_api_v1_workspaces__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limite de resultados por p√°gina",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limite de resultados por p√°gina"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceResponse"
                  },
                  "title": "Response Get User Workspaces Api V1 Workspaces  Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/creation-rules": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Obter regras de cria√ß√£o",
        "description": "Obt√©m as regras e limita√ß√µes para cria√ß√£o de workspaces do usu√°rio",
        "operationId": "get_workspace_creation_rules_api_v1_workspaces_creation_rules_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Workspace Creation Rules Api V1 Workspaces Creation Rules Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/workspaces/search": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Buscar workspaces",
        "description": "Busca workspaces p√∫blicos com filtros avan√ßados e pagina√ß√£o",
        "operationId": "search_workspaces_api_v1_workspaces_search_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Termo de busca",
              "title": "Query"
            },
            "description": "Termo de busca"
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Apenas workspaces p√∫blicos",
              "title": "Is Public"
            },
            "description": "Apenas workspaces p√∫blicos"
          },
          {
            "name": "has_projects",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Com projetos",
              "title": "Has Projects"
            },
            "description": "Com projetos"
          },
          {
            "name": "min_members",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "M√≠nimo de membros",
              "title": "Min Members"
            },
            "description": "M√≠nimo de membros"
          },
          {
            "name": "max_members",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "M√°ximo de membros",
              "title": "Max Members"
            },
            "description": "M√°ximo de membros"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(activity|members|projects|created|name)$",
              "default": "activity",
              "title": "Sort By"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceResponse"
                  },
                  "title": "Response Search Workspaces Api V1 Workspaces Search Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Obter workspace",
        "description": "Obt√©m detalhes de um workspace",
        "operationId": "get_workspace_api_v1_workspaces__workspace_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workspaces"
        ],
        "summary": "Atualizar workspace",
        "description": "Atualiza um workspace",
        "operationId": "update_workspace_api_v1_workspaces__workspace_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Deletar workspace",
        "description": "Deleta um workspace",
        "operationId": "delete_workspace_api_v1_workspaces__workspace_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Workspace Api V1 Workspaces  Workspace Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/stats": {
      "get": {
        "tags": [
          "workspace-stats"
        ],
        "summary": "Obter estat√≠sticas do workspace",
        "description": "Obt√©m estat√≠sticas do workspace",
        "operationId": "get_workspace_stats_api_v1_workspaces__workspace_id__stats_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Workspace Stats Api V1 Workspaces  Workspace Id  Stats Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/members": {
      "get": {
        "tags": [
          "workspace-members"
        ],
        "summary": "Listar membros do workspace",
        "description": "Lista membros do workspace",
        "operationId": "get_workspace_members_api_v1_workspaces__workspace_id__members_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberResponse"
                  },
                  "title": "Response Get Workspace Members Api V1 Workspaces  Workspace Id  Members Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/members/invite": {
      "post": {
        "tags": [
          "workspace-members"
        ],
        "summary": "Convidar membro para workspace",
        "description": "Convida um membro para o workspace",
        "operationId": "invite_member_api_v1_workspaces__workspace_id__members_invite_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberInvite"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Invite Member Api V1 Workspaces  Workspace Id  Members Invite Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/members/{member_id}": {
      "delete": {
        "tags": [
          "workspace-members"
        ],
        "summary": "Remover membro do workspace",
        "description": "Remove um membro do workspace",
        "operationId": "remove_member_api_v1_workspaces__workspace_id__members__member_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Member Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/members/{member_id}/role": {
      "put": {
        "tags": [
          "workspace-members"
        ],
        "summary": "Atualizar role de membro",
        "description": "Atualiza o role de um membro",
        "operationId": "update_member_role_api_v1_workspaces__workspace_id__members__member_id__role_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Member Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Role Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/projects": {
      "post": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Criar projeto no workspace",
        "description": "Cria um novo projeto no workspace",
        "operationId": "create_project_api_v1_workspaces__workspace_id__projects_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Project Api V1 Workspaces  Workspace Id  Projects Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Listar projetos",
        "description": "Lista projetos do workspace",
        "operationId": "get_workspace_projects_api_v1_workspaces__workspace_id__projects_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(active|archived|deleted)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectResponse"
                  },
                  "title": "Response Get Workspace Projects Api V1 Workspaces  Workspace Id  Projects Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/projects/search": {
      "get": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Buscar projetos",
        "description": "Busca projetos com filtros avan√ßados",
        "operationId": "search_projects_api_v1_workspaces_projects_search_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Termo de busca",
              "title": "Query"
            },
            "description": "Termo de busca"
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID do workspace",
              "title": "Workspace Id"
            },
            "description": "ID do workspace"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(active|archived|deleted)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "has_collaborators",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Com colaboradores",
              "title": "Has Collaborators"
            },
            "description": "Com colaboradores"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(updated|created|name|activity)$",
              "default": "updated",
              "title": "Sort By"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectResponse"
                  },
                  "title": "Response Search Projects Api V1 Workspaces Projects Search Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/projects/{project_id}": {
      "get": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Obter projeto",
        "description": "Obt√©m detalhes de um projeto",
        "operationId": "get_project_api_v1_workspaces_projects__project_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Atualizar projeto",
        "description": "Atualiza um projeto",
        "operationId": "update_project_api_v1_workspaces_projects__project_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Deletar projeto",
        "description": "Remove um projeto",
        "operationId": "delete_project_api_v1_workspaces_projects__project_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Project Api V1 Workspaces Projects  Project Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/invitations": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Listar convites recebidos",
        "description": "Lista todos os convites recebidos pelo usu√°rio autenticado, com pagina√ß√£o.",
        "operationId": "get_user_invitations_api_v1_workspaces_invitations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(pending|accepted|declined|expired)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Status do convite",
              "title": "Status"
            },
            "description": "Status do convite"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limite de resultados por p√°gina",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limite de resultados por p√°gina"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de convites retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvitationResponse"
                  },
                  "title": "Response Get User Invitations Api V1 Workspaces Invitations Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/invitations/{invitation_id}/accept": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Aceitar convite de workspace",
        "description": "Aceita um convite de workspace para o usu√°rio autenticado.",
        "operationId": "accept_invitation_api_v1_workspaces_invitations__invitation_id__accept_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID do convite",
              "title": "Invitation Id"
            },
            "description": "ID do convite"
          }
        ],
        "responses": {
          "200": {
            "description": "Convite aceito com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Accept Invitation Api V1 Workspaces Invitations  Invitation Id  Accept Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/invitations/{invitation_id}/decline": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Recusar convite de workspace",
        "description": "Recusa um convite de workspace para o usu√°rio autenticado.",
        "operationId": "decline_invitation_api_v1_workspaces_invitations__invitation_id__decline_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID do convite",
              "title": "Invitation Id"
            },
            "description": "ID do convite"
          }
        ],
        "responses": {
          "200": {
            "description": "Convite recusado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Decline Invitation Api V1 Workspaces Invitations  Invitation Id  Decline Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/projects/{project_id}/versions": {
      "get": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Listar vers√µes do projeto",
        "description": "Obt√©m vers√µes do projeto",
        "operationId": "get_project_versions_api_v1_workspaces_projects__project_id__versions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectVersionResponse"
                  },
                  "title": "Response Get Project Versions Api V1 Workspaces Projects  Project Id  Versions Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Criar vers√£o do projeto",
        "description": "Cria uma nova vers√£o do projeto",
        "operationId": "create_project_version_api_v1_workspaces_projects__project_id__versions_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VersionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectVersionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/projects/{project_id}/versions/{version_id}/restore": {
      "post": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Restaurar vers√£o do projeto",
        "description": "Restaura uma vers√£o do projeto",
        "operationId": "restore_project_version_api_v1_workspaces_projects__project_id__versions__version_id__restore_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/activities": {
      "get": {
        "tags": [
          "workspace-activities"
        ],
        "summary": "Listar atividades do workspace",
        "description": "Lista atividades do workspace",
        "operationId": "get_workspace_activities_api_v1_workspaces__workspace_id__activities_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Workspace Activities Api V1 Workspaces  Workspace Id  Activities Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/projects/{project_id}/activities": {
      "get": {
        "tags": [
          "workspace-activities"
        ],
        "summary": "Listar atividades do projeto",
        "description": "Obt√©m atividades do projeto",
        "operationId": "get_project_activities_api_v1_workspaces_projects__project_id__activities_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityResponse"
                  },
                  "title": "Response Get Project Activities Api V1 Workspaces Projects  Project Id  Activities Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/workspaces/{workspace_id}/members/bulk": {
      "post": {
        "tags": [
          "workspace-members"
        ],
        "summary": "Opera√ß√£o em lote com membros",
        "description": "Opera√ß√£o em lote em membros",
        "operationId": "bulk_member_operation_api_v1_workspaces_workspaces__workspace_id__members_bulk_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkMemberOperation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkOperationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/workspaces/{workspace_id}/projects/bulk": {
      "post": {
        "tags": [
          "workspace-projects"
        ],
        "summary": "Opera√ß√£o em lote com projetos",
        "description": "Opera√ß√£o em lote em projetos",
        "operationId": "bulk_project_operation_api_v1_workspaces_workspaces__workspace_id__projects_bulk_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkProjectOperation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkOperationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/workspaces/{workspace_id}/notifications": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Obter configura√ß√µes de notifica√ß√£o",
        "description": "Obt√©m configura√ß√µes de notifica√ß√£o do workspace",
        "operationId": "get_workspace_notification_settings_api_v1_workspaces_workspaces__workspace_id__notifications_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "workspaces"
        ],
        "summary": "Atualizar configura√ß√µes de notifica√ß√£o",
        "description": "Atualiza configura√ß√µes de notifica√ß√£o do workspace",
        "operationId": "update_workspace_notification_settings_api_v1_workspaces_workspaces__workspace_id__notifications_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPreferences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/workspaces/{workspace_id}/integrations": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Criar integra√ß√£o do workspace",
        "description": "Cria uma integra√ß√£o no workspace",
        "operationId": "create_workspace_integration_api_v1_workspaces_workspaces__workspace_id__integrations_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIntegration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Listar integra√ß√µes do workspace",
        "description": "Obt√©m integra√ß√µes do workspace",
        "operationId": "get_workspace_integrations_api_v1_workspaces_workspaces__workspace_id__integrations_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationResponse"
                  },
                  "title": "Response Get Workspace Integrations Api V1 Workspaces Workspaces  Workspace Id  Integrations Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/integrations/{integration_id}": {
      "put": {
        "tags": [
          "workspaces"
        ],
        "summary": "Atualizar integra√ß√£o",
        "description": "Atualiza uma integra√ß√£o",
        "operationId": "update_integration_api_v1_workspaces_integrations__integration_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Integration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIntegration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Deletar integra√ß√£o",
        "description": "Remove uma integra√ß√£o",
        "operationId": "delete_integration_api_v1_workspaces_integrations__integration_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Integration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/events": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Registrar evento de analytics",
        "description": "Registra um evento de analytics no sistema.\n\nEste endpoint permite rastrear eventos espec√≠ficos do usu√°rio para an√°lise posterior.\nOs eventos s√£o fundamentais para entender o comportamento dos usu√°rios e gerar insights.\n\nArgs:\n    event_data: Dados do evento a ser registrado\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    EventResponse: Dados do evento registrado\n    \nRaises:\n    HTTPException: 400 se os dados do evento s√£o inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "track_event_api_v1_analytics_events_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Listar eventos do usu√°rio",
        "description": "Obt√©m eventos do usu√°rio com filtros opcionais.\n\nPermite filtrar eventos por tipo, per√≠odo e aplicar pagina√ß√£o\npara an√°lise detalhada do comportamento do usu√°rio.\n\nArgs:\n    event_type: Filtro por tipo de evento (opcional)\n    start_date: Data de in√≠cio do per√≠odo (opcional)\n    end_date: Data de fim do per√≠odo (opcional)\n    limit: Limite de resultados por p√°gina\n    offset: Offset para pagina√ß√£o\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[EventResponse]: Lista de eventos do usu√°rio\n    \nRaises:\n    HTTPException: 400 se as datas s√£o inv√°lidas\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_events_api_v1_analytics_events_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tipo do evento",
              "title": "Event Type"
            },
            "description": "Tipo do evento"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Data de in√≠cio",
              "title": "Start Date"
            },
            "description": "Data de in√≠cio"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Data de fim",
              "title": "End Date"
            },
            "description": "Data de fim"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 100,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResponse"
                  },
                  "title": "Response Get Events Api V1 Analytics Events Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/events/batch": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Registrar m√∫ltiplos eventos",
        "description": "Registra m√∫ltiplos eventos em lote para melhor performance.\n\nEste endpoint √© otimizado para registrar v√°rios eventos simultaneamente,\nreduzindo a lat√™ncia e melhorando a efici√™ncia quando h√° muitos eventos.\n\nArgs:\n    events: Lista de eventos a serem registrados\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Quantidade de eventos processados e falhados\n    \nRaises:\n    HTTPException: 400 se algum evento √© inv√°lido\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "track_events_batch_api_v1_analytics_events_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/EventCreate"
                },
                "type": "array",
                "title": "Events"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Track Events Batch Api V1 Analytics Events Batch Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/metrics/user-behavior": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "M√©tricas de comportamento do usu√°rio",
        "description": "Obt√©m m√©tricas de comportamento do usu√°rio no per√≠odo especificado.\n\nAnalisa padr√µes de uso, frequ√™ncia de a√ß√µes e outros indicadores\ncomportamentais para o usu√°rio autenticado.\n\nArgs:\n    start_date: Data de in√≠cio da an√°lise\n    end_date: Data de fim da an√°lise\n    granularity: Granularidade dos dados (hour, day, week, month)\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: M√©tricas de comportamento do usu√°rio\n    \nRaises:\n    HTTPException: 400 se as datas s√£o inv√°lidas\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_user_behavior_metrics_api_v1_analytics_metrics_user_behavior_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de in√≠cio",
              "title": "Start Date"
            },
            "description": "Data de in√≠cio"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de fim",
              "title": "End Date"
            },
            "description": "Data de fim"
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(hour|day|week|month)$",
              "description": "Granularidade dos dados",
              "default": "day",
              "title": "Granularity"
            },
            "description": "Granularidade dos dados"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get User Behavior Metrics Api V1 Analytics Metrics User Behavior Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/metrics/system-performance": {
      "get": {
        "tags": [
          "analytics",
          "admin"
        ],
        "summary": "M√©tricas de performance do sistema",
        "description": "Obt√©m m√©tricas de performance do sistema (apenas para administradores).\n\nAnalisa performance, lat√™ncia, throughput e outros indicadores\nt√©cnicos do sistema para monitoramento operacional.\n\nArgs:\n    start_date: Data de in√≠cio da an√°lise\n    end_date: Data de fim da an√°lise\n    granularity: Granularidade dos dados (minute, hour, day)\n    current_admin: Usu√°rio administrador autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: M√©tricas de performance do sistema\n    \nRaises:\n    HTTPException: 400 se as datas s√£o inv√°lidas\n    HTTPException: 403 se usu√°rio n√£o √© admin\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_system_performance_metrics_api_v1_analytics_metrics_system_performance_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de in√≠cio",
              "title": "Start Date"
            },
            "description": "Data de in√≠cio"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de fim",
              "title": "End Date"
            },
            "description": "Data de fim"
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(minute|hour|day)$",
              "description": "Granularidade dos dados",
              "default": "hour",
              "title": "Granularity"
            },
            "description": "Granularidade dos dados"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get System Performance Metrics Api V1 Analytics Metrics System Performance Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/metrics/business": {
      "get": {
        "tags": [
          "analytics",
          "admin"
        ],
        "summary": "M√©tricas de neg√≥cio",
        "description": "Obt√©m m√©tricas de neg√≥cio (apenas para administradores).\n\nAnalisa indicadores de performance de neg√≥cio como receita,\nconvers√µes, reten√ß√£o e outros KPIs importantes.\n\nArgs:\n    start_date: Data de in√≠cio da an√°lise\n    end_date: Data de fim da an√°lise\n    granularity: Granularidade dos dados (day, week, month)\n    current_admin: Usu√°rio administrador autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: M√©tricas de neg√≥cio\n    \nRaises:\n    HTTPException: 400 se as datas s√£o inv√°lidas\n    HTTPException: 403 se usu√°rio n√£o √© admin\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_business_metrics_api_v1_analytics_metrics_business_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de in√≠cio",
              "title": "Start Date"
            },
            "description": "Data de in√≠cio"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de fim",
              "title": "End Date"
            },
            "description": "Data de fim"
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(day|week|month)$",
              "description": "Granularidade dos dados",
              "default": "day",
              "title": "Granularity"
            },
            "description": "Granularidade dos dados"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Business Metrics Api V1 Analytics Metrics Business Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/metrics/real-time": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "M√©tricas em tempo real",
        "description": "Obt√©m m√©tricas em tempo real do usu√°rio.\n\nRetorna estat√≠sticas atualizadas sobre atividade recente,\nsessions ativas e outros indicadores em tempo real.\n\nArgs:\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    RealTimeStats: Estat√≠sticas em tempo real\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_real_time_metrics_api_v1_analytics_metrics_real_time_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealTimeStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/queries": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Executar consulta customizada",
        "description": "Executa uma consulta customizada de analytics.\n\nPermite executar consultas personalizadas para an√°lises\nespec√≠ficas que n√£o est√£o cobertas pelos endpoints padr√£o.\n\nArgs:\n    query: Dados da consulta a ser executada\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    QueryResponse: Resultado da consulta\n    \nRaises:\n    HTTPException: 400 se a consulta √© inv√°lida\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "execute_analytics_query_api_v1_analytics_queries_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/queries/validate": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Validar consulta",
        "description": "Valida uma consulta de analytics sem execut√°-la.\n\nVerifica se a sintaxe e estrutura da consulta est√£o corretas\nantes da execu√ß√£o, permitindo debug e valida√ß√£o pr√©via.\n\nArgs:\n    query: Consulta a ser validada\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Resultado da valida√ß√£o (valid, errors)\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "validate_analytics_query_api_v1_analytics_queries_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Validate Analytics Query Api V1 Analytics Queries Validate Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/queries/saved": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Listar consultas salvas",
        "description": "Obt√©m consultas salvas do usu√°rio.\n\nRetorna lista de consultas que o usu√°rio salvou para reutiliza√ß√£o,\nfacilitando an√°lises recorrentes.\n\nArgs:\n    limit: Limite de resultados por p√°gina\n    offset: Offset para pagina√ß√£o\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Lista de consultas salvas\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_saved_queries_api_v1_analytics_queries_saved_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Saved Queries Api V1 Analytics Queries Saved Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/queries/save": {
      "post": {
        "tags": [
          "analytics"
        ],
        "summary": "Salvar consulta",
        "description": "Salva uma consulta para reutiliza√ß√£o.\n\nPermite armazenar consultas customizadas com nome e descri√ß√£o\npara facilitar an√°lises recorrentes.\n\nArgs:\n    query: Consulta a ser salva\n    name: Nome da consulta\n    description: Descri√ß√£o opcional\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Dados da consulta salva\n    \nRaises:\n    HTTPException: 400 se nome j√° existe\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "save_query_api_v1_analytics_queries_save_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Nome da consulta",
              "title": "Name"
            },
            "description": "Nome da consulta"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Descri√ß√£o",
              "title": "Description"
            },
            "description": "Descri√ß√£o"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Save Query Api V1 Analytics Queries Save Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/dashboards": {
      "post": {
        "tags": [
          "dashboards"
        ],
        "summary": "Criar dashboard",
        "description": "Cria um novo dashboard personalizado.\n\nPermite criar dashboards customizados com widgets e visualiza√ß√µes\nespec√≠ficas para an√°lises personalizadas.\n\nArgs:\n    dashboard_data: Dados do dashboard a ser criado\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    DashboardResponse: Dashboard criado\n    \nRaises:\n    HTTPException: 400 se dados s√£o inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_dashboard_api_v1_analytics_dashboards_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "dashboards"
        ],
        "summary": "Listar dashboards do usu√°rio",
        "description": "Obt√©m dashboards do usu√°rio com pagina√ß√£o.\n\nRetorna lista de todos os dashboards criados pelo usu√°rio,\npermitindo navega√ß√£o paginada.\n\nArgs:\n    limit: Limite de resultados por p√°gina\n    offset: Offset para pagina√ß√£o\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[DashboardResponse]: Lista de dashboards do usu√°rio\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_user_dashboards_api_v1_analytics_dashboards_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardResponse"
                  },
                  "title": "Response Get User Dashboards Api V1 Analytics Dashboards Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/dashboards/{dashboard_id}": {
      "get": {
        "tags": [
          "dashboards"
        ],
        "summary": "Obter dashboard espec√≠fico",
        "description": "Obt√©m detalhes de um dashboard espec√≠fico.\n\nRetorna todas as informa√ß√µes de um dashboard, incluindo\nwidgets, configura√ß√µes e dados associados.\n\nArgs:\n    dashboard_id: ID do dashboard\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    DashboardResponse: Dados do dashboard\n    \nRaises:\n    HTTPException: 404 se dashboard n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_dashboard_api_v1_analytics_dashboards__dashboard_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "dashboards"
        ],
        "summary": "Atualizar dashboard",
        "description": "Atualiza um dashboard existente.\n\nPermite modificar nome, descri√ß√£o, widgets e configura√ß√µes\nde um dashboard existente do usu√°rio.\n\nArgs:\n    dashboard_id: ID do dashboard\n    dashboard_data: Dados atualizados do dashboard\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    DashboardResponse: Dashboard atualizado\n    \nRaises:\n    HTTPException: 404 se dashboard n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de edi√ß√£o\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "update_dashboard_api_v1_analytics_dashboards__dashboard_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dashboards"
        ],
        "summary": "Deletar dashboard",
        "description": "Remove um dashboard do usu√°rio.\n\nExclui permanentemente um dashboard e todos os seus dados\nassociados (widgets, configura√ß√µes, etc.).\n\nArgs:\n    dashboard_id: ID do dashboard\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se dashboard n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de exclus√£o\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "delete_dashboard_api_v1_analytics_dashboards__dashboard_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Dashboard Api V1 Analytics Dashboards  Dashboard Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/dashboards/{dashboard_id}/data": {
      "get": {
        "tags": [
          "dashboards"
        ],
        "summary": "Obter dados do dashboard",
        "description": "Obt√©m dados atualizados de um dashboard.\n\nRetorna os dados processados de todos os widgets do dashboard,\ncom op√ß√£o de for√ßar atualiza√ß√£o do cache.\n\nArgs:\n    dashboard_id: ID do dashboard\n    refresh: Se deve for√ßar atualiza√ß√£o dos dados\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    DashboardData: Dados do dashboard\n    \nRaises:\n    HTTPException: 404 se dashboard n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_dashboard_data_api_v1_analytics_dashboards__dashboard_id__data_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "For√ßar atualiza√ß√£o dos dados",
              "default": false,
              "title": "Refresh"
            },
            "description": "For√ßar atualiza√ß√£o dos dados"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/dashboards/{dashboard_id}/share": {
      "post": {
        "tags": [
          "dashboards"
        ],
        "summary": "Compartilhar dashboard",
        "description": "Configura compartilhamento de um dashboard.\n\nPermite tornar um dashboard p√∫blico ou privado,\ngerando links de compartilhamento quando necess√°rio.\n\nArgs:\n    dashboard_id: ID do dashboard\n    public: Se deve tornar o dashboard p√∫blico\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Status do compartilhamento e link p√∫blico (se aplic√°vel)\n    \nRaises:\n    HTTPException: 404 se dashboard n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de compartilhamento\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "share_dashboard_api_v1_analytics_dashboards__dashboard_id__share_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Dashboard Id"
            }
          },
          {
            "name": "public",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Tornar p√∫blico",
              "default": true,
              "title": "Public"
            },
            "description": "Tornar p√∫blico"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Share Dashboard Api V1 Analytics Dashboards  Dashboard Id  Share Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/reports": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Criar relat√≥rio",
        "description": "Cria um novo relat√≥rio personalizado.\n\nPermite criar relat√≥rios automatizados com agendamento\ne configura√ß√µes espec√≠ficas de an√°lise.\n\nArgs:\n    report_data: Dados do relat√≥rio a ser criado\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    ReportResponse: Relat√≥rio criado\n    \nRaises:\n    HTTPException: 400 se dados s√£o inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_report_api_v1_analytics_reports_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Listar relat√≥rios do usu√°rio",
        "description": "Obt√©m relat√≥rios do usu√°rio com filtros.\n\nLista relat√≥rios criados pelo usu√°rio com op√ß√£o de\nfiltrar por status e aplicar pagina√ß√£o.\n\nArgs:\n    status: Filtro por status do relat√≥rio (opcional)\n    limit: Limite de resultados por p√°gina\n    offset: Offset para pagina√ß√£o\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[ReportResponse]: Lista de relat√≥rios\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_user_reports_api_v1_analytics_reports_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(draft|scheduled|running|completed|failed)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportResponse"
                  },
                  "title": "Response Get User Reports Api V1 Analytics Reports Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/reports/{report_id}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Obter relat√≥rio espec√≠fico",
        "description": "Obt√©m detalhes de um relat√≥rio espec√≠fico.\n\nRetorna informa√ß√µes completas sobre um relat√≥rio,\nincluindo configura√ß√µes, status e hist√≥rico.\n\nArgs:\n    report_id: ID do relat√≥rio\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    ReportResponse: Dados do relat√≥rio\n    \nRaises:\n    HTTPException: 404 se relat√≥rio n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_report_api_v1_analytics_reports__report_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "reports"
        ],
        "summary": "Atualizar relat√≥rio",
        "description": "Atualiza um relat√≥rio existente.\n\nPermite modificar configura√ß√µes, agendamento e\npar√¢metros de um relat√≥rio existente.\n\nArgs:\n    report_id: ID do relat√≥rio\n    report_data: Dados atualizados do relat√≥rio\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    ReportResponse: Relat√≥rio atualizado\n    \nRaises:\n    HTTPException: 404 se relat√≥rio n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de edi√ß√£o\n    HTTPException: 400 se dados inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "update_report_api_v1_analytics_reports__report_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reports"
        ],
        "summary": "Deletar relat√≥rio",
        "description": "Remove um relat√≥rio do usu√°rio.\n\nExclui permanentemente um relat√≥rio e seu hist√≥rico\nde execu√ß√µes, cancelando agendamentos futuros.\n\nArgs:\n    report_id: ID do relat√≥rio\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se relat√≥rio n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de exclus√£o\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "delete_report_api_v1_analytics_reports__report_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Report Api V1 Analytics Reports  Report Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/reports/{report_id}/execute": {
      "post": {
        "tags": [
          "reports"
        ],
        "summary": "Executar relat√≥rio",
        "description": "Executa um relat√≥rio em background.\n\nInicia a execu√ß√£o de um relat√≥rio configurado, processando\nem background para n√£o bloquear a resposta da API.\n\nArgs:\n    report_id: ID do relat√≥rio\n    background_tasks: Tarefas em background do FastAPI\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    ReportExecutionResponse: Dados da execu√ß√£o iniciada\n    \nRaises:\n    HTTPException: 404 se relat√≥rio n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de execu√ß√£o\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "execute_report_api_v1_analytics_reports__report_id__execute_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExecutionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/reports/{report_id}/executions": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Hist√≥rico de execu√ß√µes",
        "description": "Obt√©m hist√≥rico de execu√ß√µes de um relat√≥rio.\n\nLista todas as execu√ß√µes passadas de um relat√≥rio espec√≠fico\ncom informa√ß√µes de status, dura√ß√£o e resultados.\n\nArgs:\n    report_id: ID do relat√≥rio\n    limit: Limite de resultados por p√°gina\n    offset: Offset para pagina√ß√£o\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[ReportExecutionResponse]: Lista de execu√ß√µes\n    \nRaises:\n    HTTPException: 404 se relat√≥rio n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de acesso\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_report_executions_api_v1_analytics_reports__report_id__executions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 10,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportExecutionResponse"
                  },
                  "title": "Response Get Report Executions Api V1 Analytics Reports  Report Id  Executions Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/insights": {
      "post": {
        "tags": [
          "analysis"
        ],
        "summary": "Gerar insights personalizados",
        "description": "Gera insights personalizados baseados em dados do usu√°rio.\n\nAnalisa dados do usu√°rio para gerar insights inteligentes\ne recomenda√ß√µes baseadas em padr√µes identificados.\n\nArgs:\n    insight_request: Configura√ß√£o do insight a ser gerado\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    InsightResponse: Insights gerados\n    \nRaises:\n    HTTPException: 400 se configura√ß√£o inv√°lida\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "generate_insights_api_v1_analytics_insights_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsightRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsightResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/insights/system": {
      "get": {
        "tags": [
          "analytics-insights",
          "admin"
        ],
        "summary": "Insights do sistema",
        "description": "Obt√©m insights do sistema (apenas para administradores).\n\nAnalisa m√©tricas globais do sistema para identificar\ntend√™ncias, problemas e oportunidades de melhoria.\n\nArgs:\n    days: Per√≠odo de an√°lise em dias\n    current_admin: Usu√°rio administrador autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    SystemInsights: Insights do sistema\n    \nRaises:\n    HTTPException: 403 se usu√°rio n√£o √© admin\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_system_insights_api_v1_analytics_insights_system_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 90,
              "minimum": 1,
              "description": "Per√≠odo em dias",
              "default": 7,
              "title": "Days"
            },
            "description": "Per√≠odo em dias"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemInsights"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/insights/user": {
      "get": {
        "tags": [
          "analysis"
        ],
        "summary": "Insights do usu√°rio",
        "description": "Obt√©m insights personalizados do usu√°rio.\n\nAnalisa comportamento e padr√µes espec√≠ficos do usu√°rio\npara gerar insights e recomenda√ß√µes personalizadas.\n\nArgs:\n    days: Per√≠odo de an√°lise em dias\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Insights do usu√°rio\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_user_insights_api_v1_analytics_insights_user_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Per√≠odo em dias",
              "default": 30,
              "title": "Days"
            },
            "description": "Per√≠odo em dias"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get User Insights Api V1 Analytics Insights User Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/insights/trends": {
      "get": {
        "tags": [
          "analysis"
        ],
        "summary": "Insights de tend√™ncias",
        "description": "Obt√©m insights sobre tend√™ncias e padr√µes emergentes.\n\nIdentifica tend√™ncias e padr√µes interessantes nos dados\nque podem ser relevantes para o usu√°rio.\n\nArgs:\n    category: Categoria espec√≠fica de insights (opcional)\n    limit: Limite de insights retornados\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Insights de tend√™ncias\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_trending_insights_api_v1_analytics_insights_trends_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Categoria de insights",
              "title": "Category"
            },
            "description": "Categoria de insights"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 10,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Trending Insights Api V1 Analytics Insights Trends Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/analysis/funnel": {
      "post": {
        "tags": [
          "analysis"
        ],
        "summary": "An√°lise de funil",
        "description": "Executa an√°lise de funil de convers√£o.\n\nAnalisa a jornada do usu√°rio atrav√©s de diferentes etapas\npara identificar pontos de convers√£o e abandono.\n\nArgs:\n    funnel_config: Configura√ß√£o da an√°lise de funil\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    FunnelResult: Resultados da an√°lise de funil\n    \nRaises:\n    HTTPException: 400 se configura√ß√£o inv√°lida\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "analyze_funnel_api_v1_analytics_analysis_funnel_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunnelAnalysis"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunnelResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/analysis/cohort": {
      "post": {
        "tags": [
          "analysis"
        ],
        "summary": "An√°lise de coorte",
        "description": "Executa an√°lise de coorte para reten√ß√£o de usu√°rios.\n\nAnalisa grupos de usu√°rios baseados em per√≠odos espec√≠ficos\npara entender padr√µes de reten√ß√£o e comportamento.\n\nArgs:\n    cohort_config: Configura√ß√£o da an√°lise de coorte\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    CohortResult: Resultados da an√°lise de coorte\n    \nRaises:\n    HTTPException: 400 se configura√ß√£o inv√°lida\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "analyze_cohort_api_v1_analytics_analysis_cohort_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CohortAnalysis"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CohortResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/analysis/ab-test": {
      "post": {
        "tags": [
          "analysis"
        ],
        "summary": "An√°lise de teste A/B",
        "description": "Executa an√°lise de teste A/B.\n\nAnalisa resultados de testes A/B para determinar\nsignific√¢ncia estat√≠stica e performance de variantes.\n\nArgs:\n    test_config: Configura√ß√£o do teste A/B\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    ABTestResult: Resultados da an√°lise A/B\n    \nRaises:\n    HTTPException: 400 se configura√ß√£o inv√°lida\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "analyze_ab_test_api_v1_analytics_analysis_ab_test_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ABTestConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ABTestResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/analysis/correlation": {
      "get": {
        "tags": [
          "analysis"
        ],
        "summary": "An√°lise de correla√ß√£o",
        "description": "Executa an√°lise de correla√ß√£o entre duas m√©tricas.\n\nCalcula a correla√ß√£o estat√≠stica entre duas m√©tricas\nno per√≠odo especificado para identificar relacionamentos.\n\nArgs:\n    metric1: Nome da primeira m√©trica\n    metric2: Nome da segunda m√©trica\n    start_date: Data de in√≠cio da an√°lise\n    end_date: Data de fim da an√°lise\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Resultados da an√°lise de correla√ß√£o\n    \nRaises:\n    HTTPException: 400 se par√¢metros inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "analyze_correlation_api_v1_analytics_analysis_correlation_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "metric1",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Primeira m√©trica",
              "title": "Metric1"
            },
            "description": "Primeira m√©trica"
          },
          {
            "name": "metric2",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Segunda m√©trica",
              "title": "Metric2"
            },
            "description": "Segunda m√©trica"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de in√≠cio",
              "title": "Start Date"
            },
            "description": "Data de in√≠cio"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de fim",
              "title": "End Date"
            },
            "description": "Data de fim"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Analyze Correlation Api V1 Analytics Analysis Correlation Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/analysis/anomalies": {
      "get": {
        "tags": [
          "analysis"
        ],
        "summary": "Detec√ß√£o de anomalias",
        "description": "Detecta anomalias em uma m√©trica espec√≠fica.\n\nUtiliza algoritmos de detec√ß√£o de anomalias para identificar\npontos de dados incomuns que podem indicar problemas ou oportunidades.\n\nArgs:\n    metric: Nome da m√©trica para an√°lise\n    days: Per√≠odo de an√°lise em dias\n    sensitivity: Sensibilidade da detec√ß√£o (0.8-0.99)\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Anomalias detectadas\n    \nRaises:\n    HTTPException: 400 se par√¢metros inv√°lidos\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "detect_anomalies_api_v1_analytics_analysis_anomalies_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "metric",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "M√©trica para an√°lise",
              "title": "Metric"
            },
            "description": "M√©trica para an√°lise"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 7,
              "description": "Per√≠odo em dias",
              "default": 30,
              "title": "Days"
            },
            "description": "Per√≠odo em dias"
          },
          {
            "name": "sensitivity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 0.99,
              "minimum": 0.8,
              "description": "Sensibilidade",
              "default": 0.95,
              "title": "Sensitivity"
            },
            "description": "Sensibilidade"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Detect Anomalies Api V1 Analytics Analysis Anomalies Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/export": {
      "post": {
        "tags": [
          "export"
        ],
        "summary": "Exportar dados",
        "description": "Inicia exporta√ß√£o de dados em background.\n\nCria uma tarefa de exporta√ß√£o que ser√° processada em background,\npermitindo gerar arquivos grandes sem bloquear a API.\n\nArgs:\n    export_request: Configura√ß√£o da exporta√ß√£o\n    background_tasks: Tarefas em background do FastAPI\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    ExportResponse: Dados da exporta√ß√£o iniciada\n    \nRaises:\n    HTTPException: 400 se configura√ß√£o inv√°lida\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "export_data_api_v1_analytics_export_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/exports": {
      "get": {
        "tags": [
          "export"
        ],
        "summary": "Listar exporta√ß√µes do usu√°rio",
        "description": "Obt√©m hist√≥rico de exporta√ß√µes do usu√°rio.\n\nLista todas as exporta√ß√µes criadas pelo usu√°rio com op√ß√£o\nde filtrar por status e aplicar pagina√ß√£o.\n\nArgs:\n    status: Filtro por status da exporta√ß√£o (opcional)\n    limit: Limite de resultados por p√°gina\n    offset: Offset para pagina√ß√£o\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[ExportResponse]: Lista de exporta√ß√µes\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_user_exports_api_v1_analytics_exports_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(pending|processing|completed|failed)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExportResponse"
                  },
                  "title": "Response Get User Exports Api V1 Analytics Exports Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/exports/{export_id}/download": {
      "get": {
        "tags": [
          "export"
        ],
        "summary": "Download de exporta√ß√£o",
        "description": "Faz download de uma exporta√ß√£o conclu√≠da.\n\nPermite baixar o arquivo gerado por uma exporta√ß√£o,\nverificando permiss√µes e disponibilidade do arquivo.\n\nArgs:\n    export_id: ID da exporta√ß√£o\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    FileResponse: Arquivo da exporta√ß√£o\n    \nRaises:\n    HTTPException: 404 se exporta√ß√£o n√£o encontrada\n    HTTPException: 403 se sem permiss√£o de download\n    HTTPException: 400 se exporta√ß√£o n√£o conclu√≠da\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "download_export_api_v1_analytics_exports__export_id__download_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Export Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/alerts": {
      "post": {
        "tags": [
          "alerts"
        ],
        "summary": "Criar alerta",
        "description": "Cria um novo alerta personalizado.\n\nConfigura alertas autom√°ticos baseados em m√©tricas espec√≠ficas\npara notificar quando condi√ß√µes s√£o atingidas.\n\nArgs:\n    alert_rule: Configura√ß√£o da regra de alerta\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    AlertResponse: Alerta criado\n    \nRaises:\n    HTTPException: 400 se configura√ß√£o inv√°lida\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "create_alert_api_v1_analytics_alerts_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "alerts"
        ],
        "summary": "Listar alertas do usu√°rio",
        "description": "Obt√©m alertas do usu√°rio com filtros.\n\nLista alertas criados pelo usu√°rio com op√ß√£o de filtrar\npor status e aplicar pagina√ß√£o.\n\nArgs:\n    status: Filtro por status do alerta (opcional)\n    limit: Limite de resultados por p√°gina\n    offset: Offset para pagina√ß√£o\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    List[AlertResponse]: Lista de alertas\n    \nRaises:\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_user_alerts_api_v1_analytics_alerts_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(active|paused|triggered)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filtrar por status",
              "title": "Status"
            },
            "description": "Filtrar por status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limite de resultados",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limite de resultados"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset para pagina√ß√£o",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset para pagina√ß√£o"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertResponse"
                  },
                  "title": "Response Get User Alerts Api V1 Analytics Alerts Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/alerts/{alert_id}": {
      "put": {
        "tags": [
          "alerts"
        ],
        "summary": "Atualizar alerta",
        "description": "Atualiza configura√ß√£o de um alerta existente.\n\nPermite modificar regras, condi√ß√µes e configura√ß√µes\nde notifica√ß√£o de um alerta existente.\n\nArgs:\n    alert_id: ID do alerta\n    alert_rule: Nova configura√ß√£o do alerta\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    AlertResponse: Alerta atualizado\n    \nRaises:\n    HTTPException: 404 se alerta n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de edi√ß√£o\n    HTTPException: 400 se configura√ß√£o inv√°lida\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "update_alert_api_v1_analytics_alerts__alert_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "alerts"
        ],
        "summary": "Deletar alerta",
        "description": "Remove um alerta do usu√°rio.\n\nExclui permanentemente um alerta e para todas as\nnotifica√ß√µes associadas a ele.\n\nArgs:\n    alert_id: ID do alerta\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se alerta n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de exclus√£o\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "delete_alert_api_v1_analytics_alerts__alert_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Alert Api V1 Analytics Alerts  Alert Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/alerts/{alert_id}/pause": {
      "post": {
        "tags": [
          "alerts"
        ],
        "summary": "Pausar alerta",
        "description": "Pausa temporariamente um alerta.\n\nDesativa as notifica√ß√µes de um alerta sem remov√™-lo,\npermitindo reativa√ß√£o posterior.\n\nArgs:\n    alert_id: ID do alerta\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se alerta n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de controle\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "pause_alert_api_v1_analytics_alerts__alert_id__pause_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Pause Alert Api V1 Analytics Alerts  Alert Id  Pause Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/alerts/{alert_id}/resume": {
      "post": {
        "tags": [
          "alerts"
        ],
        "summary": "Reativar alerta",
        "description": "Reativa um alerta pausado.\n\nRetoma as notifica√ß√µes de um alerta que estava pausado,\nvoltando ao monitoramento normal.\n\nArgs:\n    alert_id: ID do alerta\n    current_user: Usu√°rio autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Mensagem de confirma√ß√£o\n    \nRaises:\n    HTTPException: 404 se alerta n√£o encontrado\n    HTTPException: 403 se sem permiss√£o de controle\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "resume_alert_api_v1_analytics_alerts__alert_id__resume_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Resume Alert Api V1 Analytics Alerts  Alert Id  Resume Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/admin/stats": {
      "get": {
        "tags": [
          "analytics",
          "admin"
        ],
        "summary": "Estat√≠sticas administrativas",
        "description": "Obt√©m estat√≠sticas administrativas do sistema analytics.\n\nRetorna m√©tricas globais sobre uso, performance e recursos\ndo sistema analytics para administradores.\n\nArgs:\n    current_admin: Usu√°rio administrador autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Estat√≠sticas administrativas\n    \nRaises:\n    HTTPException: 403 se usu√°rio n√£o √© admin\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_admin_analytics_stats_api_v1_analytics_admin_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Admin Analytics Stats Api V1 Analytics Admin Stats Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/analytics/admin/cleanup": {
      "post": {
        "tags": [
          "analytics",
          "admin"
        ],
        "summary": "Limpeza de dados antigos",
        "description": "Remove dados antigos do sistema analytics.\n\nExecuta limpeza de dados antigos baseado no per√≠odo especificado\npara manter performance e controlar uso de armazenamento.\n\nArgs:\n    days: Manter dados dos √∫ltimos N dias\n    current_admin: Usu√°rio administrador autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Resultado da limpeza (registros removidos)\n    \nRaises:\n    HTTPException: 403 se usu√°rio n√£o √© admin\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "cleanup_old_data_api_v1_analytics_admin_cleanup_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 30,
              "description": "Manter dados dos √∫ltimos N dias",
              "default": 90,
              "title": "Days"
            },
            "description": "Manter dados dos √∫ltimos N dias"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Cleanup Old Data Api V1 Analytics Admin Cleanup Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/admin/recompute-metrics": {
      "post": {
        "tags": [
          "analytics",
          "admin"
        ],
        "summary": "Recomputar m√©tricas",
        "description": "For√ßa recomputa√ß√£o de m√©tricas para um per√≠odo.\n\nRecalcula todas as m√©tricas agregadas para o per√≠odo especificado,\n√∫til para corre√ß√£o de dados ou ap√≥s mudan√ßas na l√≥gica de c√°lculo.\n\nArgs:\n    background_tasks: Tarefas em background do FastAPI\n    start_date: Data de in√≠cio do reprocessamento\n    end_date: Data de fim do reprocessamento\n    current_admin: Usu√°rio administrador autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    dict: Confirma√ß√£o de in√≠cio do reprocessamento\n    \nRaises:\n    HTTPException: 400 se datas inv√°lidas\n    HTTPException: 403 se usu√°rio n√£o √© admin\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "recompute_metrics_api_v1_analytics_admin_recompute_metrics_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de in√≠cio",
              "title": "Start Date"
            },
            "description": "Data de in√≠cio"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Data de fim",
              "title": "End Date"
            },
            "description": "Data de fim"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Recompute Metrics Api V1 Analytics Admin Recompute Metrics Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/overview": {
      "get": {
        "tags": [
          "analytics"
        ],
        "summary": "Vis√£o geral de analytics",
        "description": "Obt√©m uma vis√£o geral de analytics para o sistema.\n\nRetorna informa√ß√µes sobre o uso, performance e recursos\ndo sistema analytics para administradores.\n\nArgs:\n    current_admin: Usu√°rio administrador autenticado\n    db: Sess√£o do banco de dados\n    \nReturns:\n    AnalyticsOverview: Vis√£o geral de analytics\n    \nRaises:\n    HTTPException: 403 se usu√°rio n√£o √© admin\n    HTTPException: 500 se erro interno do servidor",
        "operationId": "get_analytics_overview_api_v1_analytics_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsOverview"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Rate limit exceeded"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          },
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Check",
        "description": "Endpoint de verifica√ß√£o de sa√∫de da API\nRetorna status da aplica√ß√£o",
        "operationId": "health_check_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/{agent_id}/tools": {
      "get": {
        "tags": [
          "agent-tools"
        ],
        "summary": "Listar ferramentas do agent",
        "description": "Lista todas as ferramentas associadas a um agent",
        "operationId": "list_agent_tools",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentToolListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "agent-tools"
        ],
        "summary": "Adicionar ferramenta ao agent",
        "description": "Adiciona uma ferramenta a um agent",
        "operationId": "add_agent_tool",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentToolCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentToolResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          },
          "409": {
            "description": "Ferramenta j√° est√° associada ao agent"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/agents/{agent_id}/tools/{tool_id}": {
      "put": {
        "tags": [
          "agent-tools"
        ],
        "summary": "Atualizar configura√ß√£o da ferramenta",
        "description": "Atualiza a configura√ß√£o de uma ferramenta do agent",
        "operationId": "update_agent_tool",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          },
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tool Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentToolUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentToolResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent ou ferramenta n√£o encontrados"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "agent-tools"
        ],
        "summary": "Remover ferramenta do agent",
        "description": "Remove uma ferramenta de um agent",
        "operationId": "remove_agent_tool",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          },
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tool Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Agent ou ferramenta n√£o encontrados"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/agents/{agent_id}/models": {
      "get": {
        "tags": [
          "agent-models"
        ],
        "summary": "Listar modelos do agent",
        "description": "Lista todos os modelos LLM associados a um agent",
        "operationId": "list_agent_models",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentModelListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "agent-models"
        ],
        "summary": "Adicionar modelo ao agent",
        "description": "Adiciona um modelo LLM a um agent",
        "operationId": "add_agent_model",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentModelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          },
          "409": {
            "description": "Modelo j√° est√° associado ao agent"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/agents/{agent_id}/models/{llm_id}": {
      "put": {
        "tags": [
          "agent-models"
        ],
        "summary": "Atualizar configura√ß√£o do modelo",
        "description": "Atualiza as configura√ß√µes de override de um modelo do agent",
        "operationId": "update_agent_model",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          },
          {
            "name": "llm_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "LLM Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentModelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent ou modelo n√£o encontrados"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "agent-models"
        ],
        "summary": "Remover modelo do agent",
        "description": "Remove um modelo LLM de um agent",
        "operationId": "remove_agent_model",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          },
          {
            "name": "llm_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "LLM Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Agent ou modelo n√£o encontrados"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/agents/{agent_id}/configurations": {
      "get": {
        "tags": [
          "agent-configurations"
        ],
        "summary": "Listar configura√ß√µes do agent",
        "description": "Lista todas as configura√ß√µes versionadas de um agent",
        "operationId": "list_agent_configurations",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentConfigurationListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "agent-configurations"
        ],
        "summary": "Criar nova configura√ß√£o",
        "description": "Cria uma nova vers√£o de configura√ß√£o para um agent",
        "operationId": "create_agent_configuration",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentConfigurationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentConfigurationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/agents/{agent_id}/acl": {
      "get": {
        "tags": [
          "agent-advanced"
        ],
        "summary": "Listar permiss√µes do agent",
        "description": "Lista todas as permiss√µes de acesso de um agent",
        "operationId": "list_agent_acl",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentACLListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "agent-advanced"
        ],
        "summary": "Adicionar permiss√£o",
        "description": "Adiciona permiss√£o de acesso para um usu√°rio ao agent",
        "operationId": "add_agent_acl",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentACLCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentACLResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          },
          "409": {
            "description": "Permiss√£o j√° existe para este usu√°rio"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/agents/{agent_id}/errors": {
      "get": {
        "tags": [
          "agent-advanced"
        ],
        "summary": "Listar logs de erro",
        "description": "Lista logs de erro de um agent com filtros",
        "operationId": "list_agent_errors",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          },
          {
            "name": "error_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Error Code"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Page",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "title": "Size",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentErrorLogListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "agent-advanced"
        ],
        "summary": "Registrar erro",
        "description": "Registra um novo log de erro para o agent",
        "operationId": "create_agent_error_log",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentErrorLogCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentErrorLogResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/agents/{agent_id}/metrics": {
      "get": {
        "tags": [
          "agent-advanced"
        ],
        "summary": "Listar m√©tricas de uso",
        "description": "Lista m√©tricas de uso de um agent",
        "operationId": "list_agent_metrics",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Page",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "title": "Size",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentUsageMetricListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/agents/{agent_id}/metrics/summary": {
      "get": {
        "tags": [
          "agent-advanced"
        ],
        "summary": "Resumo de m√©tricas",
        "description": "Obt√©m resumo das m√©tricas de uso do agent",
        "operationId": "get_agent_metrics_summary",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentUsageMetricSummary"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/agents/{agent_id}/knowledge-bases": {
      "get": {
        "tags": [
          "agent-advanced"
        ],
        "summary": "Listar knowledge bases",
        "description": "Lista knowledge bases associadas ao agent",
        "operationId": "list_agent_kbs",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentKBListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "agent-advanced"
        ],
        "summary": "Associar knowledge base",
        "description": "Associa uma knowledge base ao agent",
        "operationId": "add_agent_kb",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Agent Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentKBCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentKBResponse"
                }
              }
            }
          },
          "404": {
            "description": "Agent n√£o encontrado"
          },
          "409": {
            "description": "Knowledge base j√° est√° associada ao agent"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ABTestConfig": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "variants": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "maxItems": 10,
            "minItems": 2,
            "title": "Variants"
          },
          "success_metric": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Success Metric"
          },
          "traffic_allocation": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Traffic Allocation"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "minimum_sample_size": {
            "type": "integer",
            "minimum": 10.0,
            "title": "Minimum Sample Size",
            "default": 100
          }
        },
        "type": "object",
        "required": [
          "name",
          "variants",
          "success_metric",
          "traffic_allocation",
          "start_date",
          "end_date"
        ],
        "title": "ABTestConfig"
      },
      "ABTestResult": {
        "properties": {
          "test_id": {
            "type": "integer",
            "title": "Test Id"
          },
          "variant_results": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Variant Results"
          },
          "statistical_significance": {
            "type": "boolean",
            "title": "Statistical Significance"
          },
          "confidence_level": {
            "type": "number",
            "title": "Confidence Level"
          },
          "winner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Winner"
          },
          "recommendation": {
            "type": "string",
            "title": "Recommendation"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          }
        },
        "type": "object",
        "required": [
          "test_id",
          "variant_results",
          "statistical_significance",
          "confidence_level",
          "recommendation",
          "generated_at"
        ],
        "title": "ABTestResult"
      },
      "ActivityResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "user_avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Avatar"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "resource_type": {
            "type": "string",
            "title": "Resource Type"
          },
          "resource_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "user_id",
          "user_name",
          "action",
          "resource_type",
          "description",
          "created_at"
        ],
        "title": "ActivityResponse"
      },
      "AgentCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "agent_type": {
            "type": "string",
            "title": "Agent Type",
            "default": "conversational"
          },
          "personality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "model_provider": {
            "type": "string",
            "title": "Model Provider",
            "default": "openai"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "default": "gpt-3.5-turbo"
          },
          "temperature": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.0,
            "title": "Temperature",
            "default": 0.7
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 128000.0,
            "minimum": 1.0,
            "title": "Max Tokens",
            "default": 1000
          },
          "tools": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tools"
          },
          "knowledge_base": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Knowledge Base"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "AgentCreate"
      },
      "AgentListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "AgentListResponse"
      },
      "AgentResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "agent_type": {
            "type": "string",
            "title": "Agent Type",
            "default": "conversational"
          },
          "personality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "model_provider": {
            "type": "string",
            "title": "Model Provider"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature"
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "tools": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tools"
          },
          "knowledge_base": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Knowledge Base"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "conversation_count": {
            "type": "integer",
            "title": "Conversation Count"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count"
          },
          "last_active_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Active At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "user_id",
          "model_provider",
          "model",
          "temperature",
          "max_tokens",
          "status",
          "tools",
          "conversation_count",
          "message_count",
          "rating_average",
          "rating_count"
        ],
        "title": "AgentResponse"
      },
      "AgentUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "agent_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Type"
          },
          "personality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "model_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Provider"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 128000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "tools": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools"
          },
          "knowledge_base": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Knowledge Base"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "title": "AgentUpdate"
      },
      "AlertResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "rule": {
            "$ref": "#/components/schemas/AlertRule"
          },
          "triggered_at": {
            "type": "string",
            "format": "date-time",
            "title": "Triggered At"
          },
          "resolved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolved At"
          },
          "current_value": {
            "type": "number",
            "title": "Current Value"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "severity": {
            "type": "string",
            "pattern": "^(low|medium|high|critical)$",
            "title": "Severity"
          }
        },
        "type": "object",
        "required": [
          "id",
          "rule",
          "triggered_at",
          "current_value",
          "message",
          "severity"
        ],
        "title": "AlertResponse"
      },
      "AlertRule": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "metric_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Metric Name"
          },
          "condition": {
            "type": "string",
            "pattern": "^(greater_than|less_than|equals|not_equals)$",
            "title": "Condition"
          },
          "threshold": {
            "type": "number",
            "title": "Threshold"
          },
          "time_window_minutes": {
            "type": "integer",
            "maximum": 1440.0,
            "minimum": 1.0,
            "title": "Time Window Minutes",
            "default": 5
          },
          "notification_channels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1,
            "title": "Notification Channels"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "metric_name",
          "condition",
          "threshold",
          "notification_channels"
        ],
        "title": "AlertRule"
      },
      "AnalyticsOverview": {
        "properties": {
          "period": {
            "additionalProperties": {
              "type": "string",
              "format": "date-time"
            },
            "type": "object",
            "title": "Period"
          },
          "user_metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "User Metrics"
          },
          "performance_metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Performance Metrics"
          },
          "business_metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Business Metrics"
          },
          "trends": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Trends"
          },
          "anomalies": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Anomalies"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          }
        },
        "type": "object",
        "required": [
          "period",
          "user_metrics",
          "performance_metrics",
          "business_metrics",
          "trends",
          "anomalies",
          "generated_at"
        ],
        "title": "AnalyticsOverview"
      },
      "AnalyticsQuery": {
        "properties": {
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "event_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventType"
              },
              {
                "type": "null"
              }
            ]
          },
          "event_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Category"
          },
          "event_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Name"
          },
          "metric_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Name"
          },
          "group_by": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group By"
          },
          "aggregation": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(count|sum|avg|min|max)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aggregation",
            "default": "count"
          },
          "order_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order By"
          },
          "order_direction": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(asc|desc)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Direction",
            "default": "desc"
          },
          "limit": {
            "type": "integer",
            "maximum": 10000.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 100
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "default": 0
          }
        },
        "type": "object",
        "title": "AnalyticsQuery"
      },
      "Body_change_password_api_v1_auth_change_password_post": {
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "Body_change_password_api_v1_auth_change_password_post"
      },
      "Body_create_component_version_api_v1_marketplace_components__component_id__versions_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_create_component_version_api_v1_marketplace_components__component_id__versions_post"
      },
      "Body_delete_account_api_v1_auth_account_delete": {
        "properties": {
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "Body_delete_account_api_v1_auth_account_delete"
      },
      "Body_login_api_v1_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_api_v1_auth_login_post"
      },
      "Body_upload_file_api_v1_files_upload_post": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Categoria do arquivo"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Arquivo a ser enviado"
          }
        },
        "type": "object",
        "required": [
          "category",
          "file"
        ],
        "title": "Body_upload_file_api_v1_files_upload_post"
      },
      "BulkComponentOperation": {
        "properties": {
          "action": {
            "type": "string",
            "pattern": "^(approve|reject|suspend|feature|unfeature)$",
            "title": "Action"
          },
          "component_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Component Ids"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "action",
          "component_ids"
        ],
        "title": "BulkComponentOperation"
      },
      "BulkMemberOperation": {
        "properties": {
          "action": {
            "type": "string",
            "pattern": "^(remove|change_role|send_reminder)$",
            "title": "Action"
          },
          "member_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Member Ids"
          },
          "new_role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkspaceRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "action",
          "member_ids"
        ],
        "title": "BulkMemberOperation"
      },
      "BulkOperationResponse": {
        "properties": {
          "success_count": {
            "type": "integer",
            "title": "Success Count"
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count"
          },
          "errors": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "success_count",
          "error_count",
          "errors"
        ],
        "title": "BulkOperationResponse"
      },
      "BulkProjectOperation": {
        "properties": {
          "action": {
            "type": "string",
            "pattern": "^(archive|delete|move_workspace)$",
            "title": "Action"
          },
          "project_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Project Ids"
          },
          "target_workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Workspace Id"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "action",
          "project_ids"
        ],
        "title": "BulkProjectOperation"
      },
      "CohortAnalysis": {
        "properties": {
          "cohort_type": {
            "type": "string",
            "pattern": "^(registration|first_purchase|first_workflow)$",
            "title": "Cohort Type"
          },
          "period_type": {
            "type": "string",
            "pattern": "^(day|week|month)$",
            "title": "Period Type"
          },
          "periods": {
            "type": "integer",
            "maximum": 52.0,
            "minimum": 1.0,
            "title": "Periods",
            "default": 12
          },
          "date_range": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Date Range"
          }
        },
        "type": "object",
        "required": [
          "cohort_type",
          "period_type",
          "date_range"
        ],
        "title": "CohortAnalysis"
      },
      "CohortResult": {
        "properties": {
          "cohort_data": {
            "items": {
              "items": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "type": "array"
            },
            "type": "array",
            "title": "Cohort Data"
          },
          "cohort_labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Cohort Labels"
          },
          "period_labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Period Labels"
          },
          "total_cohorts": {
            "type": "integer",
            "title": "Total Cohorts"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          }
        },
        "type": "object",
        "required": [
          "cohort_data",
          "cohort_labels",
          "period_labels",
          "total_cohorts",
          "generated_at"
        ],
        "title": "CohortResult"
      },
      "CollectionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "template_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Template Ids"
          }
        },
        "type": "object",
        "required": [
          "name",
          "template_ids"
        ],
        "title": "CollectionCreate",
        "description": "Schema para cria√ß√£o de cole√ß√£o"
      },
      "CollectionResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "collection_id": {
            "type": "string",
            "title": "Collection Id"
          },
          "creator_id": {
            "type": "string",
            "title": "Creator Id"
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured"
          },
          "template_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Template Ids"
          },
          "view_count": {
            "type": "integer",
            "title": "View Count"
          },
          "follow_count": {
            "type": "integer",
            "title": "Follow Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "creator_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator Name"
          },
          "creator_avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator Avatar"
          },
          "templates_count": {
            "type": "integer",
            "title": "Templates Count",
            "default": 0
          },
          "templates_preview": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TemplateResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templates Preview"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "collection_id",
          "creator_id",
          "is_featured",
          "template_ids",
          "view_count",
          "follow_count",
          "created_at",
          "updated_at"
        ],
        "title": "CollectionResponse",
        "description": "Schema de resposta para cole√ß√£o"
      },
      "ComponentCategory": {
        "type": "string",
        "enum": [
          "ai_ml",
          "data_processing",
          "automation",
          "integration",
          "analytics",
          "communication",
          "productivity",
          "utilities"
        ],
        "title": "ComponentCategory"
      },
      "ComponentCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/ComponentCategory"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "component_type": {
            "$ref": "#/components/schemas/ComponentType"
          },
          "component_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Component Data"
          },
          "configuration_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration Schema"
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies"
          },
          "compatibility": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compatibility"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "changelog": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changelog"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          },
          "icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Url"
          },
          "screenshots": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Screenshots"
          },
          "demo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "is_free": {
            "type": "boolean",
            "title": "Is Free",
            "default": true
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "default": "USD"
          },
          "license_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LicenseType"
              },
              {
                "type": "null"
              }
            ],
            "default": "MIT"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "default": "1.0.0"
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "component_type",
          "component_data"
        ],
        "title": "ComponentCreate"
      },
      "ComponentModerationResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "author_name": {
            "type": "string",
            "title": "Author Name"
          },
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Submitted At"
          },
          "review_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Notes"
          },
          "reviewer_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewer Id"
          },
          "reviewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "author_name",
          "status",
          "submitted_at"
        ],
        "title": "ComponentModerationResponse"
      },
      "ComponentResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/ComponentCategory"
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "component_type": {
            "$ref": "#/components/schemas/ComponentType"
          },
          "component_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Component Data"
          },
          "configuration_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration Schema"
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies"
          },
          "compatibility": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compatibility"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "changelog": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changelog"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          },
          "icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Url"
          },
          "screenshots": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Screenshots"
          },
          "demo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "is_free": {
            "type": "boolean",
            "title": "Is Free",
            "default": true
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "default": "USD"
          },
          "license_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LicenseType"
              },
              {
                "type": "null"
              }
            ],
            "default": "MIT"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "default": "1.0.0"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "author_id": {
            "type": "string",
            "title": "Author Id"
          },
          "author_name": {
            "type": "string",
            "title": "Author Name"
          },
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count",
            "default": 0
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average",
            "default": 0.0
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count",
            "default": 0
          },
          "popularity_score": {
            "type": "number",
            "title": "Popularity Score",
            "default": 0.0
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured",
            "default": false
          },
          "last_download_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Download At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "component_type",
          "component_data",
          "id",
          "slug",
          "author_id",
          "author_name",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "ComponentResponse"
      },
      "ComponentSearchResponse": {
        "properties": {
          "components": {
            "items": {
              "$ref": "#/components/schemas/ComponentResponse"
            },
            "type": "array",
            "title": "Components"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "components",
          "total",
          "page",
          "pages",
          "has_next",
          "has_prev"
        ],
        "title": "ComponentSearchResponse"
      },
      "ComponentStatus": {
        "type": "string",
        "enum": [
          "draft",
          "pending",
          "approved",
          "rejected",
          "suspended"
        ],
        "title": "ComponentStatus"
      },
      "ComponentType": {
        "type": "string",
        "enum": [
          "workflow_template",
          "node_component",
          "integration",
          "plugin",
          "theme",
          "widget"
        ],
        "title": "ComponentType"
      },
      "ComponentUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000,
                "minLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ComponentCategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Subcategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "component_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Component Data"
          },
          "configuration_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration Schema"
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies"
          },
          "compatibility": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compatibility"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "changelog": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changelog"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          },
          "icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Url"
          },
          "screenshots": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Screenshots"
          },
          "demo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Url"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "is_free": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Free"
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "license_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LicenseType"
              },
              {
                "type": "null"
              }
            ]
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          }
        },
        "type": "object",
        "title": "ComponentUpdate"
      },
      "ComponentVersionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "component_id": {
            "type": "integer",
            "title": "Component Id"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "is_latest": {
            "type": "boolean",
            "title": "Is Latest",
            "default": false
          },
          "is_stable": {
            "type": "boolean",
            "title": "Is Stable",
            "default": true
          },
          "component_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Component Data"
          },
          "dependencies": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Dependencies"
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "component_id",
          "version",
          "component_data",
          "dependencies",
          "created_at"
        ],
        "title": "ComponentVersionResponse"
      },
      "ConversationCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          }
        },
        "type": "object",
        "title": "ConversationCreate"
      },
      "ConversationListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ConversationResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "ConversationListResponse"
      },
      "ConversationResponse": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          },
          "total_tokens_used": {
            "type": "integer",
            "title": "Total Tokens Used"
          },
          "context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          },
          "last_message_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Message At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "status",
          "message_count",
          "total_tokens_used"
        ],
        "title": "ConversationResponse"
      },
      "CountTokensResponse": {
        "properties": {
          "token_count": {
            "type": "integer",
            "title": "Token Count",
            "description": "N√∫mero total de tokens no texto"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Provedor utilizado para contagem"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Modelo utilizado para contagem (se especificado)"
          }
        },
        "type": "object",
        "required": [
          "token_count",
          "provider"
        ],
        "title": "CountTokensResponse",
        "description": "Resposta para contagem de tokens.",
        "example": {
          "model": "gpt-4o",
          "provider": "openai",
          "token_count": 9
        }
      },
      "DashboardCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "layout": {
            "$ref": "#/components/schemas/DashboardLayout"
          },
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/WidgetConfig"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Widgets"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "refresh_interval": {
            "type": "integer",
            "maximum": 3600.0,
            "minimum": 30.0,
            "title": "Refresh Interval",
            "default": 300
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "name",
          "layout",
          "widgets"
        ],
        "title": "DashboardCreate"
      },
      "DashboardData": {
        "properties": {
          "dashboard": {
            "$ref": "#/components/schemas/DashboardResponse"
          },
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "dashboard",
          "data",
          "last_updated"
        ],
        "title": "DashboardData"
      },
      "DashboardLayout": {
        "properties": {
          "columns": {
            "type": "integer",
            "maximum": 24.0,
            "minimum": 1.0,
            "title": "Columns",
            "default": 12
          },
          "row_height": {
            "type": "integer",
            "maximum": 500.0,
            "minimum": 50.0,
            "title": "Row Height",
            "default": 100
          },
          "margin": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 2,
            "minItems": 2,
            "title": "Margin",
            "default": [
              10,
              10
            ]
          }
        },
        "type": "object",
        "title": "DashboardLayout"
      },
      "DashboardResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "layout": {
            "$ref": "#/components/schemas/DashboardLayout"
          },
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/WidgetConfig"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Widgets"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "refresh_interval": {
            "type": "integer",
            "maximum": 3600.0,
            "minimum": 30.0,
            "title": "Refresh Interval",
            "default": 300
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "view_count": {
            "type": "integer",
            "title": "View Count",
            "default": 0
          },
          "last_viewed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Viewed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "layout",
          "widgets",
          "id",
          "user_id",
          "user_name",
          "created_at",
          "updated_at"
        ],
        "title": "DashboardResponse"
      },
      "DashboardUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "layout": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DashboardLayout"
              },
              {
                "type": "null"
              }
            ]
          },
          "widgets": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WidgetConfig"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Widgets"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "refresh_interval": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3600.0,
                "minimum": 30.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Interval"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "title": "DashboardUpdate"
      },
      "EmailVerificationRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "EmailVerificationRequest"
      },
      "EventCreate": {
        "properties": {
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "event_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Event Name"
          },
          "event_category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Category"
          },
          "event_action": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Action"
          },
          "event_label": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Label"
          },
          "event_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Value"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "page_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Url"
          },
          "page_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Title"
          },
          "referrer": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Referrer"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 45
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "browser": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser"
          },
          "os": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Os"
          },
          "screen_resolution": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Screen Resolution"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "event_name"
        ],
        "title": "EventCreate"
      },
      "EventResponse": {
        "properties": {
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventType"
          },
          "event_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Event Name"
          },
          "event_category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Category"
          },
          "event_action": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Action"
          },
          "event_label": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Label"
          },
          "event_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Value"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "page_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Url"
          },
          "page_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Title"
          },
          "referrer": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Referrer"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 45
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "browser": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser"
          },
          "os": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Os"
          },
          "screen_resolution": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Screen Resolution"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "event_name",
          "id",
          "created_at"
        ],
        "title": "EventResponse"
      },
      "EventType": {
        "type": "string",
        "enum": [
          "page_view",
          "click",
          "form_submit",
          "workflow_create",
          "workflow_execute",
          "user_login",
          "user_logout",
          "feature_use",
          "error",
          "custom"
        ],
        "title": "EventType"
      },
      "ExecutionBatch": {
        "properties": {
          "execution_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Execution Ids"
          },
          "action": {
            "type": "string",
            "pattern": "^(cancel|retry|delete)$",
            "title": "Action"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "execution_ids",
          "action"
        ],
        "title": "ExecutionBatch",
        "description": "Schema para opera√ß√µes em lote"
      },
      "ExecutionControl": {
        "properties": {
          "action": {
            "type": "string",
            "pattern": "^(start|pause|resume|cancel|retry)$",
            "title": "Action"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "ExecutionControl",
        "description": "Schema para controle de execu√ß√£o"
      },
      "ExecutionCreate": {
        "properties": {
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data"
          },
          "context_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Data"
          },
          "variables": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variables"
          },
          "priority": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Priority",
            "default": 5
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds",
            "default": 3600
          },
          "auto_retry": {
            "type": "boolean",
            "title": "Auto Retry",
            "default": true
          },
          "max_retries": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Max Retries",
            "default": 3
          },
          "notify_on_completion": {
            "type": "boolean",
            "title": "Notify On Completion",
            "default": true
          },
          "notify_on_failure": {
            "type": "boolean",
            "title": "Notify On Failure",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "workflow_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Workflow Id"
          }
        },
        "type": "object",
        "required": [
          "workflow_id"
        ],
        "title": "ExecutionCreate",
        "description": "Schema para cria√ß√£o de execu√ß√£o de workflow"
      },
      "ExecutionListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExecutionResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "ExecutionListResponse",
        "description": "Resposta paginada para execu√ß√µes de workflows"
      },
      "ExecutionResponse": {
        "properties": {
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data"
          },
          "context_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Data"
          },
          "variables": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variables"
          },
          "priority": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Priority",
            "default": 5
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds",
            "default": 3600
          },
          "auto_retry": {
            "type": "boolean",
            "title": "Auto Retry",
            "default": true
          },
          "max_retries": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Max Retries",
            "default": 3
          },
          "notify_on_completion": {
            "type": "boolean",
            "title": "Notify On Completion",
            "default": true
          },
          "notify_on_failure": {
            "type": "boolean",
            "title": "Notify On Failure",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "execution_id": {
            "type": "string",
            "title": "Execution Id"
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workflow Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/ExecutionStatus"
          },
          "output_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Data"
          },
          "total_nodes": {
            "type": "integer",
            "title": "Total Nodes"
          },
          "completed_nodes": {
            "type": "integer",
            "title": "Completed Nodes"
          },
          "failed_nodes": {
            "type": "integer",
            "title": "Failed Nodes"
          },
          "progress_percentage": {
            "type": "integer",
            "title": "Progress Percentage"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "timeout_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout At"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "actual_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Duration"
          },
          "execution_log": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Log"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          },
          "debug_info": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Debug Info"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "execution_id",
          "workflow_id",
          "user_id",
          "status",
          "total_nodes",
          "completed_nodes",
          "failed_nodes",
          "progress_percentage",
          "retry_count",
          "created_at",
          "updated_at"
        ],
        "title": "ExecutionResponse",
        "description": "Schema de resposta para execu√ß√£o de workflow"
      },
      "ExecutionStats": {
        "properties": {
          "total_executions": {
            "type": "integer",
            "title": "Total Executions"
          },
          "running_executions": {
            "type": "integer",
            "title": "Running Executions"
          },
          "completed_executions": {
            "type": "integer",
            "title": "Completed Executions"
          },
          "failed_executions": {
            "type": "integer",
            "title": "Failed Executions"
          },
          "cancelled_executions": {
            "type": "integer",
            "title": "Cancelled Executions"
          },
          "average_duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Duration Seconds"
          },
          "success_rate_percentage": {
            "type": "number",
            "title": "Success Rate Percentage"
          },
          "total_nodes_executed": {
            "type": "integer",
            "title": "Total Nodes Executed"
          },
          "average_nodes_per_execution": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Nodes Per Execution"
          },
          "most_used_workflows": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Most Used Workflows"
          },
          "execution_trends": {
            "additionalProperties": true,
            "type": "object",
            "title": "Execution Trends"
          }
        },
        "type": "object",
        "required": [
          "total_executions",
          "running_executions",
          "completed_executions",
          "failed_executions",
          "cancelled_executions",
          "success_rate_percentage",
          "total_nodes_executed",
          "most_used_workflows",
          "execution_trends"
        ],
        "title": "ExecutionStats",
        "description": "Estat√≠sticas de execu√ß√£o"
      },
      "ExecutionStatus": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "paused",
          "completed",
          "failed",
          "cancelled",
          "timeout"
        ],
        "title": "ExecutionStatus",
        "description": "Status de execu√ß√£o do workflow"
      },
      "ExportRequest": {
        "properties": {
          "data_type": {
            "type": "string",
            "pattern": "^(events|metrics|users|workflows)$",
            "title": "Data Type"
          },
          "format": {
            "$ref": "#/components/schemas/ReportFormat",
            "default": "csv"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "date_range": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Range"
          },
          "columns": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Columns"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit"
          }
        },
        "type": "object",
        "required": [
          "data_type"
        ],
        "title": "ExportRequest"
      },
      "ExportResponse": {
        "properties": {
          "export_id": {
            "type": "string",
            "title": "Export Id"
          },
          "status": {
            "type": "string",
            "pattern": "^(processing|completed|failed)$",
            "title": "Status"
          },
          "file_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Url"
          },
          "file_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size Bytes"
          },
          "row_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Row Count"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "export_id",
          "status",
          "created_at"
        ],
        "title": "ExportResponse"
      },
      "FavoriteCreate": {
        "properties": {
          "template_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Template Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "template_id"
        ],
        "title": "FavoriteCreate",
        "description": "Schema para adicionar favorito"
      },
      "FavoriteResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "template_id": {
            "type": "integer",
            "title": "Template Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "template_name": {
            "type": "string",
            "title": "Template Name"
          },
          "template_title": {
            "type": "string",
            "title": "Template Title"
          },
          "template_category": {
            "type": "string",
            "title": "Template Category"
          }
        },
        "type": "object",
        "required": [
          "id",
          "template_id",
          "user_id",
          "created_at",
          "template_name",
          "template_title",
          "template_category"
        ],
        "title": "FavoriteResponse",
        "description": "Schema de resposta para favorito"
      },
      "FileDownloadResponse": {
        "properties": {
          "download_url": {
            "type": "string",
            "title": "Download Url",
            "description": "URL para download do arquivo"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At",
            "description": "Data de expira√ß√£o da URL"
          }
        },
        "type": "object",
        "required": [
          "download_url",
          "expires_at"
        ],
        "title": "FileDownloadResponse",
        "description": "Esquema para resposta de download de arquivo.",
        "example": {
          "download_url": "https://api.synapscale.com/download/123e4567-e89b-12d3-a456-426614174000?token=abc123",
          "expires_at": "2023-01-01T13:00:00"
        }
      },
      "FileListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FileResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Lista de arquivos"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total de arquivos"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "P√°gina atual"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Tamanho da p√°gina"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total de p√°ginas"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "FileListResponse",
        "description": "Esquema para resposta de listagem de arquivos.",
        "example": {
          "items": [
            {
              "category": "document",
              "created_at": "2023-01-01T12:00:00",
              "description": "Relat√≥rio financeiro anual",
              "filename": "documento.pdf",
              "id": "123e4567-e89b-12d3-a456-426614174000",
              "is_public": false,
              "mime_type": "application/pdf",
              "size": "1048576",
              "status": "completed",
              "tags": [
                "relat√≥rio",
                "financeiro"
              ],
              "updated_at": "2023-01-01T12:00:00",
              "user_id": "user_123"
            }
          ],
          "page": 1,
          "pages": 1,
          "size": 10,
          "total": 1
        }
      },
      "FileResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "original_filename": {
            "type": "string",
            "title": "Original Filename"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename",
          "original_filename",
          "content_type",
          "file_size",
          "is_public",
          "created_at",
          "updated_at"
        ],
        "title": "FileResponse",
        "description": "Esquema para resposta de arquivo.",
        "example": {
          "category": "document",
          "created_at": "2023-01-01T12:00:00",
          "description": "Relat√≥rio financeiro anual",
          "filename": "documento.pdf",
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "is_public": false,
          "mime_type": "application/pdf",
          "size": "1048576",
          "status": "completed",
          "tags": [
            "relat√≥rio",
            "financeiro"
          ],
          "updated_at": "2023-01-01T12:00:00",
          "user_id": "user_123"
        }
      },
      "FileUploadResponse": {
        "properties": {
          "file_id": {
            "type": "string",
            "format": "uuid",
            "title": "File Id",
            "description": "ID √∫nico do arquivo"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Mensagem de sucesso"
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "message"
        ],
        "title": "FileUploadResponse",
        "description": "Esquema para resposta de upload de arquivo.",
        "example": {
          "file_id": "123e4567-e89b-12d3-a456-426614174000",
          "message": "Arquivo enviado com sucesso"
        }
      },
      "FinishReason": {
        "type": "string",
        "enum": [
          "stop",
          "length",
          "content_filter",
          "error"
        ],
        "title": "FinishReason",
        "description": "Raz√µes de t√©rmino da gera√ß√£o de texto."
      },
      "FunnelAnalysis": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "steps": {
            "items": {
              "$ref": "#/components/schemas/FunnelStep"
            },
            "type": "array",
            "maxItems": 10,
            "minItems": 2,
            "title": "Steps"
          },
          "time_window_hours": {
            "type": "integer",
            "maximum": 8760.0,
            "minimum": 1.0,
            "title": "Time Window Hours",
            "default": 24
          },
          "date_range": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Date Range"
          }
        },
        "type": "object",
        "required": [
          "name",
          "steps",
          "date_range"
        ],
        "title": "FunnelAnalysis"
      },
      "FunnelResult": {
        "properties": {
          "funnel_data": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Funnel Data"
          },
          "total_users": {
            "type": "integer",
            "title": "Total Users"
          },
          "conversion_rate": {
            "type": "number",
            "title": "Conversion Rate"
          },
          "time_range": {
            "type": "string",
            "title": "Time Range"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          }
        },
        "type": "object",
        "required": [
          "funnel_data",
          "total_users",
          "conversion_rate",
          "time_range",
          "generated_at"
        ],
        "title": "FunnelResult"
      },
      "FunnelStep": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "event_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Event Name"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          }
        },
        "type": "object",
        "required": [
          "name",
          "event_name"
        ],
        "title": "FunnelStep"
      },
      "GenerateTextResponse": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Texto gerado pelo modelo"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Provedor utilizado"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "Modelo utilizado"
          },
          "usage": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Usage",
            "description": "Estat√≠sticas de uso de tokens"
          },
          "finish_reason": {
            "$ref": "#/components/schemas/FinishReason",
            "description": "Raz√£o de t√©rmino da gera√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "text",
          "provider",
          "model",
          "usage",
          "finish_reason"
        ],
        "title": "GenerateTextResponse",
        "description": "Resposta para gera√ß√£o de texto.",
        "example": {
          "finish_reason": "stop",
          "model": "claude-3-sonnet-20240229",
          "provider": "claude",
          "text": "Machine learning √© uma forma de intelig√™ncia artificial que permite aos computadores aprender com dados e melhorar com a experi√™ncia, sem serem explicitamente programados para cada tarefa. Em termos simples, em vez de dar instru√ß√µes detalhadas ao computador sobre como resolver um problema, voc√™ fornece exemplos do problema e da solu√ß√£o, e o computador aprende os padr√µes para resolver problemas semelhantes no futuro.\n\nPense nisso como ensinar uma crian√ßa: em vez de explicar todas as regras gramaticais, voc√™ mostra exemplos de frases corretas, e ela aprende os padr√µes com o tempo. Da mesma forma, algoritmos de machine learning identificam padr√µes em dados e usam esses padr√µes para fazer previs√µes ou tomar decis√µes sobre novos dados.",
          "usage": {
            "completion_tokens": 128,
            "prompt_tokens": 12,
            "total_tokens": 140
          }
        }
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InsightRequest": {
        "properties": {
          "primary_type": {
            "$ref": "#/components/schemas/InsightType"
          },
          "insight_types": {
            "items": {
              "$ref": "#/components/schemas/InsightType"
            },
            "type": "array",
            "maxItems": 10,
            "minItems": 1,
            "title": "Insight Types"
          },
          "date_range": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Date Range",
            "description": "start and end dates in ISO format"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "include_recommendations": {
            "type": "boolean",
            "title": "Include Recommendations",
            "default": true
          },
          "confidence_threshold": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Confidence Threshold",
            "default": 0.5
          }
        },
        "type": "object",
        "required": [
          "primary_type",
          "insight_types",
          "date_range"
        ],
        "title": "InsightRequest"
      },
      "InsightResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "insight_type": {
            "$ref": "#/components/schemas/InsightType"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "insights": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Insights"
          },
          "recommendations": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Recommendations"
          },
          "metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metrics"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score"
          },
          "data_points": {
            "type": "integer",
            "title": "Data Points"
          },
          "date_range_start": {
            "type": "string",
            "format": "date-time",
            "title": "Date Range Start"
          },
          "date_range_end": {
            "type": "string",
            "format": "date-time",
            "title": "Date Range End"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "insight_type",
          "title",
          "summary",
          "insights",
          "recommendations",
          "metrics",
          "confidence_score",
          "data_points",
          "date_range_start",
          "date_range_end",
          "created_at"
        ],
        "title": "InsightResponse"
      },
      "InsightType": {
        "type": "string",
        "enum": [
          "usage_patterns",
          "engagement",
          "performance",
          "conversion",
          "retention",
          "feature_adoption"
        ],
        "title": "InsightType"
      },
      "IntegrationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "integration_type": {
            "type": "string",
            "title": "Integration Type"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "integration_type",
          "config",
          "is_enabled",
          "created_at",
          "updated_at"
        ],
        "title": "IntegrationResponse"
      },
      "InvitationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "workspace_name": {
            "type": "string",
            "title": "Workspace Name"
          },
          "inviter_id": {
            "type": "string",
            "title": "Inviter Id"
          },
          "inviter_name": {
            "type": "string",
            "title": "Inviter Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "token": {
            "type": "string",
            "title": "Token"
          },
          "status": {
            "$ref": "#/components/schemas/InvitationStatus"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "responded_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Responded At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "workspace_name",
          "inviter_id",
          "inviter_name",
          "email",
          "role",
          "token",
          "status",
          "expires_at",
          "created_at"
        ],
        "title": "InvitationResponse"
      },
      "InvitationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "accepted",
          "declined",
          "expired"
        ],
        "title": "InvitationStatus"
      },
      "LLMChatRequest": {
        "properties": {
          "messages": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "title": "Messages",
            "description": "Lista de mensagens do chat",
            "example": [
              {
                "content": "Ol√°, como voc√™ est√°?",
                "role": "user"
              },
              {
                "content": "Ol√°! Estou bem, obrigado. Como posso ajud√°-lo hoje?",
                "role": "assistant"
              },
              {
                "content": "Preciso de ajuda com Python",
                "role": "user"
              }
            ]
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMProvider"
              },
              {
                "type": "null"
              }
            ],
            "description": "Provedor LLM a ser usado (opcional, padr√£o: openai)"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Modelo espec√≠fico do provedor (opcional)"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "description": "Controle de aleatoriedade (0.0-1.0, padr√£o: 0.7)",
            "default": 0.7
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "description": "Limite de tokens na resposta (padr√£o: 1000)",
            "default": 1000
          },
          "top_p": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top P",
            "description": "Controle de diversidade via amostragem nucleus (0.0-1.0)",
            "default": 1.0
          },
          "frequency_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency Penalty",
            "description": "Reduz repeti√ß√µes de palavras (-2.0 a 2.0)",
            "default": 0.0
          },
          "presence_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Presence Penalty",
            "description": "Incentiva novos t√≥picos (-2.0 a 2.0)",
            "default": 0.0
          },
          "stop": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop",
            "description": "Sequ√™ncias que indicam fim da gera√ß√£o"
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "description": "Se verdadeiro, retorna tokens √† medida que s√£o gerados",
            "default": false
          },
          "functions": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Functions",
            "description": "Fun√ß√µes dispon√≠veis para function calling"
          },
          "function_call": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Call",
            "description": "Controle de function calling"
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "LLMChatRequest",
        "description": "Requisi√ß√£o para chat completion."
      },
      "LLMGenerateRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Texto de entrada para o modelo (obrigat√≥rio)"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMProvider"
              },
              {
                "type": "null"
              }
            ],
            "description": "Provedor LLM a ser usado (opcional, padr√£o: openai)"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Modelo espec√≠fico do provedor (opcional)"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "description": "Controle de aleatoriedade (0.0-1.0, padr√£o: 0.7)",
            "default": 0.7
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "description": "Limite de tokens na resposta (padr√£o: 1000)",
            "default": 1000
          },
          "top_p": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top P",
            "description": "Controle de diversidade via amostragem nucleus (0.0-1.0)",
            "default": 1.0
          },
          "frequency_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency Penalty",
            "description": "Reduz repeti√ß√µes de palavras (-2.0 a 2.0)",
            "default": 0.0
          },
          "presence_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Presence Penalty",
            "description": "Incentiva novos t√≥picos (-2.0 a 2.0)",
            "default": 0.0
          },
          "stop": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop",
            "description": "Sequ√™ncias que indicam fim da gera√ß√£o"
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "description": "Se verdadeiro, retorna tokens √† medida que s√£o gerados",
            "default": false
          },
          "functions": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Functions",
            "description": "Fun√ß√µes dispon√≠veis para function calling"
          },
          "function_call": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Call",
            "description": "Controle de function calling"
          },
          "response_format": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format",
            "description": "Formato desejado para a resposta"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Seed para determinismo"
          },
          "tools": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools",
            "description": "Ferramentas dispon√≠veis para o modelo"
          },
          "tool_choice": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Choice",
            "description": "Controle de escolha de ferramentas"
          },
          "extra_params": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Params",
            "description": "Par√¢metros adicionais espec√≠ficos do provedor"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "LLMGenerateRequest",
        "description": "Requisi√ß√£o para gera√ß√£o de texto."
      },
      "LLMProvider": {
        "type": "string",
        "enum": [
          "openai",
          "claude",
          "gemini",
          "llama",
          "grok",
          "deepseek",
          "tess",
          "outro"
        ],
        "title": "LLMProvider",
        "description": "Provedores de LLM dispon√≠veis."
      },
      "LLMResponse": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Conte√∫do gerado pelo modelo"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "Modelo usado"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Provedor usado"
          },
          "usage": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Usage",
            "description": "Informa√ß√µes de uso (tokens)"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Metadados adicionais"
          },
          "finish_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finish Reason",
            "description": "Raz√£o de t√©rmino da gera√ß√£o"
          },
          "function_call": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Call",
            "description": "Detalhes da chamada de fun√ß√£o, se aplic√°vel"
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls",
            "description": "Detalhes das chamadas de ferramentas, se aplic√°vel"
          }
        },
        "type": "object",
        "required": [
          "content",
          "model",
          "provider"
        ],
        "title": "LLMResponse",
        "description": "Resposta padr√£o dos LLMs (unificada)."
      },
      "LicenseType": {
        "type": "string",
        "enum": [
          "MIT",
          "Apache-2.0",
          "GPL-3.0",
          "BSD-3-Clause",
          "Commercial",
          "Proprietary"
        ],
        "title": "LicenseType"
      },
      "ListModelsResponse": {
        "properties": {
          "models": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/ModelInfo"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Models",
            "description": "Modelos agrupados por provedor"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "description": "N√∫mero total de modelos"
          }
        },
        "type": "object",
        "required": [
          "models",
          "count"
        ],
        "title": "ListModelsResponse",
        "description": "Resposta para listagem de modelos.",
        "example": {
          "count": 3,
          "models": {
            "claude": [
              {
                "capabilities": [
                  "text",
                  "vision",
                  "reasoning"
                ],
                "context_window": 200000,
                "id": "claude-3-opus-20240229",
                "name": "Claude 3 Opus",
                "pricing": {
                  "input": 0.015,
                  "output": 0.075
                },
                "provider": "claude",
                "status": "available"
              },
              {
                "capabilities": [
                  "text",
                  "vision",
                  "reasoning"
                ],
                "context_window": 200000,
                "id": "claude-3-sonnet-20240229",
                "name": "Claude 3 Sonnet",
                "pricing": {
                  "input": 0.008,
                  "output": 0.024
                },
                "provider": "claude",
                "status": "available"
              }
            ],
            "openai": [
              {
                "capabilities": [
                  "text",
                  "vision",
                  "function_calling"
                ],
                "context_window": 128000,
                "id": "gpt-4o",
                "name": "GPT-4o",
                "pricing": {
                  "input": 0.005,
                  "output": 0.015
                },
                "provider": "openai",
                "status": "available"
              }
            ]
          }
        }
      },
      "ListProvidersResponse": {
        "properties": {
          "providers": {
            "items": {
              "$ref": "#/components/schemas/ProviderInfo"
            },
            "type": "array",
            "title": "Providers",
            "description": "Lista de provedores dispon√≠veis"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "description": "N√∫mero total de provedores"
          }
        },
        "type": "object",
        "required": [
          "providers",
          "count"
        ],
        "title": "ListProvidersResponse",
        "description": "Resposta para listagem de provedores.",
        "example": {
          "count": 2,
          "providers": [
            {
              "description": "Modelos de linguagem da Anthropic, focados em seguran√ßa e alinhamento",
              "documentation_url": "https://docs.anthropic.com/claude/reference/getting-started-with-the-api",
              "id": "claude",
              "models_count": 3,
              "name": "Claude (Anthropic)",
              "status": "operational"
            },
            {
              "description": "Modelos de linguagem da OpenAI, incluindo GPT-4 e GPT-3.5",
              "documentation_url": "https://platform.openai.com/docs/api-reference",
              "id": "openai",
              "models_count": 5,
              "name": "OpenAI",
              "status": "operational"
            }
          ]
        }
      },
      "MemberInvite": {
        "properties": {
          "email": {
            "type": "string",
            "pattern": "^[^@]+@[^@]+\\.[^@]+$",
            "title": "Email"
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole",
            "default": "member"
          },
          "message": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "MemberInvite"
      },
      "MemberResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          },
          "user_avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Avatar"
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "active"
          },
          "joined_at": {
            "type": "string",
            "format": "date-time",
            "title": "Joined At"
          },
          "last_active_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Active At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "user_id",
          "user_name",
          "user_email",
          "role",
          "joined_at"
        ],
        "title": "MemberResponse"
      },
      "MessageCreate": {
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1,
            "title": "Content"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "MessageCreate"
      },
      "MessageListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "MessageListResponse"
      },
      "MessageResponse": {
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1,
            "title": "Content"
          },
          "role": {
            "type": "string",
            "pattern": "^(user|assistant|system)$",
            "title": "Role"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "attachments": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Attachments"
          },
          "model_used": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Used"
          },
          "model_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Provider"
          },
          "tokens_used": {
            "type": "integer",
            "title": "Tokens Used"
          },
          "processing_time_ms": {
            "type": "integer",
            "title": "Processing Time Ms"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "rating": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating"
          },
          "feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role",
          "id",
          "conversation_id",
          "attachments",
          "tokens_used",
          "processing_time_ms",
          "status"
        ],
        "title": "MessageResponse"
      },
      "ModelCapability": {
        "type": "string",
        "enum": [
          "text",
          "vision",
          "reasoning",
          "code",
          "function_calling"
        ],
        "title": "ModelCapability",
        "description": "Capacidades dos modelos de LLM."
      },
      "ModelInfo": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Identificador √∫nico do modelo"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome do modelo"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Provedor do modelo"
          },
          "capabilities": {
            "items": {
              "$ref": "#/components/schemas/ModelCapability"
            },
            "type": "array",
            "title": "Capabilities",
            "description": "Capacidades do modelo (text, vision, etc.)"
          },
          "context_window": {
            "type": "integer",
            "title": "Context Window",
            "description": "Tamanho da janela de contexto em tokens"
          },
          "pricing": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pricing",
            "description": "Informa√ß√µes de pre√ßo (por 1K tokens)"
          },
          "status": {
            "$ref": "#/components/schemas/ModelStatus",
            "description": "Status de disponibilidade do modelo"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "provider",
          "capabilities",
          "context_window",
          "status"
        ],
        "title": "ModelInfo",
        "description": "Informa√ß√µes sobre um modelo de LLM.",
        "example": {
          "capabilities": [
            "text",
            "vision",
            "reasoning"
          ],
          "context_window": 200000,
          "id": "claude-3-sonnet-20240229",
          "name": "Claude 3 Sonnet",
          "pricing": {
            "input": 0.008,
            "output": 0.024
          },
          "provider": "claude",
          "status": "available"
        }
      },
      "ModelStatus": {
        "type": "string",
        "enum": [
          "available",
          "limited",
          "unavailable",
          "deprecated"
        ],
        "title": "ModelStatus",
        "description": "Status de disponibilidade dos modelos."
      },
      "ModerationAction": {
        "properties": {
          "action": {
            "type": "string",
            "pattern": "^(approve|reject|request_changes)$",
            "title": "Action"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "feedback": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback"
          }
        },
        "type": "object",
        "required": [
          "action"
        ],
        "title": "ModerationAction"
      },
      "NodeCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "type": "string",
            "minLength": 1,
            "title": "Type"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "icon": {
            "type": "string",
            "title": "Icon",
            "default": "üîß"
          },
          "color": {
            "type": "string",
            "title": "Color",
            "default": "#6366f1"
          },
          "code_template": {
            "type": "string",
            "minLength": 1,
            "title": "Code Template"
          },
          "input_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Input Schema"
          },
          "output_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Schema"
          },
          "parameters_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters Schema"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "examples": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Examples"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "code_template"
        ],
        "title": "NodeCreate"
      },
      "NodeExecutionResponse": {
        "properties": {
          "node_key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Node Key"
          },
          "node_type": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Node Type"
          },
          "node_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Name"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Execution Order"
          },
          "input_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Data"
          },
          "config_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Data"
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds",
            "default": 300
          },
          "max_retries": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Max Retries",
            "default": 3
          },
          "retry_delay_ms": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Retry Delay Ms",
            "default": 1000
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "execution_id": {
            "type": "string",
            "title": "Execution Id"
          },
          "workflow_execution_id": {
            "type": "integer",
            "title": "Workflow Execution Id"
          },
          "node_id": {
            "type": "integer",
            "title": "Node Id"
          },
          "status": {
            "$ref": "#/components/schemas/NodeExecutionStatus"
          },
          "output_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Data"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "timeout_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout At"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          },
          "execution_log": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Log"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "error_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details"
          },
          "debug_info": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Debug Info"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count"
          },
          "dependents": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependents"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "node_key",
          "node_type",
          "execution_order",
          "id",
          "execution_id",
          "workflow_execution_id",
          "node_id",
          "status",
          "retry_count",
          "created_at",
          "updated_at"
        ],
        "title": "NodeExecutionResponse",
        "description": "Schema de resposta para execu√ß√£o de n√≥"
      },
      "NodeExecutionStatus": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "completed",
          "failed",
          "skipped",
          "retry"
        ],
        "title": "NodeExecutionStatus",
        "description": "Status de execu√ß√£o de um n√≥ espec√≠fico"
      },
      "NodeListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NodeResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "NodeListResponse"
      },
      "NodeResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "type": "string",
            "minLength": 1,
            "title": "Type"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "icon": {
            "type": "string",
            "title": "Icon",
            "default": "üîß"
          },
          "color": {
            "type": "string",
            "title": "Color",
            "default": "#6366f1"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "code_template": {
            "type": "string",
            "title": "Code Template"
          },
          "input_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Input Schema"
          },
          "output_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Output Schema"
          },
          "parameters_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters Schema"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "examples": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Examples"
          },
          "downloads_count": {
            "type": "integer",
            "title": "Downloads Count"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "id",
          "user_id",
          "status",
          "version",
          "code_template",
          "input_schema",
          "output_schema",
          "examples",
          "downloads_count",
          "usage_count",
          "rating_average",
          "rating_count"
        ],
        "title": "NodeResponse"
      },
      "NodeUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color"
          },
          "code_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Template"
          },
          "input_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Schema"
          },
          "output_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Schema"
          },
          "parameters_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters Schema"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "title": "NodeUpdate"
      },
      "NotificationPreferences": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "settings": {
            "$ref": "#/components/schemas/NotificationSettings"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "settings"
        ],
        "title": "NotificationPreferences"
      },
      "NotificationSettings": {
        "properties": {
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "default": true
          },
          "push_notifications": {
            "type": "boolean",
            "title": "Push Notifications",
            "default": true
          },
          "desktop_notifications": {
            "type": "boolean",
            "title": "Desktop Notifications",
            "default": true
          },
          "digest_frequency": {
            "type": "string",
            "pattern": "^(immediate|hourly|daily|weekly|never)$",
            "title": "Digest Frequency",
            "default": "daily"
          },
          "notify_on_mention": {
            "type": "boolean",
            "title": "Notify On Mention",
            "default": true
          },
          "notify_on_comment": {
            "type": "boolean",
            "title": "Notify On Comment",
            "default": true
          },
          "notify_on_project_update": {
            "type": "boolean",
            "title": "Notify On Project Update",
            "default": true
          },
          "notify_on_member_join": {
            "type": "boolean",
            "title": "Notify On Member Join",
            "default": true
          },
          "notify_on_invitation": {
            "type": "boolean",
            "title": "Notify On Invitation",
            "default": true
          }
        },
        "type": "object",
        "title": "NotificationSettings"
      },
      "PasswordResetConfirm": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "new_password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "PasswordResetConfirm"
      },
      "PasswordResetRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "PasswordResetRequest"
      },
      "ProjectCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "default": "#10B981"
          },
          "allow_concurrent_editing": {
            "type": "boolean",
            "title": "Allow Concurrent Editing",
            "default": true
          },
          "auto_save_interval": {
            "type": "integer",
            "maximum": 300.0,
            "minimum": 5.0,
            "title": "Auto Save Interval",
            "default": 30
          },
          "version_control_enabled": {
            "type": "boolean",
            "title": "Version Control Enabled",
            "default": true
          },
          "workflow_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ProjectCreate"
      },
      "ProjectResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "default": "#10B981"
          },
          "allow_concurrent_editing": {
            "type": "boolean",
            "title": "Allow Concurrent Editing",
            "default": true
          },
          "auto_save_interval": {
            "type": "integer",
            "maximum": 300.0,
            "minimum": 5.0,
            "title": "Auto Save Interval",
            "default": 30
          },
          "version_control_enabled": {
            "type": "boolean",
            "title": "Version Control Enabled",
            "default": true
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "collaborator_count": {
            "type": "integer",
            "title": "Collaborator Count",
            "default": 0
          },
          "comment_count": {
            "type": "integer",
            "title": "Comment Count",
            "default": 0
          },
          "version_count": {
            "type": "integer",
            "title": "Version Count",
            "default": 0
          },
          "status": {
            "$ref": "#/components/schemas/ProjectStatus",
            "default": "active"
          },
          "last_edited_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Edited At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "workspace_id",
          "workflow_id",
          "created_at",
          "updated_at"
        ],
        "title": "ProjectResponse"
      },
      "ProjectStatus": {
        "type": "string",
        "enum": [
          "active",
          "archived",
          "deleted"
        ],
        "title": "ProjectStatus"
      },
      "ProjectUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color"
          },
          "allow_concurrent_editing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Concurrent Editing"
          },
          "auto_save_interval": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300.0,
                "minimum": 5.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Save Interval"
          },
          "version_control_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Control Enabled"
          }
        },
        "type": "object",
        "title": "ProjectUpdate"
      },
      "ProjectVersionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "workflow_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Workflow Data"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "creator_name": {
            "type": "string",
            "title": "Creator Name"
          },
          "is_current": {
            "type": "boolean",
            "title": "Is Current",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "project_id",
          "version_number",
          "workflow_data",
          "created_by",
          "creator_name",
          "created_at"
        ],
        "title": "ProjectVersionResponse"
      },
      "ProviderEnum": {
        "type": "string",
        "enum": [
          "openai",
          "claude",
          "gemini",
          "llama",
          "grok",
          "deepseek",
          "tess"
        ],
        "title": "ProviderEnum"
      },
      "ProviderInfo": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Identificador √∫nico do provedor"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome do provedor"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Descri√ß√£o do provedor"
          },
          "models_count": {
            "type": "integer",
            "title": "Models Count",
            "description": "N√∫mero de modelos dispon√≠veis"
          },
          "status": {
            "$ref": "#/components/schemas/ProviderStatus",
            "description": "Status operacional do provedor"
          },
          "documentation_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Url",
            "description": "URL da documenta√ß√£o oficial"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "models_count",
          "status"
        ],
        "title": "ProviderInfo",
        "description": "Informa√ß√µes sobre um provedor de LLM.",
        "example": {
          "description": "Modelos de linguagem da Anthropic, focados em seguran√ßa e alinhamento",
          "documentation_url": "https://docs.anthropic.com/claude/reference/getting-started-with-the-api",
          "id": "claude",
          "models_count": 3,
          "name": "Claude (Anthropic)",
          "status": "operational"
        }
      },
      "ProviderStatus": {
        "type": "string",
        "enum": [
          "operational",
          "degraded",
          "maintenance",
          "outage"
        ],
        "title": "ProviderStatus",
        "description": "Status operacional dos provedores."
      },
      "PurchaseCreate": {
        "properties": {
          "component_id": {
            "type": "integer",
            "title": "Component Id"
          },
          "payment_method": {
            "type": "string",
            "maxLength": 50,
            "title": "Payment Method"
          },
          "payment_provider": {
            "type": "string",
            "maxLength": 50,
            "title": "Payment Provider"
          }
        },
        "type": "object",
        "required": [
          "component_id",
          "payment_method",
          "payment_provider"
        ],
        "title": "PurchaseCreate"
      },
      "PurchaseResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "component_id": {
            "type": "string",
            "title": "Component Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "payment_method": {
            "type": "string",
            "title": "Payment Method"
          },
          "transaction_id": {
            "type": "string",
            "title": "Transaction Id"
          },
          "provider_transaction_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Transaction Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "license_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "component_id",
          "user_id",
          "amount",
          "currency",
          "payment_method",
          "transaction_id",
          "status",
          "created_at"
        ],
        "title": "PurchaseResponse"
      },
      "QueryConfig": {
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^(events|metrics|custom_sql)$",
            "title": "Type"
          },
          "filters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Filters"
          },
          "aggregations": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aggregations"
          },
          "group_by": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group By"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order By"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "QueryConfig"
      },
      "QueryResponse": {
        "properties": {
          "data": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "aggregations": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aggregations"
          },
          "execution_time_ms": {
            "type": "integer",
            "title": "Execution Time Ms"
          },
          "query_hash": {
            "type": "string",
            "title": "Query Hash"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "execution_time_ms",
          "query_hash"
        ],
        "title": "QueryResponse"
      },
      "RatingCreate": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "review": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Review"
          },
          "ease_of_use": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ease Of Use"
          },
          "documentation_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Quality"
          },
          "performance": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Performance"
          },
          "reliability": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Reliability"
          },
          "support_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Quality"
          },
          "version_used": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Used"
          },
          "use_case": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Case"
          },
          "experience_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(beginner|intermediate|advanced|expert)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experience Level"
          },
          "component_id": {
            "type": "integer",
            "title": "Component Id"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "component_id"
        ],
        "title": "RatingCreate"
      },
      "RatingResponse": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "review": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Review"
          },
          "ease_of_use": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ease Of Use"
          },
          "documentation_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Quality"
          },
          "performance": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Performance"
          },
          "reliability": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Reliability"
          },
          "support_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Quality"
          },
          "version_used": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Used"
          },
          "use_case": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Case"
          },
          "experience_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(beginner|intermediate|advanced|expert)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experience Level"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "component_id": {
            "type": "string",
            "title": "Component Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "is_verified_purchase": {
            "type": "boolean",
            "title": "Is Verified Purchase",
            "default": false
          },
          "helpful_count": {
            "type": "integer",
            "title": "Helpful Count",
            "default": 0
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "id",
          "component_id",
          "user_id",
          "user_name",
          "created_at",
          "updated_at"
        ],
        "title": "RatingResponse"
      },
      "RatingStats": {
        "properties": {
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "total_ratings": {
            "type": "integer",
            "title": "Total Ratings"
          },
          "rating_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Rating Distribution"
          },
          "aspects": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Aspects"
          }
        },
        "type": "object",
        "required": [
          "average_rating",
          "total_ratings",
          "rating_distribution",
          "aspects"
        ],
        "title": "RatingStats"
      },
      "RealTimeStats": {
        "properties": {
          "active_users": {
            "type": "integer",
            "title": "Active Users"
          },
          "events_per_minute": {
            "type": "number",
            "title": "Events Per Minute"
          },
          "error_rate": {
            "type": "number",
            "title": "Error Rate"
          },
          "response_time_ms": {
            "type": "number",
            "title": "Response Time Ms"
          },
          "system_load": {
            "type": "number",
            "title": "System Load"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "active_users",
          "events_per_minute",
          "error_rate",
          "response_time_ms",
          "system_load",
          "timestamp"
        ],
        "title": "RealTimeStats"
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest"
      },
      "ReportCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "report_type": {
            "$ref": "#/components/schemas/ReportType"
          },
          "query_config": {
            "$ref": "#/components/schemas/QueryConfig"
          },
          "visualization_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VisualizationConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "schedule_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "recipients": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipients"
          },
          "is_scheduled": {
            "type": "boolean",
            "title": "Is Scheduled",
            "default": false
          },
          "format": {
            "$ref": "#/components/schemas/ReportFormat",
            "default": "json"
          }
        },
        "type": "object",
        "required": [
          "name",
          "report_type",
          "query_config"
        ],
        "title": "ReportCreate"
      },
      "ReportExecutionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "report_id": {
            "type": "integer",
            "title": "Report Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "execution_id": {
            "type": "string",
            "title": "Execution Id"
          },
          "status": {
            "type": "string",
            "pattern": "^(running|completed|failed|cancelled)$",
            "title": "Status"
          },
          "result_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Data"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "row_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Row Count"
          },
          "file_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Url"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "report_id",
          "user_id",
          "execution_id",
          "status",
          "started_at"
        ],
        "title": "ReportExecutionResponse"
      },
      "ReportFormat": {
        "type": "string",
        "enum": [
          "json",
          "csv",
          "pdf",
          "excel"
        ],
        "title": "ReportFormat"
      },
      "ReportResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "report_type": {
            "$ref": "#/components/schemas/ReportType"
          },
          "query_config": {
            "$ref": "#/components/schemas/QueryConfig"
          },
          "visualization_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VisualizationConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "schedule_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "recipients": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipients"
          },
          "is_scheduled": {
            "type": "boolean",
            "title": "Is Scheduled",
            "default": false
          },
          "format": {
            "$ref": "#/components/schemas/ReportFormat",
            "default": "json"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          },
          "execution_count": {
            "type": "integer",
            "title": "Execution Count",
            "default": 0
          },
          "last_executed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Executed At"
          },
          "next_execution_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Execution At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "report_type",
          "query_config",
          "id",
          "user_id",
          "user_name",
          "created_at",
          "updated_at"
        ],
        "title": "ReportResponse"
      },
      "ReportType": {
        "type": "string",
        "enum": [
          "dashboard",
          "export",
          "scheduled",
          "custom_query"
        ],
        "title": "ReportType"
      },
      "ReportUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "query_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QueryConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "visualization_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VisualizationConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "schedule_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleConfig"
              },
              {
                "type": "null"
              }
            ]
          },
          "recipients": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipients"
          },
          "is_scheduled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Scheduled"
          },
          "format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReportFormat"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "ReportUpdate"
      },
      "ReviewCreate": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "ease_of_use": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ease Of Use"
          },
          "documentation_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Quality"
          },
          "performance": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Performance"
          },
          "value_for_money": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Value For Money"
          },
          "template_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Template Id"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "template_id"
        ],
        "title": "ReviewCreate",
        "description": "Schema para cria√ß√£o de review"
      },
      "ReviewResponse": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "ease_of_use": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Ease Of Use"
          },
          "documentation_quality": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Quality"
          },
          "performance": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Performance"
          },
          "value_for_money": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Value For Money"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "template_id": {
            "type": "string",
            "title": "Template Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "is_verified_purchase": {
            "type": "boolean",
            "title": "Is Verified Purchase"
          },
          "is_helpful_count": {
            "type": "integer",
            "title": "Is Helpful Count"
          },
          "version_reviewed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Reviewed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          },
          "user_avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Avatar"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "id",
          "template_id",
          "user_id",
          "is_verified_purchase",
          "is_helpful_count",
          "created_at",
          "updated_at"
        ],
        "title": "ReviewResponse",
        "description": "Schema de resposta para review"
      },
      "ScheduleConfig": {
        "properties": {
          "frequency": {
            "type": "string",
            "pattern": "^(daily|weekly|monthly|quarterly)$",
            "title": "Frequency"
          },
          "time": {
            "type": "string",
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
            "title": "Time"
          },
          "timezone": {
            "type": "string",
            "maxLength": 50,
            "title": "Timezone",
            "default": "UTC"
          },
          "day_of_week": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 6.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Day Of Week"
          },
          "day_of_month": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 31.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Day Of Month"
          }
        },
        "type": "object",
        "required": [
          "frequency",
          "time"
        ],
        "title": "ScheduleConfig"
      },
      "SystemInsights": {
        "properties": {
          "period": {
            "additionalProperties": {
              "type": "string",
              "format": "date-time"
            },
            "type": "object",
            "title": "Period"
          },
          "user_metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "User Metrics"
          },
          "performance_metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Performance Metrics"
          },
          "business_metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Business Metrics"
          },
          "trends": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Trends"
          },
          "anomalies": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Anomalies"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          }
        },
        "type": "object",
        "required": [
          "period",
          "user_metrics",
          "performance_metrics",
          "business_metrics",
          "trends",
          "anomalies",
          "generated_at"
        ],
        "title": "SystemInsights"
      },
      "TemplateCategory": {
        "type": "string",
        "enum": [
          "automation",
          "data_processing",
          "ai_workflows",
          "marketing",
          "productivity",
          "integration",
          "analytics",
          "content_creation",
          "customer_service",
          "finance",
          "hr",
          "sales",
          "other"
        ],
        "title": "TemplateCategory",
        "description": "Categorias de templates"
      },
      "TemplateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "license_type": {
            "$ref": "#/components/schemas/TemplateLicense",
            "default": "free"
          },
          "price": {
            "type": "number",
            "maximum": 9999.99,
            "minimum": 0.0,
            "title": "Price",
            "default": 0.0
          },
          "workflow_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Workflow Data",
            "description": "Estrutura completa do workflow"
          },
          "nodes_data": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "minItems": 1,
            "title": "Nodes Data",
            "description": "Dados dos n√≥s"
          },
          "connections_data": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connections Data"
          },
          "required_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Variables"
          },
          "optional_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional Variables"
          },
          "default_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Config"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 86400.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "complexity_level": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Complexity Level",
            "default": 1
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "industries": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Industries"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "setup_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Setup Instructions"
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "workflow_data",
          "nodes_data"
        ],
        "title": "TemplateCreate",
        "description": "Schema para cria√ß√£o de template"
      },
      "TemplateDetailResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "license_type": {
            "$ref": "#/components/schemas/TemplateLicense",
            "default": "free"
          },
          "price": {
            "type": "number",
            "maximum": 9999.99,
            "minimum": 0.0,
            "title": "Price",
            "default": 0.0
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "template_id": {
            "type": "string",
            "title": "Template Id"
          },
          "author_id": {
            "type": "string",
            "title": "Author Id"
          },
          "status": {
            "$ref": "#/components/schemas/TemplateStatus"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "compatibility_version": {
            "type": "string",
            "title": "Compatibility Version"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "complexity_level": {
            "type": "integer",
            "title": "Complexity Level"
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count"
          },
          "view_count": {
            "type": "integer",
            "title": "View Count"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "industries": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Industries"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "preview_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Images"
          },
          "demo_video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Video Url"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "setup_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Setup Instructions"
          },
          "support_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Email"
          },
          "repository_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repository Url"
          },
          "documentation_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "workflow_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Workflow Data"
          },
          "nodes_data": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Nodes Data"
          },
          "connections_data": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connections Data"
          },
          "required_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Variables"
          },
          "optional_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional Variables"
          },
          "default_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Config"
          },
          "changelog": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Changelog"
          },
          "author_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Name"
          },
          "author_avatar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Avatar"
          },
          "recent_downloads": {
            "type": "integer",
            "title": "Recent Downloads",
            "default": 0
          },
          "recent_usage": {
            "type": "integer",
            "title": "Recent Usage",
            "default": 0
          },
          "is_favorited": {
            "type": "boolean",
            "title": "Is Favorited",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "id",
          "template_id",
          "author_id",
          "status",
          "is_public",
          "is_featured",
          "is_verified",
          "version",
          "compatibility_version",
          "complexity_level",
          "download_count",
          "usage_count",
          "rating_average",
          "rating_count",
          "view_count",
          "created_at",
          "updated_at",
          "workflow_data",
          "nodes_data"
        ],
        "title": "TemplateDetailResponse",
        "description": "Schema de resposta detalhada para template"
      },
      "TemplateInstall": {
        "properties": {
          "template_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Template Id"
          },
          "workflow_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Name"
          },
          "custom_variables": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Variables"
          },
          "modify_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modify Config"
          }
        },
        "type": "object",
        "required": [
          "template_id"
        ],
        "title": "TemplateInstall",
        "description": "Schema para instala√ß√£o de template"
      },
      "TemplateInstallResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "workflow_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Id"
          },
          "workflow_name": {
            "type": "string",
            "title": "Workflow Name"
          },
          "template_id": {
            "type": "integer",
            "title": "Template Id"
          },
          "template_name": {
            "type": "string",
            "title": "Template Name"
          },
          "modifications_applied": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Modifications Applied"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "success",
          "workflow_name",
          "template_id",
          "template_name",
          "modifications_applied",
          "warnings",
          "errors"
        ],
        "title": "TemplateInstallResponse",
        "description": "Schema de resposta para instala√ß√£o"
      },
      "TemplateLicense": {
        "type": "string",
        "enum": [
          "free",
          "premium",
          "enterprise",
          "custom"
        ],
        "title": "TemplateLicense",
        "description": "Licen√ßas de templates"
      },
      "TemplateListResponse": {
        "properties": {
          "templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Templates"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev"
          }
        },
        "type": "object",
        "required": [
          "templates",
          "total",
          "page",
          "per_page",
          "pages",
          "has_next",
          "has_prev"
        ],
        "title": "TemplateListResponse",
        "description": "Schema para lista de templates"
      },
      "TemplateResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "$ref": "#/components/schemas/TemplateCategory"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "license_type": {
            "$ref": "#/components/schemas/TemplateLicense",
            "default": "free"
          },
          "price": {
            "type": "number",
            "maximum": 9999.99,
            "minimum": 0.0,
            "title": "Price",
            "default": 0.0
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "template_id": {
            "type": "string",
            "title": "Template Id"
          },
          "author_id": {
            "type": "string",
            "title": "Author Id"
          },
          "status": {
            "$ref": "#/components/schemas/TemplateStatus"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "is_featured": {
            "type": "boolean",
            "title": "Is Featured"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "compatibility_version": {
            "type": "string",
            "title": "Compatibility Version"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "complexity_level": {
            "type": "integer",
            "title": "Complexity Level"
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count"
          },
          "view_count": {
            "type": "integer",
            "title": "View Count"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "industries": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Industries"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "preview_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Images"
          },
          "demo_video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Video Url"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "setup_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Setup Instructions"
          },
          "support_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Email"
          },
          "repository_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repository Url"
          },
          "documentation_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "description",
          "category",
          "id",
          "template_id",
          "author_id",
          "status",
          "is_public",
          "is_featured",
          "is_verified",
          "version",
          "compatibility_version",
          "complexity_level",
          "download_count",
          "usage_count",
          "rating_average",
          "rating_count",
          "view_count",
          "created_at",
          "updated_at"
        ],
        "title": "TemplateResponse",
        "description": "Schema de resposta para template"
      },
      "TemplateStats": {
        "properties": {
          "total_templates": {
            "type": "integer",
            "title": "Total Templates"
          },
          "published_templates": {
            "type": "integer",
            "title": "Published Templates"
          },
          "featured_templates": {
            "type": "integer",
            "title": "Featured Templates"
          },
          "verified_templates": {
            "type": "integer",
            "title": "Verified Templates"
          },
          "free_templates": {
            "type": "integer",
            "title": "Free Templates"
          },
          "premium_templates": {
            "type": "integer",
            "title": "Premium Templates"
          },
          "total_downloads": {
            "type": "integer",
            "title": "Total Downloads"
          },
          "total_reviews": {
            "type": "integer",
            "title": "Total Reviews"
          },
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "categories_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Categories Distribution"
          },
          "top_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Top Templates"
          },
          "recent_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Recent Templates"
          }
        },
        "type": "object",
        "required": [
          "total_templates",
          "published_templates",
          "featured_templates",
          "verified_templates",
          "free_templates",
          "premium_templates",
          "total_downloads",
          "total_reviews",
          "average_rating",
          "categories_distribution",
          "top_templates",
          "recent_templates"
        ],
        "title": "TemplateStats",
        "description": "Estat√≠sticas de templates"
      },
      "TemplateStatus": {
        "type": "string",
        "enum": [
          "draft",
          "published",
          "featured",
          "deprecated",
          "private"
        ],
        "title": "TemplateStatus",
        "description": "Status do template"
      },
      "TemplateUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateCategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "license_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TemplateLicense"
              },
              {
                "type": "null"
              }
            ]
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 9999.99,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "workflow_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Data"
          },
          "nodes_data": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes Data"
          },
          "connections_data": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connections Data"
          },
          "required_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Variables"
          },
          "optional_variables": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional Variables"
          },
          "default_config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Config"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d+\\.\\d+\\.\\d+$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "estimated_duration": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 86400.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration"
          },
          "complexity_level": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Complexity Level"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "industries": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Industries"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "preview_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                "type": "array",
                "maxItems": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Images"
          },
          "demo_video_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demo Video Url"
          },
          "documentation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation"
          },
          "setup_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Setup Instructions"
          },
          "support_email": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^[^@]+@[^@]+\\.[^@]+$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Email"
          },
          "repository_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Repository Url"
          },
          "documentation_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documentation Url"
          }
        },
        "type": "object",
        "title": "TemplateUpdate",
        "description": "Schema para atualiza√ß√£o de template"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "user"
        ],
        "title": "Token"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Username"
          },
          "full_name": {
            "type": "string",
            "maxLength": 200,
            "minLength": 2,
            "title": "Full Name"
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "full_name",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "profile_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Image Url"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "username",
          "first_name",
          "last_name",
          "full_name",
          "avatar_url",
          "profile_image_url",
          "bio",
          "is_active",
          "is_verified",
          "is_superuser",
          "role",
          "created_at",
          "updated_at"
        ],
        "title": "UserResponse"
      },
      "UserTemplateStats": {
        "properties": {
          "created_templates": {
            "type": "integer",
            "title": "Created Templates"
          },
          "published_templates": {
            "type": "integer",
            "title": "Published Templates"
          },
          "total_downloads": {
            "type": "integer",
            "title": "Total Downloads"
          },
          "total_reviews": {
            "type": "integer",
            "title": "Total Reviews"
          },
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "favorite_templates": {
            "type": "integer",
            "title": "Favorite Templates"
          },
          "template_collections": {
            "type": "integer",
            "title": "Template Collections"
          },
          "total_earnings": {
            "type": "number",
            "title": "Total Earnings"
          }
        },
        "type": "object",
        "required": [
          "created_templates",
          "published_templates",
          "total_downloads",
          "total_reviews",
          "average_rating",
          "favorite_templates",
          "template_collections",
          "total_earnings"
        ],
        "title": "UserTemplateStats",
        "description": "Estat√≠sticas de templates do usu√°rio"
      },
      "UserVariableCreate": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Key",
            "description": "Nome da vari√°vel (formato ENV)"
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "Valor da vari√°vel"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Descri√ß√£o opcional da vari√°vel"
          },
          "is_encrypted": {
            "type": "boolean",
            "title": "Is Encrypted",
            "description": "Criptografia PERMANENTEMENTE DESABILITADA - valores em texto claro",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Se a vari√°vel est√° ativa",
            "default": true
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Categoria da vari√°vel"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "UserVariableCreate",
        "description": "Schema para cria√ß√£o de vari√°vel do usu√°rio"
      },
      "UserVariableList": {
        "properties": {
          "variables": {
            "items": {
              "$ref": "#/components/schemas/UserVariableResponse"
            },
            "type": "array",
            "title": "Variables"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories",
            "description": "Categorias distintas das vari√°veis"
          }
        },
        "type": "object",
        "required": [
          "variables",
          "total"
        ],
        "title": "UserVariableList",
        "description": "Schema para lista de vari√°veis do usu√°rio"
      },
      "UserVariableResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "description": "Valor da vari√°vel (mascarado se sens√≠vel)"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_encrypted": {
            "type": "boolean",
            "title": "Is Encrypted"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "key",
          "is_active",
          "is_encrypted"
        ],
        "title": "UserVariableResponse",
        "description": "Schema para resposta de vari√°vel do usu√°rio"
      },
      "UserVariableWithValue": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_encrypted": {
            "type": "boolean",
            "title": "Is Encrypted"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "key",
          "value",
          "is_active",
          "is_encrypted"
        ],
        "title": "UserVariableWithValue",
        "description": "Schema para resposta com valor (apenas para o pr√≥prio usu√°rio)"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VersionCreate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "VersionCreate"
      },
      "VisualizationConfig": {
        "properties": {
          "chart_type": {
            "type": "string",
            "pattern": "^(line|bar|pie|table|scatter|heatmap)$",
            "title": "Chart Type"
          },
          "x_axis": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "X Axis"
          },
          "y_axis": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Y Axis"
          },
          "color_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color By"
          },
          "size_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size By"
          },
          "options": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options"
          }
        },
        "type": "object",
        "required": [
          "chart_type"
        ],
        "title": "VisualizationConfig"
      },
      "WidgetConfig": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Id"
          },
          "type": {
            "type": "string",
            "pattern": "^(metric_chart|event_timeline|user_funnel|kpi_card|heatmap|table)$",
            "title": "Type"
          },
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Title"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "position": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Position",
            "description": "x, y, width, height"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "title",
          "config",
          "position"
        ],
        "title": "WidgetConfig"
      },
      "WorkflowCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "definition": {
            "additionalProperties": true,
            "type": "object",
            "title": "Definition"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "WorkflowCreate"
      },
      "WorkflowExecutionRequest": {
        "properties": {
          "inputs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          }
        },
        "type": "object",
        "title": "WorkflowExecutionRequest"
      },
      "WorkflowExecutionResponse": {
        "properties": {
          "execution_id": {
            "type": "string",
            "title": "Execution Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "outputs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "execution_id",
          "status",
          "message"
        ],
        "title": "WorkflowExecutionResponse"
      },
      "WorkflowListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WorkflowResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "WorkflowListResponse"
      },
      "WorkflowResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "definition": {
            "additionalProperties": true,
            "type": "object",
            "title": "Definition"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "downloads_count": {
            "type": "integer",
            "title": "Downloads Count"
          },
          "rating_average": {
            "type": "number",
            "title": "Rating Average"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count"
          },
          "execution_count": {
            "type": "integer",
            "title": "Execution Count"
          },
          "last_executed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Executed At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "user_id",
          "version",
          "status",
          "definition",
          "downloads_count",
          "rating_average",
          "rating_count",
          "execution_count"
        ],
        "title": "WorkflowResponse"
      },
      "WorkflowUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "definition": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Definition"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "title": "WorkflowUpdate"
      },
      "WorkflowValidation": {
        "properties": {
          "is_valid": {
            "type": "boolean",
            "title": "Is Valid"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings"
          },
          "estimated_duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Duration Seconds"
          },
          "total_nodes": {
            "type": "integer",
            "title": "Total Nodes"
          },
          "required_variables": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Required Variables"
          },
          "optional_variables": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Optional Variables"
          },
          "dependencies": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Dependencies"
          }
        },
        "type": "object",
        "required": [
          "is_valid",
          "errors",
          "warnings",
          "total_nodes",
          "required_variables",
          "optional_variables",
          "dependencies"
        ],
        "title": "WorkflowValidation",
        "description": "Resultado da valida√ß√£o de workflow"
      },
      "WorkspaceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "default": "#3B82F6"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "allow_guest_access": {
            "type": "boolean",
            "title": "Allow Guest Access",
            "default": false
          },
          "require_approval": {
            "type": "boolean",
            "title": "Require Approval",
            "default": true
          },
          "max_members": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 1.0,
            "title": "Max Members",
            "default": 10
          },
          "max_projects": {
            "type": "integer",
            "maximum": 10000.0,
            "minimum": 1.0,
            "title": "Max Projects",
            "default": 50
          },
          "max_storage_mb": {
            "type": "integer",
            "maximum": 100000.0,
            "minimum": 100.0,
            "title": "Max Storage Mb",
            "default": 1000
          },
          "enable_real_time_editing": {
            "type": "boolean",
            "title": "Enable Real Time Editing",
            "default": true
          },
          "enable_comments": {
            "type": "boolean",
            "title": "Enable Comments",
            "default": true
          },
          "enable_chat": {
            "type": "boolean",
            "title": "Enable Chat",
            "default": true
          },
          "enable_video_calls": {
            "type": "boolean",
            "title": "Enable Video Calls",
            "default": false
          },
          "notification_settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Settings"
          },
          "type": {
            "$ref": "#/components/schemas/WorkspaceType",
            "default": "individual"
          },
          "plan_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "WorkspaceCreate"
      },
      "WorkspaceIntegration": {
        "properties": {
          "integration_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Integration Type"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "integration_type",
          "config"
        ],
        "title": "WorkspaceIntegration"
      },
      "WorkspaceResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "default": "#3B82F6"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": false
          },
          "allow_guest_access": {
            "type": "boolean",
            "title": "Allow Guest Access",
            "default": false
          },
          "require_approval": {
            "type": "boolean",
            "title": "Require Approval",
            "default": true
          },
          "max_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Members"
          },
          "max_projects": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Projects"
          },
          "max_storage_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Storage Mb"
          },
          "enable_real_time_editing": {
            "type": "boolean",
            "title": "Enable Real Time Editing",
            "default": true
          },
          "enable_comments": {
            "type": "boolean",
            "title": "Enable Comments",
            "default": true
          },
          "enable_chat": {
            "type": "boolean",
            "title": "Enable Chat",
            "default": true
          },
          "enable_video_calls": {
            "type": "boolean",
            "title": "Enable Video Calls",
            "default": false
          },
          "notification_settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Settings"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "type": {
            "$ref": "#/components/schemas/WorkspaceType"
          },
          "owner_id": {
            "type": "string",
            "title": "Owner Id"
          },
          "owner_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Name"
          },
          "plan_id": {
            "type": "string",
            "title": "Plan Id"
          },
          "plan_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan Name"
          },
          "plan_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan Type"
          },
          "is_template": {
            "type": "boolean",
            "title": "Is Template",
            "default": false
          },
          "member_count": {
            "type": "integer",
            "title": "Member Count",
            "default": 0
          },
          "project_count": {
            "type": "integer",
            "title": "Project Count",
            "default": 0
          },
          "activity_count": {
            "type": "integer",
            "title": "Activity Count",
            "default": 0
          },
          "storage_used_mb": {
            "type": "number",
            "title": "Storage Used Mb",
            "default": 0.0
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "active"
          },
          "last_activity_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Activity At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "slug",
          "type",
          "owner_id",
          "plan_id",
          "created_at",
          "updated_at"
        ],
        "title": "WorkspaceResponse"
      },
      "WorkspaceRole": {
        "type": "string",
        "enum": [
          "owner",
          "admin",
          "member",
          "guest"
        ],
        "title": "WorkspaceRole"
      },
      "WorkspaceType": {
        "type": "string",
        "enum": [
          "individual",
          "collaborative"
        ],
        "title": "WorkspaceType",
        "description": "Tipos de workspace"
      },
      "WorkspaceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "allow_guest_access": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allow Guest Access"
          },
          "require_approval": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Require Approval"
          },
          "max_members": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Members"
          },
          "max_projects": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Projects"
          },
          "max_storage_mb": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100000.0,
                "minimum": 100.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Storage Mb"
          },
          "enable_real_time_editing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Real Time Editing"
          },
          "enable_comments": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Comments"
          },
          "enable_chat": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Chat"
          },
          "enable_video_calls": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enable Video Calls"
          },
          "notification_settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notification Settings"
          }
        },
        "type": "object",
        "title": "WorkspaceUpdate"
      },
      "synapse__schemas__marketplace__MarketplaceStats": {
        "properties": {
          "total_components": {
            "type": "integer",
            "title": "Total Components"
          },
          "total_downloads": {
            "type": "integer",
            "title": "Total Downloads"
          },
          "total_revenue": {
            "type": "number",
            "title": "Total Revenue"
          },
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "active_developers": {
            "type": "integer",
            "title": "Active Developers"
          },
          "categories": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Categories"
          }
        },
        "type": "object",
        "required": [
          "total_components",
          "total_downloads",
          "total_revenue",
          "average_rating",
          "active_developers",
          "categories"
        ],
        "title": "MarketplaceStats"
      },
      "synapse__schemas__template__MarketplaceStats": {
        "properties": {
          "total_templates": {
            "type": "integer",
            "title": "Total Templates"
          },
          "total_authors": {
            "type": "integer",
            "title": "Total Authors"
          },
          "total_downloads": {
            "type": "integer",
            "title": "Total Downloads"
          },
          "total_reviews": {
            "type": "integer",
            "title": "Total Reviews"
          },
          "featured_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Featured Templates"
          },
          "trending_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "Trending Templates"
          },
          "new_templates": {
            "items": {
              "$ref": "#/components/schemas/TemplateResponse"
            },
            "type": "array",
            "title": "New Templates"
          },
          "top_categories": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Categories"
          },
          "top_authors": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Authors"
          }
        },
        "type": "object",
        "required": [
          "total_templates",
          "total_authors",
          "total_downloads",
          "total_reviews",
          "featured_templates",
          "trending_templates",
          "new_templates",
          "top_categories",
          "top_authors"
        ],
        "title": "MarketplaceStats",
        "description": "Estat√≠sticas do marketplace"
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDetail"
          }
        },
        "title": "ErrorResponse",
        "description": "Standard error response format for all API errors"
      },
      "ErrorDetail": {
        "type": "object",
        "required": [
          "error_code",
          "message",
          "timestamp",
          "path",
          "method",
          "request_id"
        ],
        "properties": {
          "error_code": {
            "type": "string",
            "title": "Error Code",
            "description": "Unique identifier for the error type",
            "example": "RESOURCE_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Human-readable error message",
            "example": "The requested resource was not found"
          },
          "details": {
            "type": "object",
            "title": "Details",
            "description": "Additional error-specific information",
            "example": {
              "resource_id": "123",
              "resource_type": "workflow"
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "ISO 8601 timestamp when the error occurred",
            "example": "2024-01-15T10:30:00Z"
          },
          "path": {
            "type": "string",
            "title": "Path",
            "description": "API endpoint path where the error occurred",
            "example": "/api/v1/workflows/123"
          },
          "method": {
            "type": "string",
            "title": "Method",
            "description": "HTTP method used in the request",
            "example": "GET"
          },
          "request_id": {
            "type": "string",
            "title": "Request ID",
            "description": "Unique identifier for request tracking",
            "example": "req_123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "title": "ErrorDetail",
        "description": "Detailed error information"
      },
      "ValidationErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "title": "ValidationErrorResponse",
        "description": "Error response for validation failures",
        "example": {
          "error": {
            "error_code": "VALIDATION_ERROR",
            "message": "Validation failed for request data",
            "details": {
              "field_errors": [
                {
                  "field": "email",
                  "message": "Invalid email format"
                },
                {
                  "field": "password",
                  "message": "Password must be at least 8 characters"
                }
              ]
            },
            "timestamp": "2024-01-15T10:30:00Z",
            "path": "/api/v1/auth/register",
            "method": "POST",
            "request_id": "req_123e4567-e89b-12d3-a456-426614174000"
          }
        }
      },
      "AuthenticationErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "title": "AuthenticationErrorResponse",
        "description": "Error response for authentication failures",
        "example": {
          "error": {
            "error_code": "AUTHENTICATION_FAILED",
            "message": "Invalid credentials provided",
            "details": {
              "reason": "username_or_password_incorrect"
            },
            "timestamp": "2024-01-15T10:30:00Z",
            "path": "/api/v1/auth/login",
            "method": "POST",
            "request_id": "req_234f5678-f90c-23e4-b567-537725285111"
          }
        }
      },
      "AuthorizationErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "title": "AuthorizationErrorResponse",
        "description": "Error response for authorization failures",
        "example": {
          "error": {
            "error_code": "INSUFFICIENT_PERMISSIONS",
            "message": "Access denied: insufficient permissions",
            "details": {
              "required_permission": "workflow:delete",
              "user_permissions": [
                "workflow:read",
                "workflow:create"
              ]
            },
            "timestamp": "2024-01-15T10:30:00Z",
            "path": "/api/v1/workflows/123",
            "method": "DELETE",
            "request_id": "req_345g6789-g01d-34f5-c678-648836396222"
          }
        }
      },
      "ResourceNotFoundErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "title": "ResourceNotFoundErrorResponse",
        "description": "Error response for resource not found",
        "example": {
          "error": {
            "error_code": "RESOURCE_NOT_FOUND",
            "message": "Workflow not found",
            "details": {
              "resource_type": "workflow",
              "resource_id": "wf_nonexistent123"
            },
            "timestamp": "2024-01-15T10:30:00Z",
            "path": "/api/v1/workflows/wf_nonexistent123",
            "method": "GET",
            "request_id": "req_456h7890-h12e-45g6-d789-759947407333"
          }
        }
      },
      "ResourceConflictErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "title": "ResourceConflictErrorResponse",
        "description": "Error response for resource conflicts",
        "example": {
          "error": {
            "error_code": "RESOURCE_CONFLICT",
            "message": "Email address already registered",
            "details": {
              "conflict_field": "email",
              "conflict_value": "user@example.com"
            },
            "timestamp": "2024-01-15T10:30:00Z",
            "path": "/api/v1/auth/register",
            "method": "POST",
            "request_id": "req_567i8901-i23f-56h7-e890-860058518444"
          }
        }
      },
      "RateLimitErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "title": "RateLimitErrorResponse",
        "description": "Error response for rate limit exceeded",
        "example": {
          "error": {
            "error_code": "RATE_LIMIT_EXCEEDED",
            "message": "Rate limit exceeded",
            "details": {
              "limit": 100,
              "window": "3600s",
              "retry_after": 1800
            },
            "timestamp": "2024-01-15T10:30:00Z",
            "path": "/api/v1/llm/generate",
            "method": "POST",
            "request_id": "req_789k0123-k45h-78j9-g012-082270730666"
          }
        }
      },
      "InternalServerErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "title": "InternalServerErrorResponse",
        "description": "Error response for internal server errors",
        "example": {
          "error": {
            "error_code": "INTERNAL_SERVER_ERROR",
            "message": "An unexpected error occurred",
            "details": {
              "error_type": "DatabaseConnectionError"
            },
            "timestamp": "2024-01-15T10:30:00Z",
            "path": "/api/v1/workflows",
            "method": "GET",
            "request_id": "req_890l1234-l56i-89k0-h123-193381841777"
          }
        }
      },
      "ExternalServiceErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        ],
        "title": "ExternalServiceErrorResponse",
        "description": "Error response for external service errors",
        "example": {
          "error": {
            "error_code": "LLM_PROVIDER_ERROR",
            "message": "LLM provider service unavailable",
            "details": {
              "provider": "openai",
              "service_status": "timeout",
              "retry_suggested": true
            },
            "timestamp": "2024-01-15T10:30:00Z",
            "path": "/api/v1/llm/generate",
            "method": "POST",
            "request_id": "req_901m2345-m67j-90l1-i234-204492952888"
          }
        }
      },
      "AgentToolCreate": {
        "properties": {
          "tool_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tool Id",
            "description": "ID da ferramenta"
          },
          "config": {
            "type": "object",
            "additionalProperties": true,
            "title": "Config",
            "description": "Configura√ß√£o da ferramenta",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "tool_id"
        ],
        "title": "AgentToolCreate"
      },
      "AgentToolUpdate": {
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": true,
            "title": "Config",
            "description": "Nova configura√ß√£o da ferramenta"
          }
        },
        "type": "object",
        "required": [
          "config"
        ],
        "title": "AgentToolUpdate"
      },
      "AgentToolResponse": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "ID do agent"
          },
          "tool_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tool Id",
            "description": "ID da ferramenta"
          },
          "config": {
            "type": "object",
            "additionalProperties": true,
            "title": "Config",
            "description": "Configura√ß√£o da ferramenta",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "tool_id"
        ],
        "title": "AgentToolResponse"
      },
      "AgentToolListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentToolResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "AgentToolListResponse"
      },
      "AgentModelCreate": {
        "properties": {
          "llm_id": {
            "type": "string",
            "format": "uuid",
            "title": "LLM Id",
            "description": "ID do LLM"
          },
          "override": {
            "type": "object",
            "additionalProperties": true,
            "title": "Override",
            "description": "Configura√ß√µes que sobrescrevem o LLM",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "llm_id"
        ],
        "title": "AgentModelCreate"
      },
      "AgentModelUpdate": {
        "properties": {
          "override": {
            "type": "object",
            "additionalProperties": true,
            "title": "Override",
            "description": "Novas configura√ß√µes de override"
          }
        },
        "type": "object",
        "required": [
          "override"
        ],
        "title": "AgentModelUpdate"
      },
      "AgentModelResponse": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "ID do agent"
          },
          "llm_id": {
            "type": "string",
            "format": "uuid",
            "title": "LLM Id",
            "description": "ID do LLM"
          },
          "override": {
            "type": "object",
            "additionalProperties": true,
            "title": "Override",
            "description": "Configura√ß√µes que sobrescrevem o LLM",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "llm_id"
        ],
        "title": "AgentModelResponse"
      },
      "AgentModelListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentModelResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "AgentModelListResponse"
      },
      "AgentConfigurationCreate": {
        "properties": {
          "params": {
            "type": "object",
            "additionalProperties": true,
            "title": "Params",
            "description": "Par√¢metros da configura√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "params"
        ],
        "title": "AgentConfigurationCreate"
      },
      "AgentConfigurationResponse": {
        "properties": {
          "config_id": {
            "type": "string",
            "format": "uuid",
            "title": "Config Id",
            "description": "ID da configura√ß√£o"
          },
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "ID do agent"
          },
          "version_num": {
            "type": "integer",
            "title": "Version Num",
            "description": "N√∫mero da vers√£o"
          },
          "params": {
            "type": "object",
            "additionalProperties": true,
            "title": "Params",
            "description": "Par√¢metros da configura√ß√£o"
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "title": "Created By",
            "description": "ID do usu√°rio que criou"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data/hora de cria√ß√£o"
          }
        },
        "type": "object",
        "required": [
          "config_id",
          "agent_id",
          "version_num",
          "params",
          "created_by",
          "created_at"
        ],
        "title": "AgentConfigurationResponse"
      },
      "AgentConfigurationListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentConfigurationResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "current_version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Version"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "AgentConfigurationListResponse"
      },
      "AgentACLCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "ID do usu√°rio"
          },
          "can_read": {
            "type": "boolean",
            "title": "Can Read",
            "description": "Permiss√£o de leitura",
            "default": true
          },
          "can_write": {
            "type": "boolean",
            "title": "Can Write",
            "description": "Permiss√£o de escrita",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "AgentACLCreate"
      },
      "AgentACLResponse": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "ID do agent"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "ID do usu√°rio"
          },
          "can_read": {
            "type": "boolean",
            "title": "Can Read",
            "description": "Permiss√£o de leitura"
          },
          "can_write": {
            "type": "boolean",
            "title": "Can Write",
            "description": "Permiss√£o de escrita"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "user_id",
          "can_read",
          "can_write"
        ],
        "title": "AgentACLResponse"
      },
      "AgentACLListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentACLResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "AgentACLListResponse"
      },
      "AgentErrorLogCreate": {
        "properties": {
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code",
            "description": "C√≥digo do erro"
          },
          "payload": {
            "anyOf": [
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Payload",
            "description": "Dados do erro"
          }
        },
        "type": "object",
        "title": "AgentErrorLogCreate"
      },
      "AgentErrorLogResponse": {
        "properties": {
          "error_id": {
            "type": "string",
            "format": "uuid",
            "title": "Error Id",
            "description": "ID do erro"
          },
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "ID do agent"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At",
            "description": "Data/hora do erro"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code",
            "description": "C√≥digo do erro"
          },
          "payload": {
            "anyOf": [
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Payload",
            "description": "Dados do erro"
          }
        },
        "type": "object",
        "required": [
          "error_id",
          "agent_id",
          "occurred_at"
        ],
        "title": "AgentErrorLogResponse"
      },
      "AgentErrorLogListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentErrorLogResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "AgentErrorLogListResponse"
      },
      "AgentUsageMetricResponse": {
        "properties": {
          "metric_id": {
            "type": "string",
            "format": "uuid",
            "title": "Metric Id",
            "description": "ID da m√©trica"
          },
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "ID do agent"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start",
            "description": "In√≠cio do per√≠odo"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End",
            "description": "Fim do per√≠odo"
          },
          "calls_count": {
            "type": "integer",
            "minimum": 0,
            "title": "Calls Count",
            "description": "N√∫mero de chamadas"
          },
          "tokens_used": {
            "type": "integer",
            "minimum": 0,
            "title": "Tokens Used",
            "description": "Tokens utilizados"
          },
          "cost_est": {
            "type": "number",
            "minimum": 0,
            "title": "Cost Est",
            "description": "Custo estimado"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Data de cria√ß√£o"
          },
          "cost_per_token": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Per Token",
            "description": "Custo por token"
          },
          "avg_tokens_per_call": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Tokens Per Call",
            "description": "M√©dia de tokens por chamada"
          }
        },
        "type": "object",
        "required": [
          "metric_id",
          "agent_id",
          "period_start",
          "period_end",
          "calls_count",
          "tokens_used",
          "cost_est",
          "created_at"
        ],
        "title": "AgentUsageMetricResponse"
      },
      "AgentUsageMetricListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentUsageMetricResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "AgentUsageMetricListResponse"
      },
      "AgentUsageMetricSummary": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "ID do agent"
          },
          "total_calls": {
            "type": "integer",
            "title": "Total Calls",
            "description": "Total de chamadas"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "description": "Total de tokens"
          },
          "total_cost": {
            "type": "number",
            "title": "Total Cost",
            "description": "Custo total"
          },
          "avg_cost_per_call": {
            "type": "number",
            "title": "Avg Cost Per Call",
            "description": "Custo m√©dio por chamada"
          },
          "avg_tokens_per_call": {
            "type": "number",
            "title": "Avg Tokens Per Call",
            "description": "Tokens m√©dios por chamada"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start",
            "description": "In√≠cio do per√≠odo analisado"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End",
            "description": "Fim do per√≠odo analisado"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "total_calls",
          "total_tokens",
          "total_cost",
          "avg_cost_per_call",
          "avg_tokens_per_call",
          "period_start",
          "period_end"
        ],
        "title": "AgentUsageMetricSummary"
      },
      "AgentKBCreate": {
        "properties": {
          "kb_id": {
            "type": "string",
            "format": "uuid",
            "title": "KB Id",
            "description": "ID da knowledge base"
          },
          "config": {
            "type": "object",
            "additionalProperties": true,
            "title": "Config",
            "description": "Configura√ß√£o da KB",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "kb_id"
        ],
        "title": "AgentKBCreate"
      },
      "AgentKBResponse": {
        "properties": {
          "agent_id": {
            "type": "string",
            "format": "uuid",
            "title": "Agent Id",
            "description": "ID do agent"
          },
          "kb_id": {
            "type": "string",
            "format": "uuid",
            "title": "KB Id",
            "description": "ID da knowledge base"
          },
          "config": {
            "type": "object",
            "additionalProperties": true,
            "title": "Config",
            "description": "Configura√ß√£o da KB",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "kb_id"
        ],
        "title": "AgentKBResponse"
      },
      "AgentKBListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AgentKBResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "AgentKBListResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "üîë **Token JWT** - Obtenha um token atrav√©s do endpoint /auth/login ou /auth/docs-login"
      },
      "HTTPBasic": {
        "type": "http",
        "scheme": "basic",
        "description": "üîê **Login Direto** - Digite seu email no campo 'Username' e sua senha no campo 'Password'"
      }
    }
  },
  "tags": [
    {
      "name": "authentication",
      "description": "üîê Autentica√ß√£o, login, registro e gerenciamento de conta"
    },
    {
      "name": "root",
      "description": "üè† Endpoint raiz da aplica√ß√£o"
    },
    {
      "name": "health",
      "description": "üè• Sa√∫de e status do sistema"
    },
    {
      "name": "info",
      "description": "‚ÑπÔ∏è Informa√ß√µes da API e configura√ß√µes"
    },
    {
      "name": "workspaces",
      "description": "üè¢ Cria√ß√£o e gest√£o de workspaces"
    },
    {
      "name": "workspace-members",
      "description": "üë• Gerenciamento de membros"
    },
    {
      "name": "workspace-activities",
      "description": "üìä Hist√≥rico de atividades"
    },
    {
      "name": "workflows",
      "description": "‚öôÔ∏è Cria√ß√£o e gest√£o de workflows"
    },
    {
      "name": "executions",
      "description": "‚ñ∂Ô∏è Execu√ß√£o de workflows"
    },
    {
      "name": "executions-control",
      "description": "üéÆ Controle de execu√ß√µes (pausar, cancelar, retry)"
    },
    {
      "name": "executions-monitoring",
      "description": "üìä Monitoramento e logs de execu√ß√µes"
    },
    {
      "name": "nodes",
      "description": "üîó N√≥s e componentes para workflows"
    },
    {
      "name": "templates",
      "description": "üìã Templates e modelos pr√©-configurados"
    },
    {
      "name": "llm",
      "description": "ü§ñ Modelos de linguagem e IA"
    },
    {
      "name": "agents",
      "description": "üéØ Agentes inteligentes"
    },
    {
      "name": "conversations",
      "description": "üí¨ Conversas com agentes IA"
    },
    {
      "name": "marketplace",
      "description": "üõí Marketplace de componentes"
    },
    {
      "name": "marketplace-components",
      "description": "üì¶ Componentes dispon√≠veis"
    },
    {
      "name": "marketplace-ratings",
      "description": "‚≠ê Avalia√ß√µes e reviews"
    },
    {
      "name": "analytics",
      "description": "üìä Analytics e m√©tricas gerais"
    },
    {
      "name": "dashboards",
      "description": "üìà Dashboards personalizados"
    },
    {
      "name": "reports",
      "description": "üìã Relat√≥rios e exporta√ß√µes"
    },
    {
      "name": "analysis",
      "description": "üîç An√°lises estat√≠sticas"
    },
    {
      "name": "export",
      "description": "üì§ Exporta√ß√£o de dados"
    },
    {
      "name": "alerts",
      "description": "üö® Alertas e notifica√ß√µes"
    },
    {
      "name": "files",
      "description": "üìé Upload e gerenciamento de arquivos"
    },
    {
      "name": "user-variables",
      "description": "üîß Vari√°veis e configura√ß√µes do usu√°rio"
    },
    {
      "name": "websockets",
      "description": "üîå Conex√µes WebSocket em tempo real"
    },
    {
      "name": "admin",
      "description": "üëë Funcionalidades administrativas"
    }
  ],
  "security": [
    {
      "HTTPBearer": []
    },
    {
      "HTTPBasic": []
    }
  ]
}