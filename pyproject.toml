[tool.poetry]
name = "synapse-backend"
version = "1.0.0"
description = "Backend para a plataforma SynapScale de integração com LLMs"
authors = ["SynapScale Team <team@synapscale.com>"]
readme = "README.md"
license = "MIT"
packages = [{include = "synapse", from = "src"}]
[tool.poetry.dependencies]
python = "^3.9"
fastapi = "0.109.2"
uvicorn = "^0.23.2"
sqlalchemy = "^2.0.20"
alembic = "^1.12.0"
pydantic = "^2.3.0"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
aiofiles = "^23.2.1"
redis = "^5.0.0"
pillow = "^10.0.0"
gunicorn = "^21.2.0"
aiosqlite = "^0.19.0"
pydantic-settings = "^2.9.1"
requests = "^2.32.3"
tiktoken = "^0.9.0"
pyjwt = "^2.10.1"
asyncpg = "^0.30.0"
[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
httpx = "^0.24.1"
black = "^23.7.0"
flake8 = "^6.1.0"
mypy = "^1.5.1"
bandit = "^1.7.5"
isort = "^5.12.0"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
[tool.black]
line-length = 88
target-version = ["py39"]
[tool.isort]
profile = "black"
line_length = 88
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_mode = "auto"
[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
