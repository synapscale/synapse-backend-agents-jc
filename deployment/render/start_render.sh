#!/bin/bash
# start_render.sh - Script de inicializa√ß√£o para o Render

set -e

echo "üöÄ Iniciando SynapScale Backend no Render..."

# Mostrar onde estamos e o que temos
echo "‚úÖ Diret√≥rio atual: $(pwd)"
echo "‚úÖ PYTHONPATH: $PYTHONPATH"

# Verificar se os arquivos essenciais existem
# No Render, o projeto √© copiado e estamos no diret√≥rio raiz
if [ ! -f "src/synapse/main.py" ]; then
    echo "‚ùå ERRO: src/synapse/main.py n√£o encontrado!"
    echo "üìÅ Conte√∫do do diret√≥rio atual:"
    ls -la
    exit 1
fi

echo "‚úÖ Arquivo src/synapse/main.py encontrado!"

# Navegar para o diret√≥rio src onde est√° o c√≥digo
cd src

# Configurar PYTHONPATH para incluir o diret√≥rio src
export PYTHONPATH="$(pwd):$PYTHONPATH"
echo "‚úÖ PYTHONPATH configurado: $PYTHONPATH"
echo "‚úÖ Diret√≥rio de trabalho atual: $(pwd)"

# Definir valor padr√£o para BACKEND_CORS_ORIGINS
export BACKEND_CORS_ORIGINS='["http://localhost:3000", "http://127.0.0.1:3000"]'
echo "‚úÖ BACKEND_CORS_ORIGINS configurado: $BACKEND_CORS_ORIGINS"

# Definir valor padr√£o para ALLOWED_EXTENSIONS
export ALLOWED_EXTENSIONS='[".txt", ".pdf", ".doc", ".docx", ".csv", ".json", ".xml"]'
echo "‚úÖ ALLOWED_EXTENSIONS configurado: $ALLOWED_EXTENSIONS"

# Verificar se o m√≥dulo pode ser importado
echo "üîç Testando importa√ß√£o do m√≥dulo..."
python -c "
import sys
print('Python path:', sys.path)
try:
    import synapse
    print('‚úÖ M√≥dulo synapse importado com sucesso')
    from synapse.main import app
    print('‚úÖ Aplica√ß√£o FastAPI importada com sucesso')
except ImportError as e:
    print(f'‚ùå Erro na importa√ß√£o: {e}')
    import traceback
    traceback.print_exc()
    exit(1)
"

# Iniciar o servidor
echo "üöÄ Inicializando servidor FastAPI..."
exec python -m uvicorn synapse.main:app --host 0.0.0.0 --port ${PORT:-8000} --log-level info
