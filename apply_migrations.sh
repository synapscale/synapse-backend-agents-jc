#!/bin/bash

# Script para aplicar migra√ß√µes do banco de dados
# Criado por Jos√© - O melhor Full Stack do mundo

echo "üîÑ Aplicando migra√ß√µes do banco de dados..."

# Verificar se o diret√≥rio de migra√ß√µes existe
if [ ! -d "migrations" ]; then
    echo "‚ùå Diret√≥rio de migra√ß√µes n√£o encontrado"
    exit 1
fi

# Aplicar migra√ß√£o 001: user_variables
echo "üìù Aplicando migra√ß√£o 001: user_variables"
python3 migrations/001_create_user_variables.py
if [ $? -eq 0 ]; then
    echo "‚úÖ Migra√ß√£o 001 aplicada com sucesso!"
else
    echo "‚ùå Erro na migra√ß√£o 001"
    exit 1
fi

# Aplicar migra√ß√£o 002: workflow_executions
echo "üìù Aplicando migra√ß√£o 002: workflow_executions"
python3 migrations/002_create_workflow_executions.py
if [ $? -eq 0 ]; then
    echo "‚úÖ Migra√ß√£o 002 aplicada com sucesso!"
else
    echo "‚ùå Erro na migra√ß√£o 002"
    exit 1
fi

# Aplicar migra√ß√£o 003: templates
echo "üì¶ Aplicando migra√ß√£o 003: Templates..."
if python3 migrations/003_create_templates.py "$DB_PATH"; then
    echo "‚úÖ Migra√ß√£o 003 aplicada com sucesso!"
else
    echo "‚ùå Erro na migra√ß√£o 003"
    exit 1
fi

# Aplicar migra√ß√£o 004: configura√ß√µes de executores
echo "üîß Aplicando migra√ß√£o 004: Configura√ß√µes de executores..."
if python3 migrations/004_create_executor_configs.py "$DB_PATH"; then
    echo "‚úÖ Migra√ß√£o 004 aplicada com sucesso!"
else
    echo "‚ùå Erro na migra√ß√£o 004"
    exit 1
fi

# Aplicar migra√ß√£o 005: tabelas da Fase 4
echo "üöÄ Aplicando migra√ß√£o 005: Tabelas da Fase 4..."
if python3 migrations/005_create_fase4_tables.py "$DB_PATH"; then
    echo "‚úÖ Migra√ß√£o 005 aplicada com sucesso!"
else
    echo "‚ùå Erro na migra√ß√£o 005"
    exit 1
fi

# Aplicar migra√ß√µes via ORM (para garantir que todas as tabelas existem)
echo "üìù Aplicando migra√ß√µes via ORM"
python3 -c "
import sys
sys.path.append('src')

from synapse.database import engine, Base
from synapse.models import *

# Criar todas as tabelas
Base.metadata.create_all(bind=engine)
print('‚úÖ Todas as tabelas verificadas/criadas via ORM!')
"

echo "üéâ Todas as migra√ß√µes aplicadas com sucesso!"
echo "üìä Tabelas dispon√≠veis:"
echo "   - users (usu√°rios)"
echo "   - user_variables (vari√°veis personalizadas)"
echo "   - workflows (workflows)"
echo "   - nodes (n√≥s de workflows)"
echo "   - workflow_executions (execu√ß√µes de workflows)"
echo "   - node_executions (execu√ß√µes de n√≥s)"
echo "   - execution_queue (fila de execu√ß√£o)"
echo "   - execution_metrics (m√©tricas de performance)"
echo "   - workflow_templates (templates de workflows)"
echo "   - template_reviews (avalia√ß√µes de templates)"
echo "   - template_downloads (downloads de templates)"
echo "   - template_favorites (favoritos)"
echo "   - template_collections (cole√ß√µes de templates)"
echo "   - template_usage (analytics de uso)"
echo "   - executor_configs (configura√ß√µes de executores)"
echo "   üè™ MARKETPLACE (6 tabelas):"
echo "     - marketplace_components (componentes)"
echo "     - component_ratings (avalia√ß√µes)"
echo "     - component_downloads (downloads)"
echo "     - component_purchases (compras)"
echo "     - component_favorites (favoritos)"
echo "     - component_versions (vers√µes)"
echo "   üë• WORKSPACES (8 tabelas):"
echo "     - workspaces (workspaces)"
echo "     - workspace_members (membros)"
echo "     - workspace_invitations (convites)"
echo "     - workspace_projects (projetos)"
echo "     - project_collaborators (colaboradores)"
echo "     - project_comments (coment√°rios)"
echo "     - workspace_activities (atividades)"
echo "     - project_versions (vers√µes de projetos)"
echo "   üìà ANALYTICS (7 tabelas):"
echo "     - analytics_events (eventos)"
echo "     - analytics_metrics (m√©tricas)"
echo "     - analytics_dashboards (dashboards)"
echo "     - analytics_reports (relat√≥rios)"
echo "     - report_executions (execu√ß√µes de relat√≥rios)"
echo "     - analytics_alerts (alertas)"
echo "     - analytics_exports (exporta√ß√µes)"
echo ""
echo "üöÄ Total: 37+ tabelas implementadas com extrema perfei√ß√£o!"
echo "üí™ SynapScale est√° pronto para produ√ß√£o!"

