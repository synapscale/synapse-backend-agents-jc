{
  "metadata": {
    "title": "SynapScale Backend API - Documentação Semântica",
    "version": "1.0.0",
    "description": "Documentação estruturada para consumo por agentes de IA do backend SynapScale",
    "created_at": "2025-05-27",
    "updated_at": "2025-05-27",
    "schema_version": "1.0"
  },
  "system": {
    "name": "SynapScale Backend",
    "purpose": "Plataforma para integração com múltiplos provedores de LLM (Large Language Models), oferecendo infraestrutura escalável e segura para aplicações baseadas em IA",
    "architecture": "Microserviços com API RESTful",
    "primary_language": "Python",
    "frameworks": ["FastAPI", "SQLAlchemy", "Pydantic"],
    "database": "PostgreSQL/SQLite",
    "authentication": "JWT"
  },
  "components": [
    {
      "name": "API Layer",
      "path": "src/synapse/api",
      "purpose": "Receber e responder às requisições HTTP",
      "subcomponents": [
        {
          "name": "v1",
          "path": "src/synapse/api/v1",
          "purpose": "Endpoints da versão 1 da API",
          "endpoints": [
            {
              "path": "/api/v1/files/upload",
              "method": "POST",
              "purpose": "Upload de arquivo",
              "requires_auth": true,
              "input_format": "multipart/form-data",
              "parameters": [
                {"name": "file", "type": "file", "required": true, "description": "Arquivo a ser enviado"},
                {"name": "category", "type": "string", "required": true, "description": "Categoria do arquivo (image, video, audio, document, archive)"},
                {"name": "tags", "type": "string", "required": false, "description": "Tags separadas por vírgula"},
                {"name": "description", "type": "string", "required": false, "description": "Descrição do arquivo"},
                {"name": "is_public", "type": "boolean", "required": false, "description": "Se o arquivo é público", "default": false}
              ],
              "output_format": "application/json",
              "output_schema": {
                "file_id": "UUID",
                "message": "string"
              },
              "error_codes": [400, 401, 413, 422, 429, 500],
              "related_components": ["FileService", "SecurityValidator", "StorageManager"]
            },
            {
              "path": "/api/v1/files",
              "method": "GET",
              "purpose": "Listar arquivos",
              "requires_auth": true,
              "input_format": "query parameters",
              "parameters": [
                {"name": "page", "type": "integer", "required": false, "description": "Número da página", "default": 1},
                {"name": "size", "type": "integer", "required": false, "description": "Tamanho da página", "default": 10},
                {"name": "category", "type": "string", "required": false, "description": "Filtrar por categoria"}
              ],
              "output_format": "application/json",
              "output_schema": {
                "items": "array of FileResponse",
                "total": "integer",
                "page": "integer",
                "size": "integer",
                "pages": "integer"
              },
              "error_codes": [401, 500],
              "related_components": ["FileService"]
            },
            {
              "path": "/api/v1/files/{file_id}",
              "method": "GET",
              "purpose": "Obter informações do arquivo",
              "requires_auth": true,
              "input_format": "path parameter",
              "parameters": [
                {"name": "file_id", "type": "UUID", "required": true, "description": "ID do arquivo"}
              ],
              "output_format": "application/json",
              "output_schema": "FileResponse",
              "error_codes": [401, 404, 500],
              "related_components": ["FileService"]
            },
            {
              "path": "/api/v1/files/{file_id}/download",
              "method": "GET",
              "purpose": "Gerar URL de download",
              "requires_auth": true,
              "input_format": "path parameter",
              "parameters": [
                {"name": "file_id", "type": "UUID", "required": true, "description": "ID do arquivo"}
              ],
              "output_format": "application/json",
              "output_schema": {
                "download_url": "string",
                "expires_at": "datetime"
              },
              "error_codes": [401, 404, 500],
              "related_components": ["FileService", "StorageManager"]
            },
            {
              "path": "/api/v1/files/{file_id}",
              "method": "PATCH",
              "purpose": "Atualizar informações do arquivo",
              "requires_auth": true,
              "input_format": "application/json",
              "parameters": [
                {"name": "file_id", "type": "UUID", "required": true, "description": "ID do arquivo"},
                {"name": "tags", "type": "array of string", "required": false, "description": "Tags do arquivo"},
                {"name": "description", "type": "string", "required": false, "description": "Descrição do arquivo"},
                {"name": "is_public", "type": "boolean", "required": false, "description": "Se o arquivo é público"}
              ],
              "output_format": "application/json",
              "output_schema": "FileResponse",
              "error_codes": [401, 404, 422, 500],
              "related_components": ["FileService"]
            },
            {
              "path": "/api/v1/files/{file_id}",
              "method": "DELETE",
              "purpose": "Remover arquivo",
              "requires_auth": true,
              "input_format": "path parameter",
              "parameters": [
                {"name": "file_id", "type": "UUID", "required": true, "description": "ID do arquivo"}
              ],
              "output_format": "No Content",
              "error_codes": [401, 404, 500],
              "related_components": ["FileService", "StorageManager"]
            }
          ]
        }
      ]
    },
    {
      "name": "Service Layer",
      "path": "src/synapse/services",
      "purpose": "Implementar lógica de negócio",
      "subcomponents": [
        {
          "name": "FileService",
          "path": "src/synapse/services/file_service.py",
          "purpose": "Gerenciar operações de arquivos",
          "methods": [
            {
              "name": "upload_file",
              "purpose": "Fazer upload de um arquivo",
              "parameters": [
                {"name": "db", "type": "AsyncSession", "description": "Sessão do banco de dados"},
                {"name": "file", "type": "UploadFile", "description": "Arquivo enviado"},
                {"name": "user_id", "type": "string", "description": "ID do usuário"},
                {"name": "file_data", "type": "FileCreate", "description": "Dados adicionais do arquivo"}
              ],
              "returns": "File",
              "exceptions": ["FileValidationError", "StorageError"],
              "related_components": ["SecurityValidator", "StorageManager", "File"]
            },
            {
              "name": "get_file",
              "purpose": "Obter informações de um arquivo",
              "parameters": [
                {"name": "db", "type": "AsyncSession", "description": "Sessão do banco de dados"},
                {"name": "file_id", "type": "UUID", "description": "ID do arquivo"},
                {"name": "user_id", "type": "string", "description": "ID do usuário (opcional)"}
              ],
              "returns": "File",
              "exceptions": ["NotFoundError"],
              "related_components": ["File"]
            },
            {
              "name": "list_files",
              "purpose": "Listar arquivos de um usuário",
              "parameters": [
                {"name": "db", "type": "AsyncSession", "description": "Sessão do banco de dados"},
                {"name": "user_id", "type": "string", "description": "ID do usuário"},
                {"name": "skip", "type": "integer", "description": "Número de registros para pular"},
                {"name": "limit", "type": "integer", "description": "Número máximo de registros"},
                {"name": "category", "type": "string", "description": "Filtrar por categoria (opcional)"}
              ],
              "returns": "Tuple[List[File], int]",
              "related_components": ["File"]
            },
            {
              "name": "update_file",
              "purpose": "Atualizar informações de um arquivo",
              "parameters": [
                {"name": "db", "type": "AsyncSession", "description": "Sessão do banco de dados"},
                {"name": "file_id", "type": "UUID", "description": "ID do arquivo"},
                {"name": "user_id", "type": "string", "description": "ID do usuário"},
                {"name": "file_data", "type": "FileUpdate", "description": "Dados atualizados"}
              ],
              "returns": "File",
              "exceptions": ["NotFoundError"],
              "related_components": ["File"]
            },
            {
              "name": "delete_file",
              "purpose": "Remover um arquivo",
              "parameters": [
                {"name": "db", "type": "AsyncSession", "description": "Sessão do banco de dados"},
                {"name": "file_id", "type": "UUID", "description": "ID do arquivo"},
                {"name": "user_id", "type": "string", "description": "ID do usuário"}
              ],
              "returns": "boolean",
              "exceptions": ["NotFoundError", "StorageError"],
              "related_components": ["StorageManager", "File"]
            },
            {
              "name": "generate_download_url",
              "purpose": "Gerar URL para download de um arquivo",
              "parameters": [
                {"name": "db", "type": "AsyncSession", "description": "Sessão do banco de dados"},
                {"name": "file_id", "type": "UUID", "description": "ID do arquivo"},
                {"name": "user_id", "type": "string", "description": "ID do usuário (opcional)"}
              ],
              "returns": "Dict[str, Union[str, datetime]]",
              "exceptions": ["NotFoundError"],
              "related_components": ["StorageManager", "File"]
            }
          ]
        }
      ]
    },
    {
      "name": "Core Layer",
      "path": "src/synapse/core",
      "purpose": "Componentes fundamentais utilizados por toda a aplicação",
      "subcomponents": [
        {
          "name": "Auth",
          "path": "src/synapse/core/auth",
          "purpose": "Autenticação e autorização",
          "methods": [
            {
              "name": "create_access_token",
              "purpose": "Criar token JWT",
              "parameters": [
                {"name": "data", "type": "dict", "description": "Dados para incluir no token"},
                {"name": "expires_delta", "type": "timedelta", "description": "Tempo de expiração (opcional)"}
              ],
              "returns": "string",
              "related_components": []
            },
            {
              "name": "get_current_user",
              "purpose": "Obter usuário atual a partir do token",
              "parameters": [
                {"name": "token", "type": "string", "description": "Token JWT"}
              ],
              "returns": "dict",
              "exceptions": ["HTTPException"],
              "related_components": []
            }
          ]
        },
        {
          "name": "Security",
          "path": "src/synapse/core/security",
          "purpose": "Validação e segurança de arquivos",
          "methods": [
            {
              "name": "validate_file_safety",
              "purpose": "Validar segurança de um arquivo",
              "parameters": [
                {"name": "content", "type": "bytes", "description": "Conteúdo do arquivo"},
                {"name": "filename", "type": "string", "description": "Nome do arquivo"},
                {"name": "mime_type", "type": "string", "description": "Tipo MIME"},
                {"name": "category", "type": "string", "description": "Categoria do arquivo"}
              ],
              "returns": "boolean",
              "exceptions": ["FileValidationError"],
              "related_components": []
            },
            {
              "name": "sanitize_filename",
              "purpose": "Sanitizar nome de arquivo",
              "parameters": [
                {"name": "filename", "type": "string", "description": "Nome original do arquivo"}
              ],
              "returns": "string",
              "related_components": []
            }
          ]
        },
        {
          "name": "Storage",
          "path": "src/synapse/core/storage",
          "purpose": "Gerenciamento de armazenamento",
          "methods": [
            {
              "name": "save_file",
              "purpose": "Salvar arquivo no armazenamento",
              "parameters": [
                {"name": "content", "type": "bytes", "description": "Conteúdo do arquivo"},
                {"name": "filename", "type": "string", "description": "Nome do arquivo"},
                {"name": "category", "type": "string", "description": "Categoria do arquivo"},
                {"name": "user_id", "type": "string", "description": "ID do usuário"}
              ],
              "returns": "dict",
              "exceptions": ["StorageError"],
              "related_components": []
            },
            {
              "name": "get_file",
              "purpose": "Obter conteúdo de um arquivo",
              "parameters": [
                {"name": "category", "type": "string", "description": "Categoria do arquivo"},
                {"name": "stored_name", "type": "string", "description": "Nome armazenado"}
              ],
              "returns": "bytes",
              "exceptions": ["StorageError"],
              "related_components": []
            },
            {
              "name": "delete_file",
              "purpose": "Remover arquivo do armazenamento",
              "parameters": [
                {"name": "category", "type": "string", "description": "Categoria do arquivo"},
                {"name": "stored_name", "type": "string", "description": "Nome armazenado"}
              ],
              "returns": "boolean",
              "exceptions": ["StorageError"],
              "related_components": []
            },
            {
              "name": "generate_download_url",
              "purpose": "Gerar URL para download",
              "parameters": [
                {"name": "category", "type": "string", "description": "Categoria do arquivo"},
                {"name": "stored_name", "type": "string", "description": "Nome armazenado"}
              ],
              "returns": "string",
              "exceptions": ["StorageError"],
              "related_components": []
            }
          ]
        }
      ]
    },
    {
      "name": "Data Layer",
      "path": "src/synapse/db",
      "purpose": "Gerenciar persistência e acesso a dados",
      "subcomponents": [
        {
          "name": "Models",
          "path": "src/synapse/models",
          "purpose": "Modelos SQLAlchemy para o banco de dados",
          "entities": [
            {
              "name": "File",
              "path": "src/synapse/models/file.py",
              "purpose": "Modelo de dados para arquivos",
              "attributes": [
                {"name": "id", "type": "UUID", "description": "ID único do arquivo", "primary_key": true},
                {"name": "user_id", "type": "String", "description": "ID do usuário proprietário"},
                {"name": "filename", "type": "String", "description": "Nome original do arquivo"},
                {"name": "stored_name", "type": "String", "description": "Nome do arquivo no armazenamento"},
                {"name": "category", "type": "String", "description": "Categoria do arquivo"},
                {"name": "mime_type", "type": "String", "description": "Tipo MIME do arquivo"},
                {"name": "size", "type": "String", "description": "Tamanho do arquivo em bytes"},
                {"name": "checksum", "type": "String", "description": "Hash MD5 do conteúdo"},
                {"name": "tags", "type": "ARRAY(String)", "description": "Tags para categorização"},
                {"name": "description", "type": "Text", "description": "Descrição do arquivo"},
                {"name": "is_public", "type": "String", "description": "Se o arquivo é público"},
                {"name": "status", "type": "String", "description": "Status de processamento"},
                {"name": "storage_path", "type": "String", "description": "Caminho de armazenamento"},
                {"name": "created_at", "type": "DateTime", "description": "Data de criação"},
                {"name": "updated_at", "type": "DateTime", "description": "Data de última atualização"}
              ],
              "indexes": [
                {"name": "ix_files_category", "columns": ["category"]},
                {"name": "ix_files_is_public", "columns": ["is_public"]},
                {"name": "ix_files_status", "columns": ["status"]}
              ]
            }
          ]
        },
        {
          "name": "Schemas",
          "path": "src/synapse/schemas",
          "purpose": "Schemas Pydantic para validação e serialização",
          "entities": [
            {
              "name": "FileBase",
              "path": "src/synapse/schemas/file.py",
              "purpose": "Esquema base para arquivos",
              "attributes": [
                {"name": "filename", "type": "str", "description": "Nome original do arquivo"},
                {"name": "category", "type": "str", "description": "Categoria do arquivo"}
              ],
              "validators": [
                {"name": "validate_category", "description": "Valida se a categoria é permitida"}
              ]
            },
            {
              "name": "FileCreate",
              "path": "src/synapse/schemas/file.py",
              "purpose": "Esquema para criação de arquivo",
              "inherits": "FileBase",
              "attributes": [
                {"name": "tags", "type": "Optional[List[str]]", "description": "Tags para categorização"},
                {"name": "description", "type": "Optional[str]", "description": "Descrição do arquivo"},
                {"name": "is_public", "type": "bool", "description": "Se o arquivo é público", "default": false}
              ]
            },
            {
              "name": "FileUpdate",
              "path": "src/synapse/schemas/file.py",
              "purpose": "Esquema para atualização de arquivo",
              "attributes": [
                {"name": "tags", "type": "Optional[List[str]]", "description": "Tags para categorização"},
                {"name": "description", "type": "Optional[str]", "description": "Descrição do arquivo"},
                {"name": "is_public", "type": "Optional[bool]", "description": "Se o arquivo é público"}
              ]
            },
            {
              "name": "FileInDB",
              "path": "src/synapse/schemas/file.py",
              "purpose": "Esquema para arquivo no banco de dados",
              "inherits": "FileBase",
              "attributes": [
                {"name": "id", "type": "UUID", "description": "ID único do arquivo"},
                {"name": "user_id", "type": "str", "description": "ID do usuário proprietário"},
                {"name": "stored_name", "type": "str", "description": "Nome do arquivo no armazenamento"},
                {"name": "mime_type", "type": "str", "description": "Tipo MIME do arquivo"},
                {"name": "size", "type": "str", "description": "Tamanho do arquivo em bytes"},
                {"name": "checksum", "type": "str", "description": "Hash MD5 do conteúdo"},
                {"name": "tags", "type": "Optional[List[str]]", "description": "Tags para categorização"},
                {"name": "description", "type": "Optional[str]", "description": "Descrição do arquivo"},
                {"name": "is_public", "type": "bool", "description": "Se o arquivo é público"},
                {"name": "status", "type": "str", "description": "Status de processamento"},
                {"name": "storage_path", "type": "str", "description": "Caminho de armazenamento"},
                {"name": "created_at", "type": "datetime", "description": "Data de criação"},
                {"name": "updated_at", "type": "datetime", "description": "Data de última atualização"}
              ],
              "config": {"orm_mode": true}
            },
            {
              "name": "FileResponse",
              "path": "src/synapse/schemas/file.py",
              "purpose": "Esquema para resposta de arquivo",
              "inherits": "FileBase",
              "attributes": [
                {"name": "id", "type": "UUID", "description": "ID único do arquivo"},
                {"name": "user_id", "type": "str", "description": "ID do usuário proprietário"},
                {"name": "mime_type", "type": "str", "description": "Tipo MIME do arquivo"},
                {"name": "size", "type": "str", "description": "Tamanho do arquivo em bytes"},
                {"name": "tags", "type": "Optional[List[str]]", "description": "Tags para categorização"},
                {"name": "description", "type": "Optional[str]", "description": "Descrição do arquivo"},
                {"name": "is_public", "type": "bool", "description": "Se o arquivo é público"},
                {"name": "status", "type": "str", "description": "Status de processamento"},
                {"name": "created_at", "type": "datetime", "description": "Data de criação"},
                {"name": "updated_at", "type": "datetime", "description": "Data de última atualização"}
              ],
              "config": {"orm_mode": true}
            },
            {
              "name": "FileUploadResponse",
              "path": "src/synapse/schemas/file.py",
              "purpose": "Esquema para resposta de upload de arquivo",
              "attributes": [
                {"name": "file_id", "type": "UUID", "description": "ID único do arquivo"},
                {"name": "message", "type": "str", "description": "Mensagem de sucesso"}
              ]
            },
            {
              "name": "FileListResponse",
              "path": "src/synapse/schemas/file.py",
              "purpose": "Esquema para resposta de listagem de arquivos",
              "attributes": [
                {"name": "items", "type": "List[FileResponse]", "description": "Lista de arquivos"},
                {"name": "total", "type": "int", "description": "Total de arquivos"},
                {"name": "page", "type": "int", "description": "Página atual"},
                {"name": "size", "type": "int", "description": "Tamanho da página"},
                {"name": "pages", "type": "int", "description": "Total de páginas"}
              ]
            },
            {
              "name": "FileDownloadResponse",
              "path": "src/synapse/schemas/file.py",
              "purpose": "Esquema para resposta de download de arquivo",
              "attributes": [
                {"name": "download_url", "type": "str", "description": "URL para download do arquivo"},
                {"name": "expires_at", "type": "datetime", "description": "Data de expiração da URL"}
              ]
            }
          ]
        },
        {
          "name": "Database",
          "path": "src/synapse/db/base.py",
          "purpose": "Configuração e sessões do banco de dados",
          "methods": [
            {
              "name": "get_db",
              "purpose": "Dependência para obter sessão de banco de dados",
              "returns": "AsyncGenerator[AsyncSession, None]",
              "related_components": []
            },
            {
              "name": "init_db",
              "purpose": "Inicializa o banco de dados",
              "returns": "None",
              "exceptions": ["Exception"],
              "related_components": []
            }
          ]
        }
      ]
    }
  ],
  "flows": [
    {
      "name": "Upload de Arquivo",
      "description": "Fluxo para upload de arquivo",
      "steps": [
        {"order": 1, "component": "API Layer", "action": "Receber requisição POST para /api/v1/files/upload"},
        {"order": 2, "component": "Middleware", "action": "Verificar rate limiting"},
        {"order": 3, "component": "API Layer", "action": "Validar parâmetros de entrada"},
        {"order": 4, "component": "FileService", "action": "Validar segurança do arquivo"},
        {"order": 5, "component": "StorageManager", "action": "Armazenar arquivo"},
        {"order": 6, "component": "Database", "action": "Salvar metadados"},
        {"order": 7, "component": "API Layer", "action": "Retornar resposta com ID do arquivo"}
      ]
    },
    {
      "name": "Download de Arquivo",
      "description": "Fluxo para download de arquivo",
      "steps": [
        {"order": 1, "component": "API Layer", "action": "Receber requisição GET para /api/v1/files/{file_id}/download"},
        {"order": 2, "component": "Auth", "action": "Verificar autenticação e autorização"},
        {"order": 3, "component": "FileService", "action": "Verificar existência e permissão"},
        {"order": 4, "component": "StorageManager", "action": "Gerar URL temporária"},
        {"order": 5, "component": "API Layer", "action": "Retornar URL e data de expiração"}
      ]
    },
    {
      "name": "Listagem de Arquivos",
      "description": "Fluxo para listagem de arquivos",
      "steps": [
        {"order": 1, "component": "API Layer", "action": "Receber requisição GET para /api/v1/files"},
        {"order": 2, "component": "Auth", "action": "Verificar autenticação"},
        {"order": 3, "component": "FileService", "action": "Consultar banco de dados"},
        {"order": 4, "component": "FileService", "action": "Paginar resultados"},
        {"order": 5, "component": "API Layer", "action": "Retornar lista de arquivos e informações de paginação"}
      ]
    },
    {
      "name": "Atualização de Arquivo",
      "description": "Fluxo para atualização de informações de arquivo",
      "steps": [
        {"order": 1, "component": "API Layer", "action": "Receber requisição PATCH para /api/v1/files/{file_id}"},
        {"order": 2, "component": "Auth", "action": "Verificar autenticação e autorização"},
        {"order": 3, "component": "FileService", "action": "Verificar existência e propriedade"},
        {"order": 4, "component": "FileService", "action": "Atualizar informações"},
        {"order": 5, "component": "Database", "action": "Salvar alterações"},
        {"order": 6, "component": "API Layer", "action": "Retornar informações atualizadas"}
      ]
    },
    {
      "name": "Remoção de Arquivo",
      "description": "Fluxo para remoção de arquivo",
      "steps": [
        {"order": 1, "component": "API Layer", "action": "Receber requisição DELETE para /api/v1/files/{file_id}"},
        {"order": 2, "component": "Auth", "action": "Verificar autenticação e autorização"},
        {"order": 3, "component": "FileService", "action": "Verificar existência e propriedade"},
        {"order": 4, "component": "StorageManager", "action": "Remover arquivo do armazenamento"},
        {"order": 5, "component": "Database", "action": "Remover registro do banco de dados"},
        {"order": 6, "component": "API Layer", "action": "Retornar status 204 No Content"}
      ]
    }
  ],
  "configuration": {
    "environment_variables": [
      {"name": "ENVIRONMENT", "type": "string", "description": "Ambiente de execução", "options": ["development", "testing", "production"], "required": true},
      {"name": "PROJECT_NAME", "type": "string", "description": "Nome do projeto", "default": "SynapScale Backend", "required": true},
      {"name": "VERSION", "type": "string", "description": "Versão da API", "default": "1.0.0", "required": true},
      {"name": "API_V1_STR", "type": "string", "description": "Prefixo da API v1", "default": "/api/v1", "required": true},
      {"name": "SECRET_KEY", "type": "string", "description": "Chave para assinatura JWT", "required": true},
      {"name": "ALGORITHM", "type": "string", "description": "Algoritmo para JWT", "default": "HS256", "required": true},
      {"name": "ACCESS_TOKEN_EXPIRE_MINUTES", "type": "integer", "description": "Tempo de expiração do token", "default": 30, "required": true},
      {"name": "BACKEND_CORS_ORIGINS", "type": "string", "description": "Origens permitidas para CORS", "default": "http://localhost,http://localhost:8080,http://localhost:3000", "required": false},
      {"name": "DATABASE_URL", "type": "string", "description": "URL de conexão com o banco", "required": true},
      {"name": "REDIS_URL", "type": "string", "description": "URL de conexão com Redis", "default": "redis://localhost:6379/0", "required": false},
      {"name": "RATE_LIMIT_ENABLED", "type": "boolean", "description": "Habilitar rate limiting", "default": true, "required": false},
      {"name": "RATE_LIMIT_REQUESTS", "type": "integer", "description": "Número máximo de requisições", "default": 100, "required": false},
      {"name": "RATE_LIMIT_WINDOW", "type": "integer", "description": "Janela de tempo em segundos", "default": 3600, "required": false},
      {"name": "STORAGE_BASE_PATH", "type": "string", "description": "Diretório base para armazenamento", "default": "./storage", "required": true},
      {"name": "MAX_UPLOAD_SIZE", "type": "integer", "description": "Tamanho máximo de upload em bytes", "default": 104857600, "required": true},
      {"name": "ALLOWED_FILE_CATEGORIES", "type": "string", "description": "Categorias permitidas", "default": "image,video,audio,document,archive", "required": true},
      {"name": "LOG_LEVEL", "type": "string", "description": "Nível de logging", "options": ["DEBUG", "INFO", "WARNING", "ERROR"], "default": "INFO", "required": true},
      {"name": "LOG_FORMAT", "type": "string", "description": "Formato de logs", "options": ["json", "text"], "default": "json", "required": true}
    ]
  },
  "glossary": [
    {"term": "API", "definition": "Application Programming Interface, conjunto de regras que permite que diferentes softwares se comuniquem entre si"},
    {"term": "JWT", "definition": "JSON Web Token, método para transmitir informações de forma segura entre partes como um objeto JSON"},
    {"term": "REST", "definition": "Representational State Transfer, estilo de arquitetura para sistemas distribuídos"},
    {"term": "CORS", "definition": "Cross-Origin Resource Sharing, mecanismo que permite que recursos restritos em uma página web sejam solicitados de outro domínio"},
    {"term": "Rate Limiting", "definition": "Técnica para controlar a taxa de requisições que um cliente pode fazer a um serviço"},
    {"term": "ORM", "definition": "Object-Relational Mapping, técnica para converter dados entre sistemas de tipos incompatíveis em linguagens de programação orientadas a objetos"},
    {"term": "SQLAlchemy", "definition": "Biblioteca Python SQL toolkit e ORM"},
    {"term": "Pydantic", "definition": "Biblioteca para validação de dados e gerenciamento de configurações usando anotações de tipo Python"},
    {"term": "FastAPI", "definition": "Framework web moderno e rápido para construção de APIs com Python 3.6+"},
    {"term": "Middleware", "definition": "Software que atua como uma camada intermediária entre diferentes aplicações ou componentes"},
    {"term": "Endpoint", "definition": "URL específica em uma API que representa um recurso ou funcionalidade"},
    {"term": "Schema", "definition": "Estrutura que define a forma dos dados"},
    {"term": "UUID", "definition": "Universally Unique Identifier, identificador padrão usado em software para identificação única"},
    {"term": "Async/Await", "definition": "Padrão de programação assíncrona em Python para operações não bloqueantes"},
    {"term": "Docker", "definition": "Plataforma para desenvolvimento, envio e execução de aplicações em contêineres"},
    {"term": "PostgreSQL", "definition": "Sistema de gerenciamento de banco de dados relacional de código aberto"},
    {"term": "Redis", "definition": "Armazenamento de estrutura de dados em memória, usado como banco de dados, cache e message broker"},
    {"term": "Microserviços", "definition": "Abordagem arquitetônica para desenvolvimento de software onde aplicações são construídas como um conjunto de pequenos serviços"},
    {"term": "LLM", "definition": "Large Language Model, modelo de linguagem de grande escala treinado em grandes quantidades de texto"}
  ]
}
